{"version":3,"sources":["../../../src/ipcs/base/ptz.js"],"names":["_","require","EventEmitter","assert","Counter","Parser","_d","PTZ","options","_conn_counter","event","params","prototype","emit","call","extend","type","ok","inReference","addReference","log","count","isConnected","_connect","release","_disConnect","Error","stop","direction","x","y","z","exports","module"],"mappings":"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","file":"ptz.js","sourcesContent":["/**\r\n * Created by Luky on 2017/7/5.\r\n */\r\nconst _=require('lodash');\r\nconst EventEmitter=require('events').EventEmitter;\r\nconst assert=require('assert');\r\nconst Counter=require('./counter');\r\nconst {Parser} =require('../../log/log');\r\n\r\nconst _d={\r\n    'top':1,'down':2,'left':4,'right':8,\r\n    'lefttop':5,'righttop':9,'leftdown':6,'rightdown':10\r\n};\r\n\r\nclass PTZ extends  EventEmitter{\r\n    constructor(){\r\n        super();\r\n        this.options={};\r\n        this._conn_counter=new Counter();\r\n        Parser(this,'ptz.js',{});\r\n    }\r\n    static get Directions(){\r\n        return _d;\r\n    }\r\n    emit(event,params=null){\r\n        return EventEmitter.prototype.emit.call(event,_.extend({\r\n            type:event\r\n        },params));\r\n    }\r\n    get supportPTZ(){return true;}\r\n    get config(){return this.options;}\r\n    setConnected(){\r\n        assert.ok(!this._conn_counter.inReference);\r\n        this._conn_counter.addReference();\r\n        this.log('更新设备连接数',{count:this._conn_counter.count});\r\n    }\r\n    get isConnected(){return this._conn_counter.inReference}\r\n    async connect(){\r\n        if(this.isConnected) {\r\n            this._conn_counter.addReference();\r\n            this.log('更新设备连接数',{count:this._conn_counter.count});\r\n            return;\r\n        }\r\n        await this._connect();\r\n    }\r\n    async disConnect(){\r\n        if(this._conn_counter.release()){\r\n          await this._disConnect();\r\n        }\r\n        this.log('更新设备连接数',{count:this._conn_counter.count});\r\n    }\r\n    async _connect(){throw new Error('未实现函数_connect');}\r\n    async _disConnect(){throw new Error('未实现函数_disConnect');}\r\n    async zoomAdd(stop) {throw new Error('未实现函数zoomAdd');}\r\n    async zoomDec(stop) {throw new Error('未实现函数zoomDec');}\r\n    //focusAuto() {throw new Error('未实现函数focusAuto');}\r\n    async focusAdd(stop) {throw new Error('未实现函数focusAdd');}\r\n    async focusDec(stop) {throw new Error('未实现函数focusDec');}\r\n    //focusAuto() {throw new Error('未实现函数focusAuto');}\r\n    async apertureAdd(stop) {throw new Error('未实现函数apertureAdd');}\r\n    async apertureDec(stop) {throw new Error('未实现函数apertureDec');}\r\n    async move(direction,stop){throw new Error('未实现函数move');}\r\n    async moveToPoint(x,y,z){throw new Error('未实现函数moveToPoint');}\r\n    async ptzStop(){throw new Error('未实现函数ptzStop');}\r\n    //暂时不用预置点\r\n    //async setPreset(caption){throw new Error('未实现函数setPreset');}\r\n    //async removePreset(preset){throw new Error('未实现函数removePreset');}\r\n    //移动到对应名称的预置点\r\n    //async moveToPreset(name){throw new Error('未实现函数moveToPreset');}\r\n    //移除对应名称的预置点\r\n    //以下两个方法用于自动分配预置点和获取当前云台位置，各函数执行实现即可\r\n    //getPresets(){throw new Error('未实现函数getPresets');}\r\n    async getPoint(){throw new Error('未实现函数getPoint');}\r\n}\r\n\r\nexports=module.exports=PTZ;"]}