{"version":3,"sources":["../../../src/ipcs/onvif/onvif_ipc.js"],"names":["PTZ","require","IPC","onvif","globalConfig","global","server_config","config","getConfig","Cam","_","assert","yellowstone","RtspClient","H264Transport","header","Buffer","from","Parser","Writable","EventEmitter","url","ONVIF_IPC","options","each","val","key","_camera_handle","__profiles","__profile","id","opts","hostname","ip","username","user","password","pwd","port","path","Promise","resolve","reject","cameraHandle","err","error","innerError","setConnected","emit","Events","Connected","log","fn_ptz","capabilities","dis","DisConnected","all","stopRealPlay","stopTalk","then","catch","_getRtspUri","uri","respURI","_rtsp_uri","connect","pf","_profile","disConnect","getStreamUri","protocol","profileToken","token","_RtspClientDetail","client","keepAlive","details","_RtspClient","_connectRtsp","h264Stream","_write","buffer","enc","next","_pushData","h264Transport","play","removeAllListeners","__h264Stream","RealPlay","data","equals","buf","allocUnsafe","length","copy","prototype","call","_h264Transport","close","e","StopRealPlay","stream","_this","aliveState","test","request","throttle","emitOffline","Offline","_heart","prefix","indexOf","Online","setTimeout","_rtspError","on","removeListener","supportPTZ","_error","defaults","_profileToken","relativeMove","panTilt","zoom","stop","_PTZ","speed","zoomSpeed","direction","x","y","Directions","top","bottom","left","right","h_speed","v_speed","Error","z","ok","ps","profiles","prof","toUpper","videoEncoderConfiguration","encoding","o","$","fixed","encodingtype","quality","width","resolution","height","fps","rateControl","frameRateLimit","bitrate","bitrateLimit","push","sortBy","profs","_profiles","last","Math","floor","cb","timeout","Discovery","probeMatches","probeMatch","XAddrs","decodeURI","split","camUri","parse","probe","replace","exports","module"],"mappings":"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","file":"onvif_ipc.js","sourcesContent":["/**\r\n * Created by Luky on 2017/7/3.\r\n */\r\n\r\nconst PTZ=require('../base/ptz');\r\nconst IPC=require('../base/ipc');\r\nconst onvif=require('onvif');\r\nconst globalConfig=global.server_config||require('../../config/config');\r\nconst config=globalConfig.getConfig('onvif_config.json');\r\nconst Cam=onvif.Cam;\r\nconst _=require('lodash');\r\nconst assert = require('assert');\r\nlet yellowstone =require('yellowstone');\r\nif(!('H264Transport' in yellowstone)){\r\n    yellowstone=require('../../../_3part/yellowstone');\r\n}\r\nconst {RtspClient,H264Transport}=yellowstone;\r\nconst header = new Buffer.from([0x00,0x00,0x00,0x01]);\r\nconst {Parser} =require('../../log/log');\r\nconst Writable=require('stream').Writable;\r\nconst EventEmitter=require('events').EventEmitter;\r\nconst url=require('url');\r\n\r\nclass ONVIF_IPC extends  IPC{\r\n    constructor(options){\r\n        super(options);\r\n        _.each({\"zoom_speed\":config['zoomSpeed'],\"focus_speed\":config['focusSpeed'],\r\n            \"aperture_speed\":config['apertureSpeed'],\"h_speed\":config['hSpeed'],\r\n            \"v_speed\":config['vSpeed']},(val,key)=>{this[key]=options[key]||val;});\r\n        _.each({'ip':'','port':0,'user':'','pwd':'',\r\n            'b3g_protocol':false\r\n        },(val,key)=>{this.options[key]=key in options?options[key]:val;});\r\n        _.each({'ip':'','port':0,'user':'','pwd':'','path':''},(val,key)=>{this.options[key]=key in options?options[key]:val;});\r\n        this._camera_handle=null;\r\n        this.__profiles=[];\r\n        this.__profile=null;\r\n        Parser(this,'onvif.js',{id:this.options.id});\r\n    }\r\n\r\n    async _connect(){\r\n        let opts={\r\n            hostname:this.options.ip,\r\n            username:this.options.user,\r\n            password:this.options.pwd,\r\n            port:this.options.port\r\n        };\r\n        if(this.options.path) opts.path=this.options.path;\r\n        return new Promise((resolve,reject)=>{\r\n            let cameraHandle=new Cam(opts,async (err)=> {\r\n                if (err) {\r\n                    let error = this.error('ONVIF协议接入错误', {innerError: err});\r\n                    //this.emit(IPC.Events.Error, error);\r\n                    return reject(error);\r\n                }\r\n                this._camera_handle=cameraHandle;\r\n                this.setConnected();\r\n                this.emit(IPC.Events.Connected, this.log('ONVIF协议连接成功'));\r\n                this.options.fn_ptz = 'PTZ' in this._camera_handle.capabilities;\r\n                resolve();\r\n            });\r\n        });\r\n\r\n    }\r\n    async _disConnect(){\r\n        if(!this._camera_handle)return;\r\n        let dis= async ()=>{\r\n            delete this._camera_handle;\r\n            this.emit(IPC.Events.DisConnected,this.log('ONVIF协议断开连接'));\r\n        };\r\n        await Promise.all([this.stopRealPlay(),this.stopTalk()]).then(dis).catch(dis);\r\n    }\r\n\r\n    get _profiles(){\r\n        if(this.__profiles.length) return this.__profiles;\r\n        assert.ok(this._camera_handle,'connect first');\r\n        let ps=[];\r\n        _.each(this._camera_handle.profiles,(prof)=>{\r\n            if(_.toUpper(prof.videoEncoderConfiguration.encoding)!=='H264'){\r\n                return;\r\n            }\r\n            let o={\r\n                token:prof.$.token,\r\n                fixed:prof.$.fixed,\r\n                encodingtype:{'JPEG':3,'MPEG4':1,'H264':2}[prof.videoEncoderConfiguration.encoding],\r\n                encoding:prof.videoEncoderConfiguration.encoding,//enum { 'JPEG', 'MPEG4', 'H264' }\r\n                quality:prof.videoEncoderConfiguration.quality,\r\n                width:prof.videoEncoderConfiguration.resolution.width,\r\n                height:prof.videoEncoderConfiguration.resolution.height,\r\n                fps:prof.videoEncoderConfiguration.rateControl.frameRateLimit,\r\n                bitrate:prof.videoEncoderConfiguration.rateControl.bitrateLimit\r\n            };\r\n            ps.push(o);\r\n        });\r\n        ps=_.sortBy(ps,['bitrate','encodingtype']);\r\n        return this.__profiles=ps;\r\n    }\r\n\r\n    get _profile(){\r\n        assert.ok(this._camera_handle,'connect first');\r\n        if(this.__profile) return this.__profile;\r\n        let profs=this._profiles;\r\n        if(profs.length===0){\r\n            return null;\r\n        }\r\n        let prof;\r\n        if(this.quality>profs.length){\r\n            prof=_.last(profs);\r\n        }\r\n        else{\r\n            prof=profs[this.quality];\r\n        }\r\n        return this.__profile=prof;\r\n    }\r\n\r\n    get bitrate(){\r\n        //最大码率,打个9折\r\n        //console.log(JSON.stringify(this._profile));\r\n        //还需要加上音频的数据\r\n        return Math.floor(this._profile.bitrate*8/10*1024/9);\r\n    }\r\n\r\n    async getRtspUriWithAuth(){\r\n        let uri=await this._getRtspUri();\r\n        return respURI(uri,this.options.user,this.options.pwd);\r\n    }\r\n\r\n    async _getRtspUri(){\r\n        if(this._rtsp_uri) return this._rtsp_uri;\r\n        await this.connect();\r\n        let pf = this._profile;\r\n        if(null===pf){\r\n            let error=this.error('未获取H264协议相关的配置文件');\r\n            //this.emit(IPC.Events.Error,error);\r\n            await this.disConnect().catch();\r\n            return await Promise.reject(error);\r\n        }\r\n        return new Promise((resolve,reject)=>{\r\n            this._camera_handle.getStreamUri({protocol: 'RTSP', profileToken: pf.token},(err, uri)=>{\r\n                this.disConnect().catch();\r\n                if (err) {\r\n                    let error=this.error('getRtspUri','获取H264协议RTSP地址错误',{innerError:err});\r\n                    //this.emit(IPC.Events.Error,error,error);\r\n                    return reject(error);\r\n                }\r\n                this.log('获取H264到播放地址，协议类型RTSP',{uri:uri.uri});\r\n                return  resolve(this._rtsp_uri=uri.uri);\r\n            });\r\n        });\r\n    }\r\n\r\n    async _connectRtsp(url){\r\n        if(this._RtspClientDetail)return this._RtspClientDetail;\r\n        const client =new RtspClient(this.options.user,this.options.pwd);\r\n        let details=await client.connect(url, { keepAlive: false }).catch((err)=>{\r\n            let error=this.error('_connectRtsp','RTSP协议直播接入异常',{innerError:err});\r\n            //this.emit(IPC.Events.Error,error,error);\r\n            return Promise.reject(error);\r\n        });\r\n        this._RtspClient=client;\r\n        //console.log('Connected. Video format is', details.format);\r\n        // Open the output file\r\n        //assert.ok(details.isH264);\r\n        return this._RtspClientDetail=details;\r\n    }\r\n\r\n    async _realPlay() {\r\n        let uri=await this._getRtspUri();\r\n        let details=await this._connectRtsp(uri);\r\n        let h264Stream=new Writable();\r\n        h264Stream._write = (buffer, enc, next) => {\r\n            this._pushData(buffer);\r\n            next();\r\n        };\r\n        let h264Transport= new H264Transport(this._RtspClient,h264Stream, details);\r\n        await this._RtspClient.play().catch(()=>{\r\n            let error=this.error('RTSP协议连接发生错误',err);\r\n            h264Stream.removeAllListeners();\r\n            return Promise.reject(error);\r\n        });\r\n        this.__h264Stream=h264Stream;\r\n        this.__h264Stream=h264Transport;\r\n/*        this._RtspClient.on('error',(err)=>{\r\n            this.stopRealPlay();\r\n            let error=this.error('RTSP协议连接发生错误',err);\r\n            //this.emit(IPC.Events.Error,error);\r\n        });*/\r\n        this.emit(IPC.Events.RealPlay,this.log('RTSP协议直播接入'));\r\n    }\r\n\r\n    _pushData(data){\r\n    //_transform(data,enc,next){\r\n        if(data.equals(header)) return/* next()*/;\r\n        let buf=Buffer.allocUnsafe(data.length+4);\r\n        buf[0]=0;buf[1]=0;buf[2]=0;buf[3]=1;\r\n        data.copy(buf,4);\r\n        //next(null,buf);\r\n        EventEmitter.prototype.emit.call(this,'video',buf);\r\n    }\r\n\r\n    async _stopRealPlay(){\r\n        if(!this._RtspClient) return;\r\n        if(this._h264Transport){\r\n            this._h264Transport=null;\r\n            this.__h264Stream.removeAllListeners();\r\n            this.__h264Stream=null;\r\n        }\r\n        this._RtspClient.close().catch(e=>e);\r\n        this._RtspClient=null;\r\n        this.emit(IPC.Events.StopRealPlay,this.log('RTSP协议直播关闭'));\r\n    }\r\n\r\n    async _startTalk(stream){\r\n    }\r\n\r\n    async _stopTalk(){\r\n    }\r\n\r\n    _listen(/*offlinecb*/){\r\n        let _this=this;\r\n        let aliveState=0;//0 unknown 1 alive 2 offline\r\n        let test=()=>{\r\n            this._RtspClient.request(\"OPTIONS\");\r\n            _.throttle(emitOffline,6000);\r\n        };\r\n\r\n        let emitOffline=()=>{\r\n            aliveState=2;\r\n            _this.emit(IPC.Events.Offline);\r\n        };\r\n\r\n        this._heart=(data,prefix)=>{\r\n            if(prefix==='S->C'&&data.indexOf('OPTIONS')>-1)\r\n            {\r\n                if(1!==aliveState)_this.emit(IPC.Events.Online);\r\n                aliveState=1;\r\n                setTimeout(test, 2000);\r\n            }\r\n        };\r\n\r\n        this._rtspError=()=>{\r\n            emitOffline();\r\n        };\r\n\r\n        return this._getRtspUri().then((uri)=> {\r\n            return this._connectRtsp(uri).then(() => {\r\n                setTimeout(test, 2000);\r\n                this._RtspClient.on('log',this._heart);\r\n                this._RtspClient.on('error',this._rtspError);\r\n            });\r\n        });\r\n\r\n        /*return this._getRtspUri().then((uri)=>{\r\n            _this._listenHandle=new HeartBeat(uri,_this.options.user,_this.options.pwd);\r\n            _this._listenHandle.listen();\r\n            _this._listenHandle.on(IPC.Events.Offline,(e)=>{\r\n                _this._listenHandle=null;\r\n                _this.emitEvent(IPC.Events.Offline,e.toString());\r\n            });\r\n            _this._listenHandle.on(IPC.Events.Alive,()=>{\r\n\r\n            });\r\n        });*/\r\n    }\r\n\r\n    _stopListen(){\r\n        if(this._RtspClient)\r\n        {\r\n            this._RtspClient.removeListener('log',this._heart);\r\n            this._RtspClient.removeListener('error',this._rtspError);\r\n        }\r\n    }\r\n\r\n    async _PTZ(options){\r\n        if(!this.supportPTZ) return await Promise.reject(this._error('_PTZ','此设备不支持PTZ操作'));\r\n        await this.connect();\r\n        options=_.defaults(options,{profileToken:this._profileToken});\r\n        return new Promise((resolve,reject)=>{\r\n            this._camera_handle.relativeMove(options,(err)=>{\r\n                this.disConnect().catch();\r\n                if(err){\r\n                    let error=this.error('PTZ操作异常',{innerError:err});\r\n                    //this.emit(IPC.Events.Error,error);\r\n                    return reject(error);\r\n                }\r\n                this.log('成功执行PTZ操作');\r\n                resolve();\r\n            });\r\n        });\r\n    }\r\n\r\n    //getNodes\r\n    async ptzStop(){\r\n        await this.connect();\r\n        let options={panTilt:false,zoom:true,profileToken:this._profileToken};\r\n        return new Promise((resolve,reject)=>{\r\n            this._camera_handle.stop(options,(err)=>{\r\n                this.disConnect().catch();\r\n                if(err){\r\n                    let error=this.error('ptz停止异常',{innerError:error});\r\n                    //this.emit(IPC.Events.Error,error);\r\n                    return reject(error);\r\n                }\r\n                this.log('成功执行PTZ操作');\r\n                resolve();\r\n            });\r\n        });\r\n    }\r\n\r\n    async zoomAdd(){\r\n        return await this._PTZ({zoom:1,speed:{zoom:config.zoomSpeed}});\r\n    }\r\n\r\n    async zoomDec(){\r\n        return await this._PTZ({zoom:-1,speed:{zoom:config.zoomSpeed}});\r\n    }\r\n\r\n    focusAdd() {\r\n\r\n    }\r\n    focusDec() {\r\n\r\n    }\r\n    apertureAdd() {\r\n\r\n    }\r\n\r\n    apertureDec() {\r\n\r\n    }\r\n\r\n    async move(direction) {\r\n        let x=0,y=0;\r\n        if((direction&PTZ.Directions.top)>0){\r\n            y=1;\r\n        }\r\n        if((direction&PTZ.Directions.bottom)>0){\r\n            y=-1;\r\n        }\r\n        if((direction&PTZ.Directions.left)>0){\r\n            x=-1;\r\n        }\r\n        if((direction&PTZ.Directions.right)>0){\r\n            x=1;\r\n        }\r\n\r\n        return await this._PTZ({zoom:0,x:x,y:y,speed:{x:this.h_speed,y:this.v_speed}});\r\n    }\r\n\r\n    async getPoint(){\r\n        throw new Error('未实现函数getPoint');\r\n        //getStatus\r\n        /*{\r\n            position: {\r\n                x: 'pan position'\r\n                    , y: 'tilt position'\r\n                    , zoom: 'zoom'\r\n            }\r\n        , moveStatus: {} // camera moving\r\n        , utcTime: 'current camera datetime'\r\n        }*/\r\n    }\r\n    async moveToPoint(x,y,z){throw new Error('未实现函数moveToPoint');}\r\n/*\r\n    async moveToPreset(pt)\r\n    {\r\n        throw new Error('未实现函数moveToPreset');\r\n/*        await this.connect();\r\n        return new Promise((resolve,reject)=>{\r\n            this._camera_handle.gotoPreset({profileToken:this._profileToken,preset:''+pt},(err)=>{\r\n                this.disConnect().catch();\r\n                if(err){\r\n                    let error=this.error('moveToPreset','移动到预置位异常',{innerError:err});\r\n                    //this.emit(IPC.Events.Error,error);\r\n                    return reject(error);\r\n                }\r\n                this.log('成功执行PTZ操作');\r\n                resolve();\r\n            });\r\n        });\r\n    }\r\n\r\n    async setPreset(caption)\r\n    {\r\n        throw new Error('未实现函数setPreset');\r\n    }\r\n    async removePreset(preset){\r\n        throw new Error('未实现函数removePreset');\r\n    }\r\n\r\n    async getPresets(){\r\n        throw new Error('未实现函数getPresets');\r\n    }\r\n*/\r\n    static async discovery(cb,timeout=10000){\r\n        onvif.Discovery.removeAllListeners();\r\n        onvif.Discovery.on('device', (data/*, rinfo, xml*/)=> {\r\n            let uri=data.probeMatches.probeMatch.XAddrs;\r\n            //海康威视给两个地址，需要用空格截取下\r\n            //http://192.168.1.64/onvif/device_service%20http://[fe80::1a68:cbff:febc:6c54]/onvif/device_service\r\n            uri=decodeURI(uri).split(' ')[0];\r\n            let camUri = url.parse(uri);\r\n            cb({ip: camUri.hostname, port: camUri.port||80, path: camUri.path});\r\n        });\r\n        return  new Promise((resolve,reject)=>{\r\n            onvif.Discovery.on('error', (err) => {\r\n                onvif.Discovery.removeAllListeners();\r\n                reject(err);\r\n            });\r\n            onvif.Discovery.probe({timeout:timeout||10000,resolve:false},()=>{\r\n                cb(null);\r\n                resolve();\r\n            });\r\n        });\r\n    }\r\n}\r\n\r\nfunction respURI(uri,user,pwd){\r\n    return uri.replace('rtsp://', `rtsp://${user}:${pwd}@`);\r\n}\r\n\r\nexports=module.exports=ONVIF_IPC;\r\n"]}