{"version":3,"sources":["../../src/flv/flv_encoder.js"],"names":["_","require","amf","SPSParser","ADTS","EventEmitter","h264Prefix","Buffer","from","frameType","audioCoding","AVCPackageType","videoConding","FLVEncoder","video","audio","_hasVideo","_hasAudio","_headTags","_slices","_adst","_sps","_ready","_videoDuration","_audioDuration","_metadata","duration","filesize","hasVideo","hasAudio","title","encoder","clients","on","_newListener","bind","_removeListener","ready","emit","headBytes","scriptTag","VedioTagAVCPacket_DecorderConfigurationRecord","_pps","_profile","_profile_compatibility","_level","audioTagAVCPackage_AACSpecificConfig_ADST","codeid","width","height","fps","datarate","videocodecid","videodatarate","framerate","inc","ret","sps","pps","length","RangeError","_setVedioMetaData","AVC","present_size","spsObj","parseSPS","profile_idc","profile_compatibility","level_idc","buf","timestamp","emitHeadTag","nalu","_frameType","index","indexOf","slice","unit","NALU","key_frame","KeyFrame","InterFrame","_getVedioTimeTamp","VedioTagAVCPackageNALU","emitData","ESSize","_frame_size","audiosamplerate","samplerate","bit","stero","audiocodecid","audiodatarate","stereo","audiosamplesize","_audioInc","data","adst","ParseADTSHeader","_setAudioMetaData","AAC","freq","channel","_adstHeadSize","acc_raw_data_index","_timestamp","adts","_getAudioTimeStamp","blocks","audioTagAVCPackage_AACRowdata_ES","acc_raw_data_length","type","head","obj","arr","defaults","keys","amf1","amf2Buf","allocUnsafe","info","write","len","byteLength","_tagHead","tail","_tagTail","copy","offset","_calcTimestamp","writeUInt32BE","dataSize","datasize","lenBuffer","profile","level","size","i","writeUInt8","spsi","writeUInt16BE","ppsi","b1","freqIndex","b2","exports","module"],"mappings":"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","file":"flv_encoder.js","sourcesContent":["/**\r\n * Created by Luky on 2017/8/6.\r\n */\r\nconst _=require('lodash');\r\nlet amf=require('amf');\r\nif(!('write' in amf)){\r\n    amf=require('../../_3part/amf');\r\n}\r\nconst SPSParser=require('../h264/h264_sps_parser');\r\nconst ADTS=require('../acc/acc_adts_parser');\r\nconst EventEmitter=require('events').EventEmitter;\r\nconst h264Prefix=Buffer.from([0,0,1]);\r\n\r\nconst frameType={\r\n    'KeyFrame':1,\r\n    'InterFrame':2,\r\n    'DisposableInter':3,\r\n    'GeneratedKeyFrame':4,\r\n    'VedioInfo':5\r\n};\r\n\r\nconst audioCoding={\r\n    'ADPCM':1,\r\n    'AAC':10,\r\n    'MP3':2,\r\n    'MP3_8HZ':14\r\n};\r\n\r\nconst  AVCPackageType={\r\n    'SequenceHeader':0,\r\n    'NALU':1,\r\n    'EndOfSequence':2\r\n};\r\n\r\nconst videoConding={\r\n    'JEPG':1,\r\n    'SorensonH263':2,\r\n    'ScreenVideo':3,\r\n    'On2VP6':4,\r\n    'On2VPWithAlpha':5,\r\n    'ScreenVideoV2':6,\r\n    'AVC':7\r\n};\r\n\r\nclass FLVEncoder extends EventEmitter{\r\n    constructor(video=true,audio=false){\r\n        super();\r\n        this._hasVideo=video;\r\n        this._hasAudio=audio;\r\n        this._headTags=null;\r\n        this._slices=[];\r\n        this._adst=null;\r\n        this._sps=null;\r\n        this._ready=(video-0)+(audio-0);\r\n        this._videoDuration=0;\r\n        this._audioDuration=0;\r\n        this._metadata={\r\n            //文件部分\r\n            duration:0,filesize:0,\r\n            //扩展部分flv.js\r\n            hasVideo:this._hasVideo,\r\n            hasAudio:this._hasAudio,\r\n            //其他\r\n            title: 'lambda 0.1',encoder: 'lambda',\r\n        };\r\n        this.clients=[];\r\n        this.on('newListener', this._newListener.bind(this));\r\n        this.on('removeListener', this._removeListener.bind(this));\r\n    }\r\n\r\n    get ready(){\r\n        return this._ready<=0;\r\n    }\r\n\r\n    emitHeadTag(){\r\n        if(!this.ready) return false;\r\n        this._headTags=true;\r\n        this.emit('data',FLVEncoder.headBytes(this._hasVideo,this._hasAudio));\r\n        this.emit('data',FLVEncoder.scriptTag(this._metadata));\r\n        if(this._hasVideo)this.emit('data',FLVEncoder.VedioTagAVCPacket_DecorderConfigurationRecord(this._sps,this._pps,this._profile,this._profile_compatibility,this._level));\r\n        if(this._hasAudio)this.emit('data',FLVEncoder.audioTagAVCPackage_AACSpecificConfig_ADST(this._adst));\r\n        return true;\r\n    }\r\n\r\n    _setVedioMetaData(codeid,width,height,fps=0,datarate=0){\r\n        this._metadata.videocodecid=codeid;\r\n        this._metadata.width=width;\r\n        this._metadata.height=height;\r\n        this._metadata.videodatarate=datarate;\r\n        this._metadata.framerate=fps||25;\r\n        /*//视频部分\r\n        videocodecid: videoConding.AVC,//视频编码方式\r\n        framerate: 25,//视频帧率\r\n        width:0,//视频宽度\r\n        height:0,//视频高度\r\n        videodatarate: 0,//视频码率*/\r\n    }\r\n\r\n    _getVedioTimeTamp(){\r\n        let inc=1000/this._metadata.framerate;\r\n        let ret=this._videoDuration;\r\n        this._videoDuration+=inc;\r\n        return ret;\r\n    }\r\n\r\n    VedioTagAVCPacket_DecorderConfigurationRecord(sps,pps,fps){\r\n        if(sps.length===0||pps.length===0){\r\n            throw new RangeError('sps needed,pps needed');\r\n        }\r\n        this._sps=sps;\r\n        this._pps=pps;\r\n        this._setVedioMetaData(videoConding.AVC,sps.present_size.width,sps.present_size.height,fps);\r\n        const spsObj=SPSParser.parseSPS(sps[0]);\r\n        this._profile=spsObj.profile_idc;\r\n        this._profile_compatibility=spsObj.profile_compatibility;\r\n        this._level=spsObj.level_idc;\r\n        this._ready--;\r\n    }\r\n\r\n    emitData(buf,timestamp){\r\n        if(!this._headTags&&!this.emitHeadTag()){\r\n            return;\r\n        }\r\n        //先简单实现\r\n        this.emit('data',buf);\r\n        //this._slices.push(buf);\r\n    }\r\n\r\n    VedioTagAVCPackageNALU(nalu,_frameType=-1,timestamp=-1){\r\n        if(_frameType===-1){\r\n            let index=nalu.indexOf(h264Prefix);\r\n            nalu=nalu.slice(index+3);\r\n            let unit=new NALU(nalu);\r\n            _frameType=unit.key_frame?frameType.KeyFrame:frameType.InterFrame;\r\n        }\r\n        if(timestamp===-1)timestamp=this._getVedioTimeTamp();\r\n        let ret=FLVEncoder.VedioTagAVCPackageNALU(nalu,_frameType,timestamp);\r\n        this.emitData(ret,timestamp);\r\n        return ret;\r\n    }\r\n\r\n    _getAudioTimeStamp(ESSize=1){\r\n        let inc=ESSize*this._metadata._frame_size*1000/this._metadata.audiosamplerate;\r\n        let ret=this._audioDuration;\r\n        this._audioDuration+=inc;\r\n        return ret;\r\n    }\r\n    \r\n    _setAudioMetaData(codeid,samplerate,bit,stero,datarate=0){\r\n        //音频部分\r\n        this._metadata.audiocodecid=codeid;\r\n        this._metadata.audiodatarate=datarate;\r\n        this._metadata.audiosamplerate=samplerate;\r\n        this._metadata.stereo=!!stero;\r\n        this._metadata.audiosamplesize=bit;\r\n        this._frame_size=1024;\r\n        this._audioInc=0;\r\n    }\r\n\r\n    audioTagAVCPackage_AACSpecificConfig_ADST(data) {\r\n        if(null!==this._adst) return;\r\n        this._adst=data.slice(0,9);\r\n        const adst=ADTS.ParseADTSHeader(data);\r\n        this._setAudioMetaData(audioCoding.AAC,adst.freq,16,adst.channel>1);\r\n        this._adstHeadSize=adst.acc_raw_data_index;\r\n        this._ready--;\r\n    }\r\n\r\n    audioTagAVCPackage_AACRowdata_ADST(data,_timestamp=-1){\r\n        let adts=ADTS.ParseADTSHeader(data);\r\n        if(_timestamp===-1)_timestamp=this._getAudioTimeStamp(adts.blocks);\r\n        return this.audioTagAVCPackage_AACRowdata_ES(data.slice(adts.acc_raw_data_index,adts.acc_raw_data_length),_timestamp);\r\n    }\r\n\r\n    audioTagAVCPackage_AACRowdata_ES(data,_timestamp=-1){\r\n        if(_timestamp===-1)_timestamp=this._getAudioTimeStamp();\r\n        let ret=FLVEncoder.audioTagAVCPackage_AACRowdata_ES(data,_timestamp);\r\n        this.emitData(ret,_timestamp);\r\n        return ret;\r\n    }\r\n\r\n    static headBytes(video=true,audio=false){\r\n        let type=0;\r\n        if(video){\r\n            type|=0x01;\r\n        }\r\n        if(audio){\r\n            type|=0x04;\r\n        }\r\n        let head=[0x46,0x4c,0x56,0x01,type,0x00,0x00,0x00,0x09,0x00,0x00,0x00,0x00];\r\n        return Buffer.from(head);\r\n    }\r\n\r\n    static scriptTag(obj){\r\n        let arr=[];\r\n        _.defaults(arr,obj);\r\n        arr.length=_.keys(obj).length;\r\n        let amf1=Buffer.from([0x02,0x00,0x0a,0x6f,0x6e,0x4d,0x65,0x74,0x61,0x44,0x61,0x74,0x61]);\r\n        let amf2Buf=Buffer.allocUnsafe(400);\r\n        let info={};\r\n        amf.write(amf2Buf,arr,info);\r\n        let len=amf1.length+info.byteLength;\r\n        let head=FLVEncoder._tagHead(0x12,len,0);\r\n        let tail=FLVEncoder._tagTail(len);\r\n        let buf=Buffer.allocUnsafe(head.length+tail.length+len);\r\n        head.copy(buf);\r\n        let offset=head.length;\r\n        amf1.copy(buf,offset);offset+=amf1.length;\r\n        amf2Buf.copy(buf,offset,0,info.byteLength);offset+=info.byteLength;\r\n        tail.copy(buf,offset);\r\n        return buf;\r\n    }\r\n\r\n    static _calcTimestamp(timestamp){\r\n        return ((timestamp&0xffffff)<<8)\r\n            +((timestamp&0xff000000)>>24);\r\n    }\r\n\r\n    static setTimestamp(slice,timestamp){\r\n        timestamp=FLVEncoder._calcTimestamp(timestamp);\r\n        slice.writeUInt32BE(timestamp,4);\r\n        return slice;\r\n    }\r\n\r\n    static _tagHead(type,dataSize,timestamp){\r\n        timestamp=FLVEncoder._calcTimestamp(timestamp);\r\n        let head=Buffer.from([\r\n            0x00,\r\n            0x00,0x00,0x00,\r\n            0x00,0x00,0x00,\r\n            0x00,\r\n            0x00,0x00,0x00]);\r\n        head.writeUInt32BE(dataSize,0);\r\n        head[0]=type;\r\n        head.writeUInt32BE(timestamp,4);\r\n        return head;\r\n    }\r\n\r\n    static _tagTail(datasize){\r\n        let lenBuffer=Buffer.allocUnsafe(4);\r\n        lenBuffer.writeUInt32BE(datasize+11,0);\r\n        return lenBuffer;\r\n    }\r\n\r\n    static get FrameTypes(){\r\n        return frameType;\r\n    }\r\n\r\n    static get AudioEncodings(){\r\n        return audioCoding;\r\n    }\r\n\r\n    static get VideoEncodings(){\r\n        return videoConding;\r\n    }\r\n\r\n    static VedioTagAVCPackage_EndOfSequence(){\r\n        //0900000400000000000000020000000000000f\r\n        return Buffer.from([\r\n            0x09,0x00,0x00,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\r\n            0x02,0x00,0x00,0x00,\r\n            0x00,0x00,0x00,0x0f]);\r\n/*        let data=Buffer.from([AVCPackageType.EndOfSequence,0x00,0x00,0x00]);\r\n        let head=FLVEncoder._tagHead(0x09,0,0,data.length);\r\n        let tail=FLVEncoder._tagTail(data.length);\r\n        let buf=Buffer.allocUnsafe(head.length+data.length+tail.length);\r\n        head.copy(buf,0);\r\n        data.copy(buf,head.length);\r\n        tail.copy(buf,head.length+data.length);\r\n        return buf;*/\r\n    }\r\n\r\n    static VedioTagAVCPacket_DecorderConfigurationRecord(sps,pps,profile,profile_compatibility,level){\r\n        /*console.log(profile);\r\n        console.log(profile_compatibility);\r\n        console.log(level);*/\r\n        if(sps.length===0||pps.length===0){\r\n            throw new RangeError('sps needed,pps needed');\r\n        }\r\n        if(profile==null){\r\n            const spsObj=SPSParser.parseSPS(sps[0]);\r\n            profile=spsObj.profile_idc;\r\n            profile_compatibility=spsObj.profile_compatibility;\r\n            level=spsObj.level_idc;\r\n        }\r\n        let size=1+4+7+2*sps.length+2*pps.length;\r\n        for(let i=0;i<sps.length;i++){\r\n            size+=sps[i].length;\r\n        }\r\n        for(let i=0;i<pps.length;i++){\r\n            size+=pps[i].length;\r\n        }\r\n        let head=FLVEncoder._tagHead(0x09,size,0);\r\n        let tail=FLVEncoder._tagTail(size);\r\n        let buf=Buffer.allocUnsafe(head.length+size+tail.length);\r\n        head.copy(buf,0);\r\n        let offset=head.length;\r\n        //经测试，帧类型为frameType.KeyFrame\r\n        //buf.writeUInt8((frameType.VedioInfo<<4)+videoConding.AVC,offset++);\r\n        buf.writeUInt8((frameType.KeyFrame<<4)+videoConding.AVC,offset++);\r\n        buf.writeUInt32BE(/*AVCPackageType.SequenceHeader<<24*/0,offset);offset+=4;\r\n        buf.writeUInt8(1,offset++);\r\n        buf.writeUInt8(profile,offset++);\r\n        buf.writeUInt8(profile_compatibility,offset++);\r\n        buf.writeUInt8(level,offset++);\r\n        buf.writeUInt8(0xff,offset++);\r\n        buf.writeUInt8(0xe0|sps.length,offset++);\r\n        for(let i=0;i<sps.length;i++){\r\n            let spsi=sps[i];\r\n            buf.writeUInt16BE(spsi.length,offset);offset+=2;\r\n            spsi.copy(buf,offset);offset+=spsi.length;\r\n        }\r\n        buf.writeUInt8(pps.length,offset++);\r\n        for(let i=0;i<pps.length;i++){\r\n            let ppsi=pps[i];\r\n            buf.writeUInt16BE(ppsi.length,offset);offset+=2;\r\n            ppsi.copy(buf,offset);offset+=ppsi.length;\r\n        }\r\n        tail.copy(buf,offset);\r\n        //console.log(buf.toString('hex'));\r\n        return buf;\r\n    }\r\n\r\n    static VedioTagAVCPackageNALU(data,frameType,timestamp){\r\n        const datasize=data.length+5+4;\r\n        let head=FLVEncoder._tagHead(0x09,datasize,timestamp);\r\n        let tail=FLVEncoder._tagTail(datasize);\r\n        let buf=Buffer.allocUnsafe(datasize+head.length+tail.length);\r\n        head.copy(buf);\r\n        let offset=head.length;\r\n        buf.writeUInt8((frameType<<4)+videoConding.AVC,offset++);\r\n        buf.writeUInt32BE(0,offset);//AVCPacketType+CompostionTime\r\n        buf.writeUInt8(AVCPackageType.NALU,offset);offset+=4;\r\n        buf.writeUInt32BE(data.length,offset);offset+=4;\r\n        data.copy(buf,offset);offset+=data.length;\r\n        tail.copy(buf,offset);\r\n        return buf;\r\n    }\r\n\r\n    /**\r\n     * If the SoundFormat indicates AAC, the SoundType should be 1 (stereo) and the SoundRate should be 3 (44 kHz).\r\n     However, this does not mean that AAC audio in FLV is always stereo, 44 kHz data. Instead, the Flash Player ignores\r\n     these values and extracts the channel and sample rate data is encoded in the AAC bit stream.\r\n     */\r\n\r\n    static audioTagAVCPackage_AACRowdata_ADST(data,_timestamp){\r\n        let adts=ADTS.ParseADTSHeader(data);\r\n        return FLVEncoder.audioTagAVCPackage_AACRowdata_ES(data.slice(adts.acc_raw_data_index),_timestamp);\r\n    }\r\n\r\n    static audioTagAVCPackage_AACRowdata_ES(data,_timestamp){\r\n        const datasize=2+data.length;\r\n        let head=FLVEncoder._tagHead(0x08,datasize,_timestamp);\r\n        let tail=FLVEncoder._tagTail(datasize);\r\n        let buf=Buffer.allocUnsafe(datasize+head.length+tail.length);\r\n        head.copy(buf);\r\n        let offset=head.length;\r\n        //10101111\r\n        buf.writeUInt8(0xaf,offset++);//AAC 44hz 16bit sndstereo\r\n        buf.writeUInt8(0x01,offset++);//acc raw\r\n        data.copy(buf,offset);offset+=data.length;\r\n        tail.copy(buf,offset);\r\n        return buf;\r\n    }\r\n\r\n    static audioTagAVCPackage_AACSpecificConfig_ADST(data){\r\n        let adts=ADTS.ParseADTSHeader(data);\r\n        let b1=((adts.profile+1)<<3)|((adts.freqIndex&0xe)>>1);\r\n        let b2=((adts.freqIndex&0x1)<<7)|(adts.channel<<3);\r\n        const datasize=4/*+3*/;\r\n        let head=FLVEncoder._tagHead(0x08,datasize,0);\r\n        let tail=FLVEncoder._tagTail(datasize);\r\n        let buf=Buffer.allocUnsafe(datasize+head.length+tail.length);\r\n        head.copy(buf);\r\n        let offset=head.length;\r\n        buf.writeUInt8(0xaf,offset++);//AAC 44hz 16bit sndstereo\r\n        buf.writeUInt8(0x00,offset++);//acc sequence header\r\n        buf.writeUInt8(b1,offset++);\r\n        buf.writeUInt8(b2,offset++);\r\n/*        buf.writeUInt8(0x56,offset++);\r\n        buf.writeUInt8(0xE5,offset++);\r\n        buf.writeUInt8(0x00,offset++);*/\r\n        //0x56 0xE5 0x00 SBR\r\n        tail.copy(buf,offset);\r\n        return buf;\r\n    }\r\n}\r\n\r\nexports=module.exports=FLVEncoder;"]}