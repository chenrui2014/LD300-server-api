{"version":3,"sources":["../../src/rtsp/rtsp_heartbeat.js"],"names":["EventEmitter","require","net","url","WWW_AUTH_REGEX","RegExp","createHash","_","HeartBeat","uri","user","pwd","isConnected","_cSeq","headers","requestName","id","req","Object","assign","keys","forEach","header","toString","client","write","sendRequest","auth","type","split","authHeaders","each","slice","length","prot","index","indexOf","trim","authString","ha1","getMD5Hash","realm","ha2","ha3","nonce","Buffer","Authorization","data","responseToObject","statusCode","CSeq","r","sendAuth","emit","_continue","setTimeout","sendOPTIONS","bind","e","stopListen","listen","parse","hostname","port","connect","on","_onData","_onError","removeAllListeners","close","str","md5","update","digest","parseInt","lines","ret","i","linei","m","key","val","toLowerCase","exports","module"],"mappings":"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","file":"rtsp_heartbeat.js","sourcesContent":["/**\r\n * Created by Luky on 2017/7/17.\r\n */\r\nconst EventEmitter=require('events').EventEmitter;\r\nconst net = require(\"net\");\r\nconst url=require('url');\r\nconst WWW_AUTH_REGEX = new RegExp('[\\s,]([a-z]+)=([^,\\s]+)');\r\nconst { createHash } = require(\"crypto\");\r\nconst _=require('lodash');\r\n\r\nclass HeartBeat extends EventEmitter{\r\n    constructor(uri,user,pwd){\r\n        super();\r\n        this.uri=uri;\r\n        this.user=user;\r\n        this.pwd=pwd;\r\n        this.isConnected=false;\r\n        this._cSeq=0;\r\n        this.headers={ 'User-Agent':'lambda/1.0.0'};\r\n    }\r\n\r\n    sendRequest(requestName,headers){\r\n        headers=headers||{};\r\n        const id = ++this._cSeq;\r\n        // mutable via string addition\r\n        let req = `${requestName} ${this.uri} RTSP/1.0\\r\\nCSeq: ${id}\\r\\n`;\r\n\r\n        Object.assign(headers, this.headers);\r\n\r\n        Object.keys(headers).forEach((header) => {\r\n            req += `${header}: ${headers[header].toString()}\\r\\n`;\r\n        });\r\n\r\n        this.client.write(req + '\\r\\n');\r\n    }\r\n\r\n    sendOPTIONS(){\r\n        this.sendRequest('OPTIONS');\r\n    }\r\n\r\n    sendAuth(headers){\r\n        const auth=headers[\"WWW-Authenticate\"];\r\n        const type =auth.split(\" \")[0];\r\n        const authHeaders = {};\r\n        _.each(auth.slice(type.length+1).split(','),(prot)=>{\r\n            let index=prot.indexOf('=');\r\n            authHeaders[_.trim(prot.slice(0,index),'\\'\"')]=_.trim(prot.slice(index+1),'\\'\"');\r\n        });\r\n\r\n        // mutable, but only assigned to by if block\r\n        let authString = \"\";\r\n        if (type === \"Digest\") {\r\n            // Digest Authentication\r\n            const ha1 = getMD5Hash(`${this.user}:${authHeaders.realm}:${this.pwd}`);\r\n            const ha2 = getMD5Hash(`${'OPTIONS'}:${this.uri}`);\r\n            const ha3 = getMD5Hash(`${ha1}:${authHeaders.nonce}:${ha2}`);\r\n\r\n            authString = `Digest username=\"${this.user}\",realm=\"${authHeaders.realm}\",nonce=\"${authHeaders.nonce}\",uri=\"${this.uri}\",response=\"${ha3}\"`;\r\n        } else if (type === \"Basic\") {\r\n            // Basic Authentication\r\n            // https://xkcd.com/538/\r\n            authString = 'Basic ' + new Buffer(`${this.user}:${this.pwd}`).toString('base64');\r\n        }\r\n        this.sendRequest('OPTIONS',Object.assign(headers, { Authorization: authString }));\r\n    }\r\n\r\n    _onData(data){\r\n        const [statusCode,CSeq,r]=responseToObject(data.toString('utf8'));\r\n        if(statusCode===401){\r\n            //未授权\r\n            return this.sendAuth(r);\r\n        }\r\n        this.emit('Alive');\r\n        if(this._continue) setTimeout(this.sendOPTIONS.bind(this),1500);\r\n    }\r\n\r\n    _onError(e){\r\n        this.emit('Offline',e);\r\n        this.stopListen();\r\n        setTimeout(()=>{\r\n            this.listen();\r\n        },2000);\r\n    }\r\n\r\n    listen(){\r\n        const {hostname,port}=url.parse(this.uri);\r\n        let client=net.connect(port||554,hostname,()=>{\r\n            this.isConnected=true;\r\n            this.client = client;\r\n            this.sendOPTIONS();\r\n        });\r\n        client.on(\"data\", this._onData.bind(this));\r\n        client.on(\"error\", this._onError.bind(this));\r\n        //client.on(\"close\", this._onClose.bind(this));\r\n        this._continue=true;\r\n    }\r\n\r\n    stopListen(){\r\n        this._continue=false;\r\n        this.client.removeAllListeners();\r\n        this.client.close();\r\n        delete this.client;\r\n    }\r\n}\r\n\r\nfunction getMD5Hash(str) {\r\n    const md5 = createHash(\"md5\");\r\n    md5.update(str);\r\n    return md5.digest(\"hex\");\r\n}\r\n\r\nfunction responseToObject(str){\r\n    const statusCode = parseInt(str.split(' ')[1]);\r\n    const lines=str.split('\\r');\r\n    let CSeq=-1;\r\n    let ret={};\r\n    for(let i=1;i<lines.length;i++){\r\n        let linei=lines[i];\r\n        let m=linei.indexOf(':');\r\n        if(-1===m) break;\r\n        let key=linei.slice(0,m).trim(),val=linei.slice(m+1).trim();\r\n        if(key.toLowerCase()==='cseq') {\r\n            CSeq=val;\r\n            continue;\r\n        }\r\n        ret[key]=val;\r\n    }\r\n    return [statusCode,CSeq,ret];\r\n}\r\n\r\nexports=module.exports=HeartBeat;\r\n"]}