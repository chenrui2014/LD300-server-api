{"version":3,"sources":["../src/app.js"],"names":["app","use","ctx","next","set","multipart","strict","formidable","uploadDir","join","__dirname","jsonLimit","formLimit","textLimit","routes","allowedMethods","s","vh","start","connection","info","host","port","name","error","process","exit","listen","ip"],"mappings":";;AAGA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;;;2cAfA;;;;AAaA;;;AAIA,IAAMA,MAAM,mBAAZ;;AAECA,IAAIC,GAAJ,CAAQ,yBAAR;;AAEDD,IAAIC,GAAJ,CAAQ,UAACC,GAAD,EAAMC,IAAN,EAAe;AACnB;AACA;AACA;AACA;AACA;;AAEAD,QAAIE,GAAJ,CAAQ,6BAAR,EAAuC,GAAvC;AACAF,QAAIE,GAAJ,CAAQ,8BAAR,EAAwC,gDAAxC;AACAF,QAAIE,GAAJ,CAAQ,8BAAR,EAAwC,iCAAxC;AACAF,QAAIE,GAAJ,CAAQ,kCAAR,EAA4C,IAA5C,EAVmB,CAU+B;AAClD,WAAOD,MAAP;AACH,CAZD,EAYGF,GAZH,CAYO,uBAAQ;AACXI,eAAW,IADA;AAEXC,YAAQ,KAFG;AAGXC,gBAAY;AACRC,mBAAW,eAAKC,IAAL,CAAUC,SAAV,EAAqB,uBAArB;AADH,KAHD;AAMXC,eAAW,MANA;AAOXC,eAAW,MAPA;AAQXC,eAAW;AARA,CAAR,CAZP;;AAuBAb,IAAIC,GAAJ,CAAQ,iBAAOa,MAAP,EAAR,EACKb,GADL,CACS,iBAAOc,cAAP,EADT;;AAIA;AACA;AACA;AACA;AACA;;AAEA,IAAMC,IAAI,uBAAV;AACA,IAAMC,KAAK,2BAAU,CAAV,CAAX;AACAD,EAAEE,KAAF;AACAD,GAAGC,KAAH;;AAEA,wDAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAEgC,mBAFhC;;AAAA;AAEaC,8BAFb;;AAGO,qCAAOC,IAAP,CAAY,+BAAZ,EAA6CD,WAAWE,IAAxD,EAA8DF,WAAWG,IAAzE,EAA+EH,WAAWI,IAA1F;AAHP;AAAA;;AAAA;AAAA;AAAA;;AAKO,qCAAOC,KAAP;AACAC,4BAAQC,IAAR,CAAa,CAAC,CAAd;;AANP;AAAA;AAAA,2BAyBS1B,IAAI2B,MAAJ,CAAW,iBAAOL,IAAlB,EAAwB,iBAAOM,EAA/B,CAzBT;;AAAA;;AA4BG,qCAAOR,IAAP,CAAY,uBAAZ,EAAqC,iBAAOQ,EAA5C,EAAgD,iBAAON,IAAvD;;AA5BH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAD;;AA+BA","file":"app.js","sourcesContent":["/**\r\n * Created by chen on 17-8-21.\r\n */\r\nimport path from 'path';\r\nimport Koa from 'koa';\r\nimport bodyParser from 'koa-bodyparser';\r\nimport koaBody from 'koa-body';\r\nimport logger from './logger';\r\nimport connect from './db';\r\nimport babelPolyfill from 'babel-polyfill';\r\nimport config from './config';\r\nimport router from './router';\r\nimport cors from 'koa2-cors';\r\n//import HostService from './services/HostService';\r\nimport StartUp from './servers/startup';\r\nimport vHost from './test/host/virtual_host';\r\n\r\nconst app = new Koa();\r\n\r\n app.use(cors())\r\n\r\napp.use((ctx, next) => {\r\n    // if (ctx.request.header.host.split(':')[0] === 'localhost' || ctx.request.header.host.split(':')[0] === '127.0.0.1') {\r\n    //     ctx.set('Access-Control-Allow-Origin', '*')\r\n    // } else {\r\n    //     ctx.set('Access-Control-Allow-Origin', config.ip)\r\n    // }\r\n\r\n    ctx.set('Access-Control-Allow-Origin', '*');\r\n    ctx.set('Access-Control-Allow-Headers', 'Origin, X-Requested-With, Content-Type, Accept')\r\n    ctx.set('Access-Control-Allow-Methods', 'PUT, POST, GET, DELETE, OPTIONS')\r\n    ctx.set('Access-Control-Allow-Credentials', true) // 允许带上 cookie\r\n    return next();\r\n}).use(koaBody({\r\n    multipart: true,\r\n    strict: false,\r\n    formidable: {\r\n        uploadDir: path.join(__dirname, '../assets/uploads/tmp')\r\n    },\r\n    jsonLimit: '10mb',\r\n    formLimit: '10mb',\r\n    textLimit: '10mb'\r\n}));\r\n\r\napp.use(router.routes())\r\n    .use(router.allowedMethods());\r\n\r\n\r\n// app.use((ctx) => {\r\n//\r\n//     logger.info(\"server\");\r\n//     ctx.body = \"hello,world\";\r\n// });\r\n\r\nconst s = new StartUp();\r\nconst vh = new vHost(1);\r\ns.start();\r\nvh.start();\r\n\r\n(async() => {\r\n    try {\r\n        const connection = await connect();\r\n        logger.info('connected to MongoDB %s:%s/%s', connection.host, connection.port, connection.name);\r\n    }catch (error) {\r\n        logger.error(error);\r\n        process.exit(-1);\r\n    }\r\n\r\n    // var server = require('http').createServer(app.callback());\r\n    // var io = require('socket.io')(server);\r\n    // //\r\n    // io.on('connection', function(socket){\r\n    //     //HostService.startHostServer();\r\n    //     // setInterval(function () {\r\n    //     //     socket.emit('news', { hello: 'world' });\r\n    //     // },10000)\r\n    //     socket.emit('news', { hello: 'world' });\r\n    //     socket.on('my other event', function (data) {\r\n    //         console.log(data);\r\n    //     });\r\n    //     logger.info('Server start at %s:%s', config.ip, 3000);\r\n    // });\r\n    // await server.listen(3000, config.ip);\r\n\r\n    await app.listen(config.port, config.ip);\r\n\r\n\r\n    logger.info('Server start at %s:%s', config.ip, config.port);\r\n})();\r\n\r\n// app.listen(3000);"]}