{"version":3,"sources":["../../src/upgrade/data_upgrade.js"],"names":["config","global","server_config","require","systemConfig","getData","userConfig","_","path","fs","assert","_upgradeHostData","data","each","get","port","index","push","id","_upgradeCameraAndMointorData","cames","mointors","lines","getCame","came","find","c","ip","addCame","functions","alarm","ptz","audio","talk","length","user","pwd","brand","cid","onvif","addMointor","mointor","distance","d","demo","screenshot","preset","x","y","z","line","cz","cloneDeep","points","point","angle","pointCalc","point1","point2","aa","bb","cc","cosA","Math","sqrt","acos","PI","Zf","sortBy","pointA","ret","i","pointB","pointC","a","upgradeMointorData2","mo","ms","zf","concat","ms2","fromIndex","findIPC","ipc","i2","max","min","presets","_partition","ipcData","r","m","xh","ipcs","partition","ipcsSorted","undemo","ipc1","ipc2","pi","splice","groupBy","item","join","wOption","flags","encoding","fd","mode","autoClose","upgrade","hosts","hostFile","getDataDir","camesFile","mFile","fh","createWriteStream","write","JSON","stringify","close","fi","fm","p","allGroup","union","keys","sort","b","ar","split","br","mi","getIPC","ipcID","fq","partitionJson","partitionHostJson","partitionTxt","fj","ft","fhj","group","getFqIndex","name","fqi","m2","hostID","hostRange","ranges","fqIndex","range","exports","module"],"mappings":"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","file":"data_upgrade.js","sourcesContent":["/**\r\n * Created by Luky on 2017/10/22.\r\n */\r\nconst config=global.server_config||require('../config/config');\r\nconst systemConfig=config.getData('system_config.json');\r\nconst userConfig=config.getData('user_config.json');\r\nconst _=require('lodash');\r\nconst path=require('path');\r\nconst fs = require('fs');\r\nconst assert=require('assert');\r\n\r\nfunction _upgradeHostData(){\r\n    let data=[];\r\n    _.each(_.get(systemConfig,'serialport',[]),(port,index)=>{\r\n        data.push({id:index,port:`\\\\\\\\.\\\\COM${port}`})\r\n    });\r\n    return data;\r\n}\r\n\r\nfunction _upgradeCameraAndMointorData(){\r\n    let cames=[];//[{id,user,functons...}]\r\n    let mointors=[];//[{hostid,mointors}]\r\n    let lines=userConfig['lines']||[];\r\n    let getCame=(came)=>{\r\n        return _.find(cames,(c)=>{return c.ip===came.ip;})\r\n    };\r\n    let addCame=(came)=>{\r\n        let c=getCame(came);\r\n        if(c){\r\n            c.functions.alarm=c.functions.alarm||came.alarm;\r\n            c.functions.ptz=c.functions.ptz||came['isDome'];\r\n            c.functions.audio=c.functions.audio||came.talk;\r\n            return c;\r\n        }\r\n        let data={\r\n            id:cames.length,\r\n            ip:came.ip,\r\n            port:came.port,\r\n            user:came.user,\r\n            pwd:came.pwd,\r\n            brand:came.cid===0?'dahua':'hopewell',\r\n            functions:{\r\n                ptz:came['isDome']||false,\r\n                alarm:came.alarm||false,\r\n                audio:came.talk||false\r\n            }\r\n        };\r\n        if(data.brand!=='dahua'){\r\n            data.onvif={\r\n                port:80,\r\n                user:'admin',\r\n                pwd:'admin',\r\n                path:''\r\n            }\r\n        }\r\n        cames.push(data);\r\n        return data;\r\n    };\r\n    let addMointor=(mointor,c,distance,came)=>{\r\n        let d={\r\n            id:c.id,\r\n            demo:c.functions.ptz,\r\n            alarm:came.alarm||false,\r\n            screenshot:came.screenshot||false,\r\n            audio:came.talk||false,\r\n            distance:distance\r\n        };\r\n        if(d.demo){\r\n            d.preset={x:came.x||0,y:came.y||0,z:came.z||0,preset:''}\r\n        }\r\n        mointor.push(d);\r\n    };\r\n    _.each(lines,(line,index)=>{\r\n        let cz=line['alarm_channel'];\r\n        if(cz!==-1){\r\n            mointors.push({id:index,mointors:_.cloneDeep(mointors[cz].mointors)});\r\n            return;\r\n        }\r\n        let points=line['cam_points']||[];\r\n        let mointor=[];\r\n        mointors.push({id:index,mointors:mointor});\r\n        _.each(points,(point)=>{\r\n            let came=point['primary'];\r\n            let distance=point['distance'];\r\n            if(came.ip)addMointor(mointor,addCame(came),distance,came);\r\n            came=point['secondary'];\r\n            if(came.ip)addMointor(mointor,addCame(came),distance,came);\r\n        });\r\n    });\r\n    return [cames,mointors];\r\n}\r\n\r\n/*先用两点间距离公式求出各边长，角A对应的边长为a，角B对应的边长为b，角C对应的边长为c。\r\n再由余弦公式求得：\r\ncosA=(b*b+c*c-a*a)/2bc\r\n同理可求出cosB，cosC\r\n再用计算器算出arccosA，arccosB和arccosC即得*/\r\n\r\nfunction angle(pointCalc,point1,point2) {\r\n    let aa=(point1.x-point2.x)*(point1.x-point2.x)+(point1.y-point2.y)*(point1.y-point2.y);\r\n    let bb=(point1.x-pointCalc.x)*(point1.x-pointCalc.x)+(point1.y-pointCalc.y)*+(point1.y-pointCalc.y);\r\n    let cc=(point2.x-pointCalc.x)*(point2.x-pointCalc.x)+(point2.y-pointCalc.y)*+(point2.y-pointCalc.y);\r\n    let cosA=(bb+cc-aa)/(2*Math.sqrt(bb*cc));\r\n    return Math.acos(cosA)*180/Math.PI;\r\n}\r\n\r\n//计算折返点\r\nfunction Zf(index) {\r\n    let lines=userConfig['lines']||[];\r\n    let line=lines[index];\r\n    let points=line['cali_points'];\r\n    points=_.sortBy(points,'distance');\r\n    if(!points.length) return [];\r\n    let pointA={x:points[0].point[0],y:points[0].point[1]};\r\n    let ret=[];\r\n    for(let i=1;i<points.length-1;i++){\r\n        let pointB={x:points[i].point[0],y:points[i].point[1]};\r\n        let pointC={x:points[i+1].point[0],y:points[i+1].point[1]};\r\n        let a=angle(pointB,pointA,pointC);\r\n        if(a<10) ret.push(points[i]['distance']);\r\n        pointA=pointB;\r\n    }\r\n    return ret;\r\n}\r\n\r\nfunction upgradeMointorData2(mointors){\r\n    let ret=[];\r\n    _.each(mointors,(mo,index)=>{\r\n        let ms=_.cloneDeep(mo.mointors);\r\n        let zf=(Zf(index)||[99999999]).concat([9999999]);\r\n        let ms2=[];\r\n        let fromIndex=[0];\r\n        //console.log(`zfd${JSON.stringify(zf)}`);\r\n        let findIPC=(ipc,z)=>{\r\n            return _.find(ms2,(i)=>{return i.id===ipc.id;},fromIndex[z]);\r\n        };\r\n        ms=_.sortBy(ms,'distance');\r\n        let z=0;\r\n        _.each(ms,(i)=>{\r\n\r\n            if(i.distance>zf[z]){\r\n                //ipcs.length-1时拐点处的摄像头连续\r\n                fromIndex.push(ms2.length-1);z++;\r\n            }\r\n            let ipc=findIPC(i,z);\r\n            if(!ipc){\r\n                let i2=_.cloneDeep(i);\r\n                delete i2.distance;\r\n                delete i2.preset;\r\n                i2.max=i2.min=i.distance;\r\n                i2.presets=[];\r\n                if(i.demo){\r\n                    let preset=_.cloneDeep(i.preset);\r\n                    preset.distance=i.distance;\r\n                    i2.presets.push();\r\n                }\r\n                ms2.push(i2);\r\n            }\r\n            else{\r\n                ipc.min=Math.min(ipc.min,i.distance);\r\n                ipc.max=Math.max(ipc.max,i.distance);\r\n                if(i.demo){\r\n                    let preset=_.cloneDeep(i.preset);\r\n                    preset.distance=i.distance;\r\n                    ipc.presets.push(preset);\r\n                }\r\n            }\r\n        });\r\n        ret.push({id:mo.id,mointors:ms2});\r\n    });\r\n    return ret;\r\n}\r\n\r\nfunction _partition(mointors,ipcData) {\r\n    let r=[];\r\n    let getData=(id)=>{\r\n        return _.find(ipcData,(data)=>{return data.id===id;})\r\n    };\r\n    _.each(mointors,(m,xh)=>{\r\n        if(!m.mointors.length) return;\r\n        let ipcs=[];\r\n        let partition=[];\r\n        let zf=(Zf(xh)||[99999999]).concat([9999999]);\r\n        let fromIndex=[0];\r\n        //console.log(`zfd${JSON.stringify(zf)}`);\r\n        let findIPC=(ipc,z)=>{\r\n            return _.find(ipcs,(i)=>{return i.id===ipc.id;},fromIndex[z]);\r\n        };\r\n        let index=1;\r\n        m.mointors=_.sortBy(m.mointors,'point');\r\n        let z=0;\r\n        _.each(m.mointors,(i)=>{\r\n            if(i.distance>zf[z]){\r\n                //ipcs.length-1时拐点处的摄像头连续\r\n                fromIndex.push(ipcs.length-1);z++;\r\n            }\r\n            let ipc=findIPC(i,z);\r\n            if(!ipc){\r\n                ipcs.push({id:i.id,min:i.distance,max:i.distance,demo:getData(i.id).functions.ptz});\r\n            }\r\n            else{\r\n                ipc.min=Math.min(ipc.min,i.distance);\r\n                ipc.max=Math.max(ipc.max,i.distance);\r\n            }\r\n        });\r\n        let ipcsSorted= _.sortBy(ipcs,['min','max']);\r\n        /*        for(let i=0;i<ipcsSorted.length;i++){\r\n                    let ipci=ipcsSorted[i];\r\n                    console.log(`demo:${getData(ipci.id).functions.ptz},id:${ipci.id},[${ipci.min},${ipci.max}]`);\r\n                }*/\r\n        let [demo,undemo]=_.partition(ipcsSorted,(ipc)=>{return ipc.demo});\r\n        //两种情况 狗牙式、包含方式、可能存在不叠加不覆盖的情况,也没关系\r\n        //处理枪机\r\n        undemo.push({id:9999999,min:999999,max:999999});\r\n        for(let i=0;i<undemo.length-1;i++){\r\n            let ipc1=undemo[i];\r\n            let ipc2=undemo[i+1];\r\n            if(ipc2.min>ipc1.max){\r\n                partition.push({ipcs:[ipc1.id],min:ipc1.min,max:ipc1.max});\r\n            }\r\n            else if(ipc2.min===ipc1.max){\r\n                partition.push({ipcs:[ipc1.id],min:ipc1.min,max:ipc1.max});\r\n                ipc2.min++;\r\n            }\r\n            else if(ipc2.min>ipc1.min){//ipc1有独立的位置\r\n                partition.push({ipcs:[ipc1.id],min:ipc1.min,max:ipc2.min-1});\r\n                ipc1.min=ipc2.min=ipc2.min-1;\r\n                i--;\r\n            }\r\n            else{//ipc2.min==ipc1.min\r\n                let max=Math.min(ipc1.max,ipc2.max);\r\n                partition.push({ipcs:[\r\n                    ipc1.id,ipc2.id\r\n                ],min:ipc2.min,max:max});\r\n                if(ipc2.min===ipc2.max) i++;\r\n                else ipc2.min=ipc1.min=ipc1.max+1;\r\n            }\r\n        }\r\n        //插入球机\r\n        _.each(demo,(ipc)=>{\r\n            for(let i=0;i<partition.length;i++){\r\n                let pi=partition[i];\r\n                if(ipc.max<=pi.min){\r\n                    break;\r\n                }\r\n                if(ipc.min<pi.max){\r\n                    if(ipc.max>=pi.max){\r\n                        pi.ipcs.push(ipc.id);\r\n                    }\r\n                    else{\r\n                        partition.splice(i,0,_.cloneDeep(pi));\r\n                        pi.min=ipc.max+1;\r\n                        partition[i].max=ipc.max;\r\n                        partition[i].ipcs.push(ipc.id);\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        //分组存储\r\n        r[xh]=_.groupBy(partition,(item)=>{\r\n            let ipcs=item.ipcs;\r\n            delete item.ipcs;\r\n            return _.sortBy(ipcs).join(',');\r\n        });\r\n\r\n        //打印分区区域距离\r\n        /*        _.each(partition,(p)=>{\r\n                    let result=[];\r\n                    _.each(p.ipcs,(p)=>{\r\n                       result.push(p.id);\r\n                    });\r\n                    console.log(`[${result.join(',')}],[${p.min},${p.max}]`);\r\n                });*/\r\n    });\r\n    //打印摄像头的分组情况\r\n    /*    _.each(r,(ri)=>{\r\n            console.log(_.keys(ri).sort((a,b)=>{\r\n                let ar=a.split(','),br=b.split(',');\r\n\r\n                let i=0,mi=Math.min(ar.length,br.length);\r\n                while(i<mi){\r\n                    if(ar[i]===br[i]){i++;continue;}\r\n                    return ar[i]-br[i];\r\n                }\r\n                return ar.length-br.length;\r\n            }).join('|'));\r\n        });*/\r\n    return r;\r\n}\r\n\r\nconst wOption = {\r\n    flags: 'w',\r\n    encoding: null,\r\n    fd: null,\r\n    mode: 0o666,\r\n    autoClose: true\r\n};\r\n\r\nfunction upgrade(){\r\n    let hosts=_upgradeHostData();\r\n    let [cames,mointors]=_upgradeCameraAndMointorData();\r\n    let hostFile=config.getDataDir('hosts_config.json');\r\n    let camesFile=config.getDataDir('ipcs_config.json');\r\n    let mFile=config.getDataDir('mointors_config.json');\r\n    let fh=fs.createWriteStream(hostFile,wOption);\r\n    fh.write(JSON.stringify(hosts));\r\n    fh.close();\r\n    let fi=fs.createWriteStream(camesFile,wOption);\r\n    fi.write(JSON.stringify(cames));\r\n    fi.close();\r\n    let fm=fs.createWriteStream(mFile,wOption);\r\n    fm.write(JSON.stringify(upgradeMointorData2(mointors)));\r\n    fm.close();\r\n\r\n    let p=_partition(mointors,cames);\r\n    let allGroup=[];\r\n    _.each(p,(pi)=> {\r\n        allGroup=_.union(allGroup,_.keys(pi));\r\n    });\r\n\r\n    allGroup.sort((a,b)=>{\r\n        let ar=a.split(','),br=b.split(',');\r\n\r\n        let i=0,mi=Math.min(ar.length,br.length);\r\n        while(i<mi){\r\n            if(ar[i]===br[i]){i++;continue;}\r\n            return ar[i]-br[i];\r\n        }\r\n        return ar.length-br.length;\r\n    });\r\n\r\n    let getIPC=(ipcID)=>{\r\n        return _.find(cames,(i)=>{return i.id===ipcID;});\r\n    };\r\n\r\n    let fq=[];\r\n\r\n    let partitionJson=config.getDataDir('partition_ipc_config.json');\r\n    let partitionHostJson=config.getDataDir('partition_host_config.json');\r\n    let partitionTxt=config.getDataDir('partition.txt');\r\n    let fj=fs.createWriteStream(partitionJson,wOption);\r\n    let ft=fs.createWriteStream(partitionTxt,wOption);\r\n    let fhj=fs.createWriteStream(partitionHostJson,wOption);\r\n    fh.write(JSON.stringify(hosts));\r\n\r\n    _.each(allGroup,(group,index)=>{\r\n        ft.write(`分区${index}\\r\\n`);\r\n        _.each(group.split(','),(ipcID)=>{\r\n            ft.write(`摄像头ip${getIPC(ipcID-0).ip}\\r\\n`);\r\n        });\r\n        ft.write(`----------分割线------------\\r\\n\\r\\n`);\r\n        fq.push({index,ipcs:group});\r\n    });\r\n    fj.write(JSON.stringify(fq));\r\n    fh.close();\r\n    fj.close();\r\n    let getFqIndex=(name)=>{\r\n        return _.find(fq,(fqi)=>{return fqi.ipcs===name;}).index;\r\n    };\r\n\r\n    let m2=[];\r\n    _.each(p,(pi,hostID)=>{\r\n        let hostRange=[];\r\n        _.each(pi,(ranges,ipcs)=>{\r\n            let fqIndex=getFqIndex(ipcs);\r\n            _.each(ranges,(range)=>{\r\n                hostRange.push({distance:range.max,index:fqIndex});\r\n            });\r\n        });\r\n        hostRange=_.sortBy(hostRange,'distance');\r\n        m2.push({id:hostID,partition:hostRange});\r\n    });\r\n    fhj.write(JSON.stringify(m2));\r\n    fhj.close();\r\n}\r\n\r\nexports=module.exports={\r\n    upgrade:upgrade\r\n};"]}