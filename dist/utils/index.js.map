{"version":3,"sources":["../../src/utils/index.js"],"names":["crypto","require","fs","exports","genHash","value","createHash","update","digest","readFile","path","options","chunks","size","Promise","resolve","reject","readStream","createReadStream","on","console","log","push","chunk","length","buffer","Buffer","concat","err"],"mappings":";;AAAA,IAAMA,SAASC,QAAQ,QAAR,CAAf;AACA,IAAMC,KAAKD,QAAQ,IAAR,CAAX;;AAEAE,QAAQC,OAAR,GAAkB,UAAUC,KAAV,EAAiB;AAC/B,QAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC3B,eAAOL,OAAOM,UAAP,CAAkB,KAAlB,EAAyBC,MAAzB,CAAgCF,KAAhC,EAAuCG,MAAvC,CAA8C,KAA9C,CAAP;AACH;AACJ,CAJD;;AAMAL,QAAQM,QAAR,GAAmB,UAASC,IAAT,EAAeC,OAAf,EAAwB;AACvC,QAAMC,SAAS,EAAf;AACA,QAAIC,OAAO,CAAX;AACA,WAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,YAAMC,aAAaf,GAAGgB,gBAAH,CAAoBR,IAApB,EAA0BC,OAA1B,CAAnB;;AAEAM,mBAAWE,EAAX,CAAc,MAAd,EAAsB,iBAAS;AAC3BC,oBAAQC,GAAR,CAAYR,IAAZ;AACAD,mBAAOU,IAAP,CAAYC,KAAZ;AACAV,oBAAQU,MAAMC,MAAd;AACH,SAJD;;AAMAP,mBAAWE,EAAX,CAAc,KAAd,EAAqB,YAAM;AACvB,gBAAMM,SAASC,OAAOC,MAAP,CAAcf,MAAd,EAAsBC,IAAtB,CAAf;AACAE,oBAAQU,MAAR;AACH,SAHD;;AAKAR,mBAAWE,EAAX,CAAc,OAAd,EAAuB,UAACS,GAAD,EAAS;AAC5BZ,mBAAOY,GAAP;AACH,SAFD;AAGH,KAjBM,CAAP;AAkBH,CArBD","file":"index.js","sourcesContent":["const crypto = require('crypto');\r\nconst fs = require('fs');\r\n\r\nexports.genHash = function (value) {\r\n    if (typeof value === 'string') {\r\n        return crypto.createHash('md5').update(value).digest('hex');\r\n    }\r\n}\r\n\r\nexports.readFile = function(path, options) {\r\n    const chunks = [];\r\n    let size = 0;\r\n    return new Promise((resolve, reject) => {\r\n        const readStream = fs.createReadStream(path, options);\r\n\r\n        readStream.on('data', chunk => {\r\n            console.log(size);\r\n            chunks.push[chunk];\r\n            size += chunk.length\r\n        });\r\n\r\n        readStream.on('end', () => {\r\n            const buffer = Buffer.concat(chunks, size);\r\n            resolve(buffer)\r\n        });\r\n\r\n        readStream.on('error', (err) => {\r\n            reject(err)\r\n        });\r\n    })\r\n}"]}