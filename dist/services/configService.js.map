{"version":3,"sources":["../../src/services/configService.js"],"names":["require","Parser","logger","ConfigModel","uuidv1","ConfigService","data","id","success","create","err","config","info","error","message","conditions","remove","ip","result","update","exec","find","count","sort","pagination","skip","pageStart","limit","pageSize","findOne","length","_doc","exports","module"],"mappings":"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","file":"configService.js","sourcesContent":["/**\r\n * 操作系统配置数据对象\r\n * Created by chen on 17-8-23.\r\n */\r\n//import logger from '../logger';\r\n//import ConfigModel from '../models/config.model';\r\n//import uuidv1 from 'uuid/v1';\r\nconst {Parser}=require('../log/log');\r\nconst logger={};\r\nParser(logger,'ConfigService.js');\r\nconst ConfigModel=require('../models/config.model');\r\nconst uuidv1=require('uuid/v1');\r\n\r\nclass ConfigService {\r\n\r\n    /**\r\n     * 添加一个系统配置\r\n     * @param data 需要添加的系统配置数据\r\n     * @returns {Promise.<boolean>} 添加成功返回true，否则返回false；\r\n     */\r\n    static async add_config(data){\r\n        //const id = await ConfigService.findMaxId();\r\n        //data.id = Number(id) + 1;\r\n        // let config = new ConfigModel(data);\r\n        data.id = uuidv1();\r\n        let success = false;\r\n        await ConfigModel.create(data,function (err,config) {\r\n            if(!err) {\r\n                success = true;\r\n                logger.info('添加系统配置成功');\r\n            }else{\r\n                logger.error(err.message);\r\n            }\r\n        });\r\n\r\n        return success;\r\n    }\r\n\r\n    /**\r\n     * 根据条件删除系统配置\r\n     * @param conditions 删除条件\r\n     * @returns {Promise.<boolean>}删除成功返回true，否则返回false；\r\n     */\r\n    static async delete_config(conditions) {\r\n        let success = false;\r\n        const result = await ConfigModel.remove(conditions,function (err,config) {\r\n            if(!err) {\r\n                success = true;\r\n                logger.info('删除系统配置['+ config.ip +']成功');\r\n            }else{\r\n                logger.error(err.message);\r\n            }\r\n        });\r\n        return success;\r\n    }\r\n\r\n    /**\r\n     * 修改系统配置信息\r\n     * @param conditions 修改条件\r\n     * @param data 新的系统配置数据\r\n     * @returns {Promise.<*>} 返回修改后的数据\r\n     */\r\n    static async edit_config(conditions,data){\r\n        let result = null;\r\n        result = await ConfigModel.update(conditions,data).exec();\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * 根据条件查询符合条件的系统配置数量\r\n     * @param conditions\r\n     * @returns {Promise.<*>}\r\n     */\r\n    static async getTotal(conditions){\r\n        return await ConfigModel.find(conditions).count();\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * 查询所有系统配置\r\n     * @returns {Promise.<*>}\r\n     */\r\n    static async findAll(sort){\r\n        if(sort){\r\n            return await ConfigModel.find().sort(sort);\r\n        }else{\r\n            return await ConfigModel.find();\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * 根据条件查询系统配置\r\n     * @param conditions 查询条件\r\n     * @param sort 排序\r\n     * @param pagination 分页\r\n     * @returns {Promise.<*>} 返回查询到的数据\r\n     */\r\n    static async find_config(conditions,sort,pagination){\r\n        let result = null;\r\n        if(sort){\r\n\r\n            if(pagination){\r\n                result = await ConfigModel.find(conditions).skip(pagination.pageStart).limit(pagination.pageSize).sort(sort);\r\n            }else{\r\n                result = await ConfigModel.find().sort(sort);\r\n            }\r\n        }else{\r\n            if(pagination){\r\n                result = await ConfigModel.find(conditions).skip(pagination.pageStart).limit(pagination.pageSize);\r\n            }else{\r\n                result = await ConfigModel.find(conditions);\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * 根据ID查找系统配置信息\r\n     * @param id\r\n     * @returns {Promise.<*>}\r\n     */\r\n    static async find_one(id){\r\n        return await ConfigModel.findOne({id:id});\r\n    }\r\n\r\n    /**\r\n     * 获得ID最大值\r\n     * @returns {Promise.<number>}\r\n     */\r\n    static async findMaxId(){\r\n        const result = await ConfigModel.find().sort({id:-1}).limit(1);\r\n        if(result && result.length > 0){\r\n            return result[0]._doc.id;\r\n        }else{\r\n            return 0\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * 根据条件判断是否存在符合条件的系统配置\r\n     * @param conditions 查询条件\r\n     * @returns {Promise.<boolean>} 有符合条件的对象返回true，否则返回false\r\n     */\r\n    static async isExist(conditions){\r\n        const result = await ConfigModel.find(conditions);\r\n        if(result && result.length > 0){\r\n            return true;\r\n        }else{\r\n            return false;\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexports=module.exports=ConfigService;\r\n//export default ConfigService;"]}