{"version":3,"sources":["../../src/services/monitoringService.js"],"names":["require","Parser","logger","MonitoringAreaModel","Monitoring","MonitoringAreaService","data","findMaxId","id","Number","success","create","err","monitoringArea","info","error","message","conditions","remove","result","update","exec","find","count","sort","pagination","skip","pageStart","limit","pageSize","findOne","length","_doc","exports","module"],"mappings":"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","file":"monitoringService.js","sourcesContent":["/**\r\n * Created by chen on 17-8-23.\r\n */\r\n//import logger from '../logger';\r\n//import {Monitoring as MonitoringAreaModel} from '../models/monitoringArea.model';\r\n\r\nconst {Parser}=require('../log/log');\r\nconst logger={};\r\nParser(logger,'MonitoringAreaService.js');\r\nconst MonitoringAreaModel=require('../models/monitoringArea.model').Monitoring;\r\n\r\nclass MonitoringAreaService {\r\n    /**\r\n     * 添加一个监控区域\r\n     * @param data 需要添加的监控区域数据\r\n     * @returns {Promise.<boolean>} 添加成功返回true，否则返回false；\r\n     */\r\n    static async add_monitoringArea(data){\r\n        const id = await MonitoringAreaService.findMaxId();\r\n        data.id = Number(id) + 1;\r\n        // let monitoringArea = new MonitoringAreaModel(data);\r\n        let success = false;\r\n        await MonitoringAreaModel.create(data,function (err,monitoringArea) {\r\n            if(!err) {\r\n                success = true;\r\n                logger.info('添加监控区域成功');\r\n            }else{\r\n                logger.error(err.message);\r\n            }\r\n        });\r\n\r\n        return success;\r\n    }\r\n\r\n    /**\r\n     * 根据条件删除监控区域\r\n     * @param conditions 删除条件\r\n     * @returns {Promise.<boolean>}删除成功返回true，否则返回false；\r\n     */\r\n    static async delete_monitoringArea(conditions) {\r\n        let success = false;\r\n        const result = await MonitoringAreaModel.remove(conditions,function (err,monitoringArea) {\r\n            if(!err) {\r\n                success = true;\r\n                logger.info('删除监控区域['+ monitoringArea.id +']成功');\r\n            }else{\r\n                logger.error(err.message);\r\n            }\r\n        });\r\n        return success;\r\n    }\r\n\r\n    /**\r\n     * 修改监控区域信息\r\n     * @param conditions 修改条件\r\n     * @param data 新的监控区域数据\r\n     * @returns {Promise.<*>} 返回修改后的数据\r\n     */\r\n    static async edit_monitoringArea(conditions,data){\r\n        let result = null;\r\n        result = await MonitoringAreaModel.update(conditions,data).exec();\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * 根据条件查询符合条件的监控区域数量\r\n     * @param conditions\r\n     * @returns {Promise.<*>}\r\n     */\r\n    static async getTotal(conditions){\r\n        return await MonitoringAreaModel.find(conditions).count();\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * 查询所有监控区域\r\n     * @returns {Promise.<*>}\r\n     */\r\n    static async findAll(sort){\r\n        if(sort){\r\n            return await MonitoringAreaModel.find().sort(sort);\r\n        }else{\r\n            return await MonitoringAreaModel.find();\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * 根据条件查询监控区域\r\n     * @param conditions 查询条件\r\n     * @param sort 排序\r\n     * @param pagination 分页\r\n     * @returns {Promise.<*>} 返回查询到的数据\r\n     */\r\n    static async find_monitoringArea(conditions,sort,pagination){\r\n        let result = null;\r\n        if(sort){\r\n\r\n            if(pagination){\r\n                result = await MonitoringAreaModel.find(conditions).skip(pagination.pageStart).limit(pagination.pageSize).sort(sort);\r\n            }else{\r\n                result = await MonitoringAreaModel.find().sort(sort);\r\n            }\r\n        }else{\r\n            if(pagination){\r\n                result = await MonitoringAreaModel.find(conditions).skip(pagination.pageStart).limit(pagination.pageSize);\r\n            }else{\r\n                result = await MonitoringAreaModel.find(conditions);\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * 根据ID查找监控区域信息\r\n     * @param id\r\n     * @returns {Promise.<*>}\r\n     */\r\n    static async find_one(id){\r\n        return await MonitoringAreaModel.findOne({id:id});\r\n    }\r\n\r\n    /**\r\n     * 获得ID最大值\r\n     * @returns {Promise.<number>}\r\n     */\r\n    static async findMaxId(){\r\n        const result = await MonitoringAreaModel.find().sort({id:-1}).limit(1);\r\n        if(result && result.length > 0){\r\n            return result[0]._doc.id;\r\n        }else{\r\n            return 0\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * 根据条件判断是否存在符合条件的监控区域\r\n     * @param conditions 查询条件\r\n     * @returns {Promise.<boolean>} 有符合条件的对象返回true，否则返回false\r\n     */\r\n    static async isExist(conditions){\r\n        const result = await MonitoringAreaModel.find(conditions);\r\n        if(result && result.length > 0){\r\n            return true;\r\n        }else{\r\n            return false;\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexports=module.exports=MonitoringAreaService;\r\n//export default MonitoringAreaService;"]}