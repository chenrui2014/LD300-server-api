{"version":3,"sources":["../../src/services/eventVideoService.js"],"names":["require","Parser","logger","EventVideoModel","uuidv1","EventVideoService","data","id","success","create","err","eventVideo","info","error","message","conditions","remove","ip","result","update","exec","find","count","sort","pagination","skip","pageStart","limit","pageSize","findOne","length","_doc","exports","module"],"mappings":"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","file":"eventVideoService.js","sourcesContent":["/**\r\n * 操作事件数据对象\r\n * Created by chen on 17-8-23.\r\n */\r\n//import logger from '../logger';\r\n//import EventVideoModel from '../models/eventVideo.model';\r\n//import uuidv1 from 'uuid/v1';\r\n\r\nconst {Parser}=require('../log/log');\r\nconst logger={};\r\nParser(logger,'EventVideoService.js');\r\nconst EventVideoModel=require('../models/eventVideo.model');\r\nconst uuidv1=require('uuid/v1');\r\n\r\nclass EventVideoService {\r\n\r\n    /**\r\n     * 添加一个事件\r\n     * @param data 需要添加的事件数据\r\n     * @returns {Promise.<boolean>} 添加成功返回true，否则返回false；\r\n     */\r\n    static async add_eventVideo(data){\r\n        // const id = await EventVideoService.findMaxId();\r\n        // data.id = Number(id) + 1;\r\n        // let eventVideo = new EventVideoModel(data);\r\n        if(!data.id){\r\n            data.id = uuidv1();\r\n        }\r\n\r\n\r\n        let success = false;\r\n        await EventVideoModel.create(data,function (err,eventVideo) {\r\n            if(!err) {\r\n                success = true;\r\n                logger.info('添加事件成功');\r\n            }else{\r\n                logger.error(err.message);\r\n            }\r\n        });\r\n\r\n        return success;\r\n    }\r\n\r\n    /**\r\n     * 根据条件删除事件\r\n     * @param conditions 删除条件\r\n     * @returns {Promise.<boolean>}删除成功返回true，否则返回false；\r\n     */\r\n    static async delete_eventVideo(conditions) {\r\n        let success = false;\r\n        const result = await EventVideoModel.remove(conditions,function (err,eventVideo) {\r\n            if(!err) {\r\n                success = true;\r\n                logger.info('删除事件['+ eventVideo.ip +']成功');\r\n            }else{\r\n                logger.error(err.message);\r\n            }\r\n        });\r\n        return success;\r\n    }\r\n\r\n    /**\r\n     * 修改事件信息\r\n     * @param conditions 修改条件\r\n     * @param data 新的事件数据\r\n     * @returns {Promise.<*>} 返回修改后的数据\r\n     */\r\n    static async edit_eventVideo(conditions,data){\r\n        let result = null;\r\n        result = await EventVideoModel.update(conditions,data).exec();\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * 根据条件查询符合条件的事件数量\r\n     * @param conditions\r\n     * @returns {Promise.<*>}\r\n     */\r\n    static async getTotal(conditions){\r\n        return await EventVideoModel.find(conditions).count();\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * 查询所有事件\r\n     * @returns {Promise.<*>}\r\n     */\r\n    static async findAll(sort){\r\n        if(sort){\r\n            return await EventVideoModel.find().sort(sort);\r\n        }else{\r\n            return await EventVideoModel.find();\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * 根据条件查询事件\r\n     * @param conditions 查询条件\r\n     * @param sort 排序\r\n     * @param pagination 分页\r\n     * @returns {Promise.<*>} 返回查询到的数据\r\n     */\r\n    static async find_eventVideo(conditions,sort,pagination){\r\n        let result = null;\r\n        if(sort){\r\n\r\n            if(pagination){\r\n                result = await EventVideoModel.find(conditions).skip(pagination.pageStart).limit(pagination.pageSize).sort(sort);\r\n            }else{\r\n                result = await EventVideoModel.find().sort(sort);\r\n            }\r\n        }else{\r\n            if(pagination){\r\n                result = await EventVideoModel.find(conditions).skip(pagination.pageStart).limit(pagination.pageSize);\r\n            }else{\r\n                result = await EventVideoModel.find(conditions);\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * 根据ID查找事件信息\r\n     * @param id\r\n     * @returns {Promise.<*>}\r\n     */\r\n    static async find_one(id){\r\n        return await EventVideoModel.findOne({id:id});\r\n    }\r\n\r\n    /**\r\n     * 获得ID最大值\r\n     * @returns {Promise.<number>}\r\n     */\r\n    static async findMaxId(){\r\n        const result = await EventVideoModel.find().sort({id:-1}).limit(1);\r\n        if(result && result.length > 0){\r\n            return result[0]._doc.id;\r\n        }else{\r\n            return 0\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * 根据条件判断是否存在符合条件的事件\r\n     * @param conditions 查询条件\r\n     * @returns {Promise.<boolean>} 有符合条件的对象返回true，否则返回false\r\n     */\r\n    static async isExist(conditions){\r\n        const result = await EventVideoModel.find(conditions);\r\n        if(result && result.length > 0){\r\n            return true;\r\n        }else{\r\n            return false;\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexports=module.exports=EventVideoService;\r\n//export default EventVideoService;"]}