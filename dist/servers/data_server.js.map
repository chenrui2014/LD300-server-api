{"version":3,"sources":["../../src/servers/data_server.js"],"names":["HostService","findAll","getHosts","hostID","distance","monitorArea","CamerasService","id","cams","MonitoringService","find_monitoringArea","hostId","min_dis","$lte","max_dis","$gte","monitors","forEach","monitor","camera","length","item","index","arr","cameraId","m","demo","ptz","alarm","audio","screenShot","min","max","presets","preset","push","getMointors","find_one","ipc","Promise","reject","VendorService","brand","vendor","vendorCode","logger","log","console","transformIPC","getIPC","ipcs","ipcList","_doc","getAllIPC","record","event","happenTime","moment","format","position","hid","EventService","add_event","recordAlert","eventVideo","eventId","pid","path","data","EventVideoService","add_eventVideo","recordAlertVideo","alert","eventRecord","require","_","config","global","server_config","fileServer","Parser","setBrands","ip","port","user","pwd","serial_port","functions","onvif","onvif_user","onvif_pwd","onvif_port","onvif_path","exp","proxy","name","store","get","fun","apply","Array","prototype","slice","call","arguments","exports","module","partial"],"mappings":"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","file":"data_server.js","sourcesContent":["/**\r\n * Created by Luky on 2017/8/17.\r\n */\r\n\r\n//import HostService from '../services/hostService';\r\n//import MonitoringService from '../services/monitoringService';\r\n//import PresetService from '../services/PresetService';\r\n//import CameraService from '../services/cameraService';\r\n\r\nconst HostService =require('../services/hostService');\r\nconst MonitoringService =require('../services/monitoringService');\r\n//const PresetService =require('../services/PresetService');\r\nconst CamerasService =require('../services/camerasService');\r\nconst VendorService = require('../services/vendorService');\r\nconst EventService = require('../services/eventService');\r\nconst EventVideoService = require('../services/eventVideoService');\r\nconst moment = require('moment');\r\n\r\nconst _=require('lodash');\r\nconst config=global.server_config||require('../config/config');\r\nconst fileServer=require('./data_server_file');\r\nconst {Parser}=require('../log/log');\r\nlet logger={};\r\nParser(logger,'data_server.js');\r\n\r\nconst setBrands={\r\n    '大华':'dahua','dahua':'dahua',\r\n    '和普威尔':'hopewell','hopewell':'hopewell',\r\n    '海康威视':'hikvision','hikvision':'hikvision',\r\n    '国营508集成海康威视':'508','508':'508',\r\n    'onvif协议':'onvif','onvif':'onvif'\r\n};\r\n//数据格式[{id,port},{...},...]\r\nasync function getHosts()\r\n{\r\n    //查询出所有的主机信息\r\n    return await HostService.findAll();\r\n}\r\n\r\n//数据格式[{id,demo,alarm,screenshot,audio,min,max,presets:[{x,y,z,distance},{...},...]},{...},...]\r\n//id,demo,alarm,screenshot,audio,min,max从MonitoringAreaSchema筛选后通过transformIPC转换\r\n//presets为PresetSchema数据\r\n//查询结果为监控distance位置摄像头的配置信息\r\nasync function getMointors(hostID,distance){\r\n    //MonitoringAreaSchema条件 hostid==host && min<=distance&&distance<=max\r\n    let monitorArea = {};\r\n    const cams = await CamerasService.findAll({id:1});\r\n    const monitors = await MonitoringService.find_monitoringArea({hostId:hostID,min_dis:{$lte:distance},max_dis:{$gte:distance}});//获得监控区域\r\n    // let monitorList = [];\r\n    // monitors.forEach(function (monitor) {\r\n    //     monitorList.push(monitor._doc);\r\n    // });\r\n    monitorArea.id = hostID;\r\n    monitorArea.monitors = [];\r\n\r\n    monitors.forEach(function (monitor) {\r\n        //const camera = await CamerasService.find_one(monitor.cameraId);//获得关联摄像头\r\n        //const presets = await PresetService.find_preset({monitorId:monitor.id});\r\n        let camera = {};\r\n        if(cams && cams.length > 0){\r\n            cams.forEach(function(item,index,arr){\r\n                if(monitor.cameraId ===item.id){\r\n                    camera = item;\r\n                }\r\n            });\r\n        }\r\n        let m = {id:camera.id,demo:camera.ptz,alarm:camera.alarm,audio:camera.audio,screenShot:camera.screenShot,min:monitor.min_dis,max:monitor.max_dis,presets:camera.preset};\r\n        //m.presets = presets;\r\n        //monitorArea.monitors = m;\r\n        monitorArea.monitors.push(m);\r\n    });\r\n    return monitorArea.monitors;\r\n}\r\n\r\nfunction transformIPC(ipc) {\r\n\r\n    return {\r\n        id:ipc.id,\r\n        ip:ipc.ip,\r\n        port:ipc.port,\r\n        user:ipc.user,\r\n        pwd:ipc.pwd,\r\n        brand:setBrands[ipc.brand],\r\n        ptz:{\r\n            port:ipc.serial_port\r\n        },\r\n        functions:{\r\n            ptz:ipc.ptz,\r\n            alarm:ipc.alarm,\r\n            audio:ipc.audio\r\n        },\r\n        onvif:{\r\n            user:ipc.onvif_user,\r\n            pwd:ipc.onvif_pwd,\r\n            port:ipc.onvif_port,\r\n            path:ipc.onvif_path\r\n        }\r\n    };\r\n}\r\n\r\n//数据格式transformIPC\r\nasync function getIPC(id){\r\n    let ipc= await CamerasService.find_one(id);//实现\r\n    if(!ipc) await Promise.reject();\r\n    let vendor = await VendorService.find_one(ipc.brand);\r\n    if(vendor) {\r\n        ipc.brand = vendor.vendorCode;\r\n        logger.log('摄像头厂商',vendor.vendorCode);\r\n        console.log('摄像头厂商'+vendor.vendorCode);\r\n    }\r\n    return transformIPC(ipc);\r\n}\r\n\r\nasync function getAllIPC(){\r\n    let ipcs= await CamerasService.findAll({id:1});\r\n    let ipcList=[];\r\n    ipcs.forEach(function (ipc) {\r\n        ipcList.push(ipc._doc);\r\n    });\r\n    return ipcList;\r\n}\r\n\r\n/*\r\n//数据格式[1,2,3,4,5]\r\nasync function getIPCIDsSortByPoint(){\r\n    //查询出所有摄像头的编号返回即可，根据摄像头的编号排序基本没问题\r\n    let ipcs= await CamerasService.findAll({id:1});\r\n    let ipcIds=[];\r\n    ipcs.forEach(function (ipc) {\r\n        ipcIds.push(ipc._doc.id);\r\n    });\r\n    return ipcIds;\r\n}\r\n*/\r\n\r\n//记录警报\r\nasync function  recordAlert(record) {\r\n    //属性id，hid(主机id),position(报警位置)\r\n    //*******将报警事件添加到数据库*******//\r\n    let event = {};\r\n    event.id = record.id;\r\n    event.happenTime = moment().format('YYYY年MM月DD日 HH:mm:ss');\r\n    event.position = record.position;\r\n    event.hid = record.hid;\r\n\r\n    await EventService.add_event(event);\r\n    //********************************//\r\n\r\n}\r\n\r\n//用于事件调用摄像头记录下的路线\r\nasync function recordAlertVideo(record) {\r\n    //属性id(同recordalert中的id，为事件编号)，path,pid(摄像头id),hid(主机id)\r\n    //*******将录制视频的摄像头以及录像地址存入数据库*******//\r\n    let eventVideo = {};\r\n    eventVideo.eventId = record.id;\r\n    eventVideo.pid=record.pid;\r\n    eventVideo.path = data.path;\r\n\r\n    await EventVideoService.add_eventVideo(event);\r\n}\r\n\r\nasync function eventRecord(){\r\n    let alert = await recordAlert();\r\n}\r\n\r\n\r\nconst exp={\r\n    getHosts,\r\n    getMointors,\r\n    getIPC,\r\n    getAllIPC,\r\n    //getIPCIDsSortByPoint,\r\n    transformIPC,\r\n    recordAlert,\r\n    recordAlertVideo\r\n};\r\n\r\nfunction proxy(name) {\r\n    let store=_.get(config,'runMode.store','db');\r\n    logger.log('调用数据服务',{store,name});\r\n    let fun=(store==='db'?exp:fileServer)[name];\r\n    return fun.apply(null,Array.prototype.slice.call(arguments,1));\r\n}\r\n\r\nexports=module.exports={\r\n    getMointors:_.partial(proxy,'getMointors'),\r\n    getHosts:_.partial(proxy,'getHosts'),\r\n    getIPC:_.partial(proxy,'getIPC'),\r\n    getAllIPC:_.partial(proxy,'getAllIPC'),\r\n    //getIPCIDsSortByPoint:_.partial(proxy,'getIPCIDsSortByPoint'),\r\n    transformIPC:_.partial(proxy,'transformIPC'),\r\n    recordAlert:_.partial(proxy,'recordAlert'),\r\n    recordAlertVideo:_.partial(proxy,'recordAlertVideo'),\r\n};\r\n"]}