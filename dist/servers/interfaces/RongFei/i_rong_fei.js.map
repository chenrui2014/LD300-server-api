{"version":3,"sources":["../../../../src/servers/interfaces/RongFei/i_rong_fei.js"],"names":["_","require","config","global","server_config","Formatter","Host","partition","getData","RFCmdFormatter","index","hostEvt","type","ext","stateNew","States","Alarm","getPartition","hid","position","Error","Unknown","ret","Buffer","allocUnsafe","i","writeUInt32BE","cmd","length","CmdReceived","unKnown","data1","readUInt32BE","cmdType","clear","hostid","pi","find","dis","distance","exports","module"],"mappings":";;;;;;;;;;AAAA;;;;AAIA,IAAMA,IAAEC,QAAQ,QAAR,CAAR;AACA,IAAMC,SAAOC,OAAOC,aAAP,IAAsBH,QAAQ,wBAAR,CAAnC;AACA,IAAMI,YAAUJ,QAAQ,kBAAR,CAAhB;AACA,IAAMK,OAAKL,QAAQ,oBAAR,CAAX;AACA,IAAMM,YAAUL,OAAOM,OAAP,CAAe,4BAAf,CAAhB;;IAEMC,c;;;;;;;;;;;+CACqBC,K,EAAMC,O,EAAQ;AACjC;;;;;;;AAOA,gBAAIC,OAAK,CAAT,CAAW,IAAIC,MAAI,CAAR;AACX,gBAAGF,QAAQG,QAAR,KAAmBR,KAAKS,MAAL,CAAYC,KAAlC,EAAwC;AACpCJ,uBAAK,CAAL;AACAC,sBAAI,KAAKI,YAAL,CAAkBN,QAAQO,GAA1B,EAA8BP,QAAQQ,QAAtC,CAAJ;AACA,oBAAG,CAAC,CAAD,KAAKN,GAAR,EAAY;AACR,2BAAO,IAAP;AACH;AACJ,aAND,MAOK,IAAGF,QAAQG,QAAR,KAAmBR,KAAKS,MAAL,CAAYK,KAAlC,EAAwC;AACzCR,uBAAK,CAAL,CADyC,CAClC;AACV,aAFI,MAGA,IAAGD,QAAQG,QAAR,KAAmBR,KAAKS,MAAL,CAAYM,OAAlC,EAA0C;AAC3CT,uBAAK,CAAL,CAD2C,CACpC;AACV;AACD,gBAAIU,MAAIC,OAAOC,WAAP,CAAmB,CAAnB,CAAR;AACA,gBAAIC,IAAE,CAAN;AACAH,gBAAII,aAAJ,CAAkB,aAAY,CAAChB,QAAM,KAAP,KAAe,EAA3B,GAAgC,CAACC,QAAQO,GAAR,GAAY,IAAb,KAAoB,CAApD,GAAwDN,OAAK,GAA/E,EAAoFa,CAApF,EAAsF,IAAtF,EAA4FA,KAAG,CAAH;AAC5FH,gBAAII,aAAJ,CAAkBb,GAAlB,EAAsBY,CAAtB,EAAwB,IAAxB;AACA,mBAAOH,GAAP;AACH;;;uCAEcK,G,EAAI;AACf,gBAAGA,IAAIC,MAAJ,KAAa,CAAhB,EAAmB,OAAO,EAAChB,MAAKP,UAAUwB,WAAV,CAAsBC,OAA5B,EAAP;AACnB,gBAAIC,QAAMJ,IAAIK,YAAJ,CAAiB,CAAjB,EAAmB,IAAnB,CAAV;AACA,gBAAId,MAAI,aAAWa,KAAnB;AACA,gBAAIE,UAAQf,MAAI,GAAhB;AACAA,kBAAIA,OAAK,CAAT;AACA,gBAAGe,YAAU,CAAb,EAAe;AACX,uBAAO,EAACrB,MAAKP,UAAUwB,WAAV,CAAsBK,KAA5B,EAAkChB,QAAlC,EAAP;AACH;AACD,mBAAO,EAACN,MAAKP,UAAUwB,WAAV,CAAsBC,OAA5B,EAAP;AACH;;;qCAEYK,M,EAAOhB,Q,EAAS;AACzB,gBAAGgB,UAAQ5B,UAAUqB,MAArB,EAA4B;AACxB,uBAAO,CAAC,CAAR;AACH;AACD,gBAAIQ,KAAG7B,UAAU4B,MAAV,EAAkB5B,SAAzB;AACA,gBAAIe,MAAItB,EAAEqC,IAAF,CAAOD,EAAP,EAAU,UAACE,GAAD,EAAO;AAAC,uBAAOA,IAAIC,QAAJ,IAAcpB,QAArB;AAA8B,aAAhD,KAAmD,EAACT,OAAM,CAAC,CAAR,EAA3D;AACA,mBAAOY,IAAIZ,KAAX;AACH;;;;EAjDwBL,S;;AAoD7BmC,UAAQC,OAAOD,OAAP,GAAe/B,cAAvB","file":"i_rong_fei.js","sourcesContent":["/**\r\n * Created by Luky on 2017/10/21.\r\n */\r\n\r\nconst _=require('lodash');\r\nconst config=global.server_config||require('../../../config/config');\r\nconst Formatter=require('../cmd_formatter');\r\nconst Host=require('../../../host/host');\r\nconst partition=config.getData('partition_host_config.json');\r\n\r\nclass RFCmdFormatter extends Formatter{\r\n    formatHostStateChanged(index,hostEvt){\r\n        /*    [\r\n                {name:'length',size:8,val:8},\r\n                {name:'index',size:12,val:(index&0xfff)},\r\n                {name:'hostID',size:8,val:(hid&0xff)},\r\n                {name:'type',size:4,val:(type&0xf)},\r\n                {name:'extParam',size:32,val:(type&0xffff)}\r\n            ]);*/\r\n        let type=0;let ext=0;\r\n        if(hostEvt.stateNew===Host.States.Alarm){\r\n            type=1;\r\n            ext=this.getPartition(hostEvt.hid,hostEvt.position);\r\n            if(-1===ext){\r\n                return null;\r\n            }\r\n        }\r\n        else if(hostEvt.stateNew===Host.States.Error){\r\n            type=3;//主机异常\r\n        }\r\n        else if(hostEvt.stateNew===Host.States.Unknown){\r\n            type=4;//主机失联\r\n        }\r\n        let ret=Buffer.allocUnsafe(8);\r\n        let i=0;\r\n        ret.writeUInt32BE(0x08000000|((index&0xfff)<<12)|((hostEvt.hid&0xff)<<4)|(type&0xf),i,true);i+=4;\r\n        ret.writeUInt32BE(ext,i,true);\r\n        return ret;\r\n    }\r\n\r\n    formatReceived(cmd){\r\n        if(cmd.length!==8) return {type:Formatter.CmdReceived.unKnown};\r\n        let data1=cmd.readUInt32BE(0,true);\r\n        let hid=0x00000fff&data1;\r\n        let cmdType=hid&0xf;\r\n        hid=hid>>4;\r\n        if(cmdType===0){\r\n            return {type:Formatter.CmdReceived.clear,hid};\r\n        }\r\n        return {type:Formatter.CmdReceived.unKnown};\r\n    }\r\n\r\n    getPartition(hostid,position){\r\n        if(hostid>=partition.length){\r\n            return -1;\r\n        }\r\n        let pi=partition[hostid].partition;\r\n        let ret=_.find(pi,(dis)=>{return dis.distance>=position})||{index:-1};\r\n        return ret.index;\r\n    }\r\n}\r\n\r\nexports=module.exports=RFCmdFormatter;"]}