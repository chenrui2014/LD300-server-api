{"version":3,"sources":["../../../src/servers/cache/_h264_2flv.js"],"names":["Transform","require","NALU","SPSParser","PPSParser","SEIParser","SliceParser","POC","config","global","server_config","FLV","_","drop_span","cacheType","H264Switch","dropOption","_out","_amf2","duration","width","height","videodatarate","framerate","videocodecid","VideoEncodings","AVC","title","encoder","filesize","_cacheType","getCacheType","_cache","IDR","_cacheOption","clamp","_push","_pushTypeIDR","_transform","_transformIDR","_transformOther","_size","Frame_time","_pushTypeFrameTime","_htime","Frame_count","_pushTypeFrameCount","_SPSTable","_SPSBuffers","_PPSTable","_PPSBuffers","_SEI","_SEIBuffer","_poc","slice","nal_unit_type_string","buf","p","idr","_isIDR","push","last","length","splice","inorder","maxPOC","Math","min","cid","cid2","cur","runtimeLength","del","i","count","time","countpre","_link","poc","sb","sb_other","sid","pic_num","_next","_unlinkByTime","_unlinkByCount","nalu","unit","type","TYPES","SPS","ret","defaults","parseSPS","present_size","sps_id","PPS","parsePPS","pps_id","SEI","parseSEI","SLICE","AUXILIARY_SLICE","_isIDRType","parseSlice","initPOC","resetSEI","nal","enc","next","info","_parseNALU","headBytes","scriptTag","_pushSequenceHander","slices","j","VedioTagAVCPackageNALU","FrameTypes","KeyFrame","InterFrame","_head","c","toUpperCase","exports","module"],"mappings":"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","file":"_h264_2flv.js","sourcesContent":["/**\r\n * Created by Luky on 2017/8/6.\r\n */\r\n\r\nconst Transform=require('stream').Transform;\r\nconst NALU=require('../../h264/h264_nalu_parser');\r\nconst SPSParser=require('../../h264/h264_sps_parser');\r\nconst PPSParser=require('../../h264/h264_pps_parser');\r\nconst SEIParser=require('../../h264/h264_sei_parser');\r\nconst SliceParser=require('../../h264/h264_slice_parser');\r\nconst POC=require('../../h264/h264_poc');\r\nconst config=global.server_config||require('../../config/config');\r\nconst FLV=require('../../flv/flv_encoder');\r\nconst _=require('lodash');\r\nconst drop_span=5;\r\n\r\nconst cacheType={\r\n    'IDR':0,\r\n    'Frame_time':1,\r\n    'Frame_count':2\r\n};\r\n\r\nclass H264Switch extends Transform{\r\n    constructor(cacheType='IDR',dropOption = 0){\r\n        super();\r\n        this._out=0;\r\n        //this._h264=new H264Decoder();\r\n        this._amf2={\r\n            duration: 0,\r\n            width: 0,\r\n            height: 0,\r\n            videodatarate: 0,\r\n            framerate: 100,\r\n            videocodecid: FLV.VideoEncodings.AVC,\r\n            title: 'lambda 0.1',\r\n            encoder: 'lambda',\r\n            filesize: 0\r\n        };\r\n        this._cacheType=H264Switch.getCacheType(cacheType);\r\n        this._cache=[];\r\n        if(this._cacheType===cacheType.IDR){\r\n            this._cacheOption= _.clamp(dropOption,1,3) ;\r\n            this._push=this._pushTypeIDR;\r\n            this._transform=this._transformIDR;\r\n        }\r\n        else{\r\n            this._transform=this._transformOther;\r\n            this._size=0;\r\n/*            this._head={_next:null};\r\n            this._head._pre=this._head;*/\r\n            if(this._cacheType===cacheType.Frame_time){\r\n                this._push=this._pushTypeFrameTime;\r\n                this._cacheOption= _.clamp(dropOption,500,3000) ;\r\n                this._htime=null;\r\n            }\r\n            else if(this._cacheType===cacheType.Frame_count){\r\n                this._push=this._pushTypeFrameCount();\r\n                this._cacheOption= _.clamp(dropOption,10,75) ;\r\n            }\r\n        }\r\n\r\n        this._SPSTable=[];\r\n        this._SPSBuffers=[];\r\n        this._PPSTable=[];\r\n        this._PPSBuffers=[];\r\n        this._SEI={};\r\n        this._SEIBuffer=null;\r\n        this._poc=new POC();\r\n    }\r\n\r\n    static get CacheType(){\r\n        return cacheType;\r\n    }\r\n\r\n    static getCacheType(c){\r\n        switch(c.toUpperCase()){\r\n            case 'IDR':return 0;\r\n            case 'Frame-time':return 1;\r\n            case 'Frame-count':return 2;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    open(){\r\n        this._out=1;\r\n    }\r\n\r\n    close(){\r\n        this._out=0;\r\n    }\r\n\r\n    _isIDR(slice){\r\n        return slice.nal_unit_type_string==='IDR';\r\n    }\r\n\r\n    get _isEmpty(){\r\n        return this._head._next=null;\r\n    }\r\n\r\n    _pushTypeIDR(slice,buf){\r\n        let p={\r\n            slice:slice,\r\n            buf:buf,\r\n            idr:this._isIDR(slice)\r\n        };\r\n        if(p.idr){//按组存放\r\n            this._cache.push([p]);\r\n        }\r\n        else{\r\n            _.last(this._cache).push(p);\r\n        }\r\n        if(this._cache.length>this._cacheOption){\r\n            this._size-=this._cache[0].length;\r\n            this._cache.splice(0,1);\r\n        }\r\n    }\r\n\r\n    _link(p){\r\n        if(p.idr){//按组存放\r\n            p.inorder=true;\r\n            p.maxPOC=Math.min(p.cid,p.cid2);\r\n            this._cache.push([p]);\r\n        }\r\n        else{\r\n            let last=_.last(this._cache);\r\n            last.push(p);\r\n            if(Math.min(p.cid,p.cid2)<last[0].maxPOC){\r\n                last[0].inorder=false;\r\n            }\r\n        }\r\n\r\n/*        p._pre=this._head._pre;\r\n        this._head._pre.next=p;\r\n        this._head._pre=p;*/\r\n        this._size++;\r\n    }\r\n\r\n    _unlinkByTime(){\r\n        let cur=config.runtimeLength();\r\n        if(this._cacheOption-this._htime<500){\r\n            return;\r\n        }\r\n        let del=cur-this._cacheOption;\r\n        let i=0,count=0;\r\n        while(_.last(this._cache[i]).time<=del){\r\n            count+=this._cache[i].length;i++;\r\n        }\r\n        if(i>0){\r\n            this._cache.splice(0,i);\r\n            this._size-=count;\r\n        }\r\n\r\n    }\r\n\r\n    _unlinkByCount(){\r\n        if(this._size*1.25<this._cacheOption){\r\n            return;\r\n        }\r\n        let del=this._size-this._cacheOption;\r\n        let i=0,count=0,countpre=0;\r\n        do{\r\n            countpre=count;\r\n            count+=this._cache[i].length;\r\n        }while(count<=del);\r\n        if(del-countpre<=3){//如果剩下的只有一个I帧甚至3个帧一并删除\r\n            this._cache.splice(0,i+1);\r\n            this._size-=count;\r\n            del=0;\r\n        }\r\n        else if(i>0){\r\n            this._cache.splice(0,i);\r\n            this._size-=countpre;\r\n            del-=countpre;\r\n        }\r\n        if(!del) return;\r\n        //............\r\n    }\r\n\r\n    _pushTypeFrameTime(slice,buf){\r\n        this._htime=this._htime||config.runtimeLength();\r\n        this._link({\r\n            time:config.runtimeLength(),\r\n            slice:slice,\r\n            cid:slice.poc.sb,\r\n            cid2:slice.poc.sb_other,\r\n            sid:slice.poc.pic_num,\r\n            buf:buf,\r\n            idr:this._isIDR(slice),\r\n            _next:null\r\n        });\r\n        this._unlinkByTime();\r\n    }\r\n\r\n    _pushTypeFrameCount(slice,buf){\r\n        this._link({\r\n            slice:slice,\r\n            cid:slice.poc.sb,\r\n            sid:slice.poc.pic_num,\r\n            buf:buf,\r\n            idr:this._isIDR(slice),\r\n            _next:null\r\n        });\r\n        this._unlinkByCount();\r\n    }\r\n\r\n    _parseNALU(nalu){\r\n        let unit=new NALU(nalu);\r\n        switch(unit.type){\r\n            case NALU.TYPES.SPS:\r\n            {\r\n                let ret=_.defaults(SPSParser.parseSPS(nalu),{nalu:unit});\r\n                if(this._amf2.width===0){\r\n                    this._amf2.width=ret.present_size.width;\r\n                    this._amf2.height=ret.present_size.height;\r\n                }\r\n                this._SPSTable[ret.sps_id]=ret;\r\n                this._SPSBuffers[ret.sps_id]=nalu;\r\n                return ret;\r\n            }\r\n            case NALU.TYPES.PPS:\r\n            {\r\n                let ret=_.defaults(PPSParser.parsePPS(nalu,this._SPSTable),{nalu:unit});\r\n                this._PPSTable[ret.pps_id]=ret;\r\n                this._PPSBuffers[ret.pps_id]=nalu;\r\n                return ret;\r\n            }\r\n            case NALU.TYPES.SEI:{\r\n                //一般不需要解析\r\n                this._SEIBuffer=nalu;\r\n                return this._SEI=_.defaults(SEIParser.parseSEI(nalu),{nalu:unit});\r\n            }\r\n            case NALU.TYPES.IDR:\r\n            case NALU.TYPES.SLICE:\r\n            case NALU.TYPES.AUXILIARY_SLICE:\r\n                if(!this._isIDRType){\r\n                    let slice=_.defaults(SliceParser.parseSlice(nalu,this._SPSTable,this._PPSTable,this._SEI||{}),{nalu:unit});\r\n                    this._poc.initPOC(slice,this._SPSTable[slice.sps_id]);\r\n                    SEIParser.resetSEI(this._SEI);\r\n                    return slice;\r\n                }\r\n        }\r\n        return {nalu:unit};\r\n    }\r\n\r\n    _transformOther(nal,enc,next){\r\n\r\n    }\r\n\r\n    _transformIDR(nalu,enc,next){\r\n        const info=this._parseNALU(nalu);\r\n\r\n        switch(this._out){\r\n            case 0:\r\n                if(info.nalu.nal_unit_type_string==='SLICE'||info.nalu.nal_unit_type_string==='IDR'){\r\n                    this._push(info,nalu);\r\n                }\r\n                return next();\r\n            case 1:\r\n                this.push(FLV.headBytes());\r\n                this.push(FLV.scriptTag(this._amf2));\r\n                if(this._cache.length) {\r\n                    this._pushSequenceHander();\r\n                    for(let i=0;i<this._cache.length;i++){\r\n                        let slices=this._cache[i];\r\n                        for(let j=0;j<slices.length;j++){\r\n                            this.push(FLV.VedioTagAVCPackageNALU(0,0,slices[j].buf,(slices.idr?FLV.FrameTypes.KeyFrame:FLV.FrameTypes.InterFrame)));\r\n                        }\r\n                    }\r\n                    this._cache=[];\r\n                }\r\n                this._out=2;\r\n                return next();\r\n            case 2:\r\n                if(info.nalu.nal_unit_type_string==='IDR'){\r\n                    this._pushSequenceHander();\r\n                    this.push(FLV.VedioTagAVCPackageNALU(0,0,nalu,FLV.FrameTypes.KeyFrame));\r\n                }\r\n                else if(info.nalu.nal_unit_type_string==='SLICE'){\r\n                    this.push(FLV.VedioTagAVCPackageNALU(0,0,nalu,FLV.FrameTypes.InterFrame));\r\n                }\r\n\r\n                return next();\r\n        }\r\n        next();\r\n    }\r\n\r\n}\r\n\r\n\r\nexports=module.exports=H264Switch;\r\n"]}