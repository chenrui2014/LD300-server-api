{"version":3,"sources":["../../src/servers/__live_server.js"],"names":["EventEmitter","require","io","assert","_","path","crypto","factory","url","Writable","config","global","server_config","ptzLock","get","Live","port","_path","_port","_open","_rooms","_server","socket","serveClient","listen","on","client","uri","parse","request","user","id","roomIDRegExp","RegExp","last","exec","freePTZ","zoom","ptz","play","preset","persistence","ipc","getIPC","emit","type","msg","join","then","data","to","pipe","end","catch","err","search","method","args","ok","rooms","bind","throttle","indexOf","apply","reason","unpipe","stopPlay","leave","removeAllListeners","close","exports","module"],"mappings":"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","file":"__live_server.js","sourcesContent":["/**\r\n * Created by Luky on 2017/7/20.\r\n */\r\n\r\nconst EventEmitter=require('events').EventEmitter;\r\nconst io=require('socket.io');\r\nconst assert=require('assert');\r\nconst _=require('lodash');\r\nconst path=require('path');\r\nconst crypto = require('crypto');\r\nconst factory=require('./ipc_factory');\r\nconst url=require('url');\r\nconst Writable = require('stream').Writable;\r\nconst config=global.server_config||require('../config/config');\r\nconst ptzLock=_.get(config,'ipc.ptzLock',15000);\r\n\r\nclass Live extends  EventEmitter{\r\n    constructor(port,_path){\r\n        super();\r\n        this._port=port||_.get(config,'ipc_server.port',3000);\r\n        this._path=_path||_.get(config,'ipc_server.path','/live');\r\n        this._open();\r\n        this._rooms={};\r\n    }\r\n\r\n    get path(){\r\n        return {port:this._port,path:this._path};\r\n    }\r\n\r\n    _open(){\r\n        if(this._server) return;\r\n        let socket=this._server=io({\r\n            path:this._path,\r\n            serveClient:false\r\n        });\r\n        //socket.origins(['*']);\r\n        socket.listen(this._port);\r\n        socket.on('connection',(client)=>{\r\n            let uri=url.parse(client.request.url,true);\r\n            let user=client.id;\r\n            const roomIDRegExp=new RegExp(`${this.path.path}\\\\/(\\\\d+)`,'i');\r\n            let id=_.last(roomIDRegExp.exec(uri.path)||[-1])-0;\r\n            let freePTZ=(zoom)=>{\r\n                delete zoom.freePTZ;\r\n                delete zoom.ptz;\r\n            };\r\n            let play=(id,preset,persistence)=>{\r\n                let ipc=factory.getIPC(id);\r\n                if(!ipc){\r\n                    client.emit('play',{type:'error',msg:'请求的摄像头不存在'});\r\n                    return;\r\n                }\r\n                if(id in this._rooms){\r\n                    client.join(id);\r\n                    this._rooms[id].client++;\r\n                    client.emit('play',{type:'succeed',msg:'成功加入监控'});\r\n                    return;\r\n                }\r\n                ipc.play(preset).then(()=>{\r\n                    client.join(id);\r\n                    this._rooms[id]={client:1,ipc:ipc};\r\n                    ipc.on('data',(data)=>{\r\n                        socket.to(id).emit('stream',data/*,{for:'everyone'}*/);\r\n                    });\r\n                    if(persistence){\r\n                        ipc.pipe(this,{end:false});\r\n                    }\r\n                    client.emit('play',{type:'succeed',msg:'成功加入监控'});\r\n                }).catch((err)=>{\r\n                    client.emit('play',{type:'error',msg:`请求的摄像头工作异常,内部错误信息为${err}`});\r\n                });\r\n            };\r\n            if(id!==-1){\r\n                play(id,uri.search.preset,uri.search.persistence);\r\n            }\r\n            client.on('play',play);\r\n            client.on('ptz',(id,method,args)=>{\r\n                assert.ok(user in client.rooms);\r\n                assert.ok(this._rooms[id].client>0);\r\n                let zoom=this._rooms[id];\r\n                if(zoom[id].ptz&&zoom.ptz!==user){\r\n                    client.emit('ptz',{type:'locked',msg:`云台正在被使用中,内部码${zoom.ptz}`});\r\n                    return;\r\n                }\r\n                zoom.ptz=user;\r\n                zoom.freePTZ=zoom.freePTZ||freePTZ.bind(null,zoom);\r\n                _.throttle(zoom.freePTZ,ptzLock);\r\n                assert.ok(['zoomIn','zoomOut','focusIn','focusOut','apertureIn','apertureOut','move','moveToPoint','ptzStop'].indexOf(method)!==-1);\r\n                zoom.ipc[method].apply(zoom.ipc,args);\r\n            });\r\n            client.on('disconnect', (reason) => {\r\n\r\n            });\r\n            client.on('leave',(id)=>{\r\n                client.emit('leave',{type:'succeed',msg:'成功退出监控'});\r\n                assert.ok(id in this._rooms);\r\n                this._rooms[id].client--;\r\n                if(0===this._rooms[id].client){\r\n                    let ipc=factory.getIPC(id);\r\n                    ipc.unpipe(this);\r\n                    ipc.stopPlay().then(()=>{}).catch(()=>{});\r\n                }\r\n                client.leave(id);\r\n            });\r\n        });\r\n    }\r\n\r\n    _close(){\r\n        if(this._server){\r\n            this._server.removeAllListeners();\r\n            this._server.close();\r\n            this._server=null;\r\n        }\r\n    }\r\n}\r\n/*\r\n\r\nfunction randomPath(){\r\n    const hash = crypto.createHash('md5');\r\n    hash.update(new Date().getTime().toString());\r\n    return hash.digest('hex').slice(0,8);\r\n}\r\n*/\r\n\r\nexports=module.exports=new Live();"]}