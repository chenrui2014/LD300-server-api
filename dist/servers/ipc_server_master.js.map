{"version":3,"sources":["../../src/servers/ipc_server_master.js"],"names":["_","require","IPC","Data","EventEmitter","config","global","server_config","store","get","listenState","http","numCPUs","cpus","length","numCP","Math","round","cp","url","path","childjs","resolve","root","Parser","httpProxy","proxy","createProxyServer","IPCServer","options","_workers","_hServer","_ipcs","port","ipc","id","_ipc_online","removeListener","_ipc_offline","emit","bind","Events","Online","Offline","on","worker","event","type","ct","payload","count","orderBy","log","innerEvent","stop","_startWorker","err","error","innerError","forEach","ipcs","_addIpcListener","i","args","process","env","NODE_ENV","fork","concat","execArgv","debugPort","wobj","start","Date","lsn","_onProcessMessage","push","Promise","reject","httpServer","createServer","req","res","uri","parse","pathname","indexOf","warn","setHeader","writeHead","write","end","parseInt","slice","findWorker","shift","target","web","e","listen","errorBind","code","onListen","x","setInterval","some","clearInterval","removeAllListeners","_removeIpcListener","kill","close","exports","module"],"mappings":"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","file":"ipc_server_master.js","sourcesContent":["/**\r\n * Created by Luky on 2017/8/17.\r\n */\r\n\r\nconst _=require('lodash');\r\nconst IPC=require('../ipcs/base/ipc');\r\nconst Data=require('./data_server');\r\nconst EventEmitter = require('events').EventEmitter;\r\nconst config=global.server_config||require('../config/config');\r\nconst store=_.get(config,'runMode.store');\r\nconst listenState=false;//_.get(config,'ipc.listen',false);\r\nconst http = require('http');\r\nconst numCPUs = require('os').cpus().length;\r\nconst numCP=Math.round(numCPUs*5/8);\r\nconst cp = require('child_process');\r\nconst url=require('url');\r\nconst path = require('path');\r\nconst childjs=global.server_config?\r\n    path.resolve(config.root,'live.js')\r\n    :path.resolve(config.root,'servers/ipc_server_child.js');\r\nconst {Parser}=require('../log/log');\r\nconst httpProxy =require('http-proxy');\r\nlet proxy = httpProxy.createProxyServer();\r\n\r\nclass IPCServer extends EventEmitter{\r\n    constructor(options){\r\n        super();\r\n        this._workers = [];\r\n        this._hServer=null;\r\n        this._ipcs={};\r\n        this.options=options||{};\r\n        this.options.port=this.options.port||_.get(config,'ipc_server.port',3000);\r\n        Parser(this,'ipc_server_master.js',{port:this.options.port});\r\n    }\r\n\r\n    _removeIpcListener(ipc,id){\r\n        if(!this._ipc_online) return;\r\n        ipc.removeListener('online',this._ipc_online);\r\n        ipc.removeListener('offline',this._ipc_offline);\r\n    }\r\n\r\n    _addIpcListener(ipc,id) {\r\n        this._ipc_online=this._ipc_online||this.emit.bind(this,IPC.Events.Online);\r\n        this._ipc_offline=this._ipc_offline||this.emit.bind(this,IPC.Events.Offline);\r\n        ipc.on('online',this._ipc_online);\r\n        ipc.on('offline',this._ipc_offline);\r\n    }\r\n\r\n    _onProcessMessage(worker,event){\r\n        if(event.type==='listening'){\r\n            worker.port=event.port;\r\n        }\r\n        else if(event.type==='countChanged'){\r\n            const ct=worker.payload=event.count;\r\n            this._ipcs[event.id]=this._ipcs[event.id]||{};\r\n            if(0===ct) this._ipcs[event.id].worker=null;\r\n            else this._ipcs[event.id].worker=worker;\r\n            this._workers=_.orderBy(this._workers,['payload']);\r\n        }\r\n        this.log('收到子进程消息',{innerEvent:event,port:worker.port});\r\n    }\r\n\r\n    findWorker(id){\r\n        return _.get(this._ipcs,`${id}.worker`,null);\r\n    }\r\n\r\n    async start(){\r\n        this.stop();\r\n        let _startWorker=()=>{\r\n            proxy.on('error',(err)=>{\r\n                this.error('http代理返回错误',{innerError:err});\r\n            });\r\n            listenState&&_.forEach(ipcs,(id)=>{\r\n                this._addIpcListener(id);\r\n            });\r\n            for (let i = 0; i < numCP; i++) {\r\n                let args=[];\r\n                let worker=null;\r\n                if(process.env.NODE_ENV==='development'||process.env.NODE_ENV==='test'){\r\n                    worker=cp.fork(childjs, args.concat([store]),{execArgv: [ '--inspect='+(process.debugPort+i+1)]});\r\n                }\r\n                else{\r\n                    cp.fork(childjs, args);\r\n                }\r\n                let wobj={worker:worker,payload:0,start:new Date()};\r\n\r\n                wobj.lsn=worker.on('message',this._onProcessMessage.bind(this,wobj));\r\n                this._workers.push(wobj);\r\n            }\r\n        };\r\n        return new Promise((resolve,reject)=>{\r\n            let httpServer=http.createServer((req,res)=> {\r\n                const uri=url.parse(req.url);\r\n                if(uri.pathname.indexOf('/ipc/')!==0){\r\n                    this.warn('收到未知请求',{uri});\r\n                    res.setHeader('Content-Type','application/json; charset=utf-8');\r\n                    res.writeHead(404, {'Content-Type': 'text/plain'});\r\n                    res.write(\"服务未找到!\");\r\n                    return res.end();\r\n                }\r\n                let id=parseInt(uri.pathname.slice(5));\r\n                let worker = this.findWorker(id);\r\n                if(!worker){\r\n                    this._workers.push(worker=this._workers.shift());\r\n                }\r\n                this.log('请求转发',{'Location': `http://localhost:${worker.port}` + req.url});\r\n                //res.writeHead(302, {'Location': `http://localhost:${worker.port}`});\r\n                //res.end();\r\n                const target={ target: `http://127.0.0.1:${worker.port}` };\r\n                proxy.web(req, res,target ,(e)=>{\r\n                    this.error('转发出错',{innerError:e,target})\r\n                });\r\n            }).listen(this.options.port);\r\n            let errorBind=(err)=>{\r\n                httpServer.removeListener('error',errorBind);\r\n                if(err.code==='EACCES'||err.code==='EADDRINUSE'){\r\n                    this.error('端口被占用,状态服务启动失败',{innerError:err});\r\n                }\r\n                else{\r\n                    this.error('其他未知错误,状态服务启动失败',{innerError:err})\r\n                }\r\n                reject(err);\r\n            };\r\n            let onListen=()=> {\r\n                httpServer.removeListener('listening', onListen);\r\n                _startWorker();\r\n                this._hServer=httpServer;\r\n                this.log('摄像头分发服务启动');\r\n                let x=setInterval(()=>{\r\n                    if(!_.some(this._workers,(worker)=>{\r\n                        return !('port' in worker);\r\n                    })){\r\n                        clearInterval(x);\r\n                        resolve();\r\n                    }\r\n                },500);\r\n            };\r\n            httpServer.on('error',errorBind);\r\n            httpServer.on('listening',onListen);\r\n        });\r\n    }\r\n\r\n    stop(){\r\n        if(!this._hServer) return;\r\n        proxy.removeAllListeners();\r\n        listenState&&_.forEach(this._ipcs,(ipc)=>{\r\n            this._removeIpcListener(ipc.id);\r\n        });\r\n        this._ipcs={};\r\n        this._workers.length&&_.forEach(this._workers,(worker)=>{\r\n            worker.worker.kill();\r\n        });\r\n        this._workers=[];\r\n        this._hServer&&this._hServer.close(e=>e);\r\n        this._hServer=null;\r\n        this.log('摄像头分发服务停止');\r\n    }\r\n}\r\n\r\nexports=module.exports=IPCServer;"]}