{"version":3,"sources":["../../src/servers/host_server.js"],"names":["Host","require","_","EventEmitter","config","global","server_config","ipcPort","get","http","Parser","IPCMointor","runModeBS","Data","path","_Errors","LinkFault","NoMointor","IPCServerError","IPCConnectError","HostServer","options","start","__hosts","_host_state_changed","_OnHostStateChanged","bind","_ipcServerPort","data","_states","hid","stateNew","States","Alarm","_OnIntrusionAlert","Normal","_OnDeactivateAlert","emit","Events","StateChanged","name","prototype","call","extend","type","id","find","host","hostname","port","method","headers","Promise","resolve","reject","req","request","res","setEncoding","on","JSON","parse","e","warn","innerError","errorType","end","evtID","_IPCRequest","Date","getTime","error","relative","getVideoPath","recordAlertVideo","pid","catch","log","point","encodeURI","stringify","evt","innerEvent","hostID","_getHost","recordAlert","position","monintors","mointorHandle","getMointors","ms","transform","result","val","push","demo","talk","length","monitors","map","ipc","supportPTZ","x","_moveToPoint","screenshot","_arrchive","supportAlarm","_alarm","forEach","_stopArrchive","_stopAlarm","stop","getHosts","hosts","i","ok","addone","each","h","connect","then","instance","removeListener","running","disConnect","clearAlarm","exports","module"],"mappings":"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","file":"host_server.js","sourcesContent":["/**\r\n * Created by Luky on 2017/6/23.\r\n */\r\nconst Host=require('../host/host');\r\nconst _ = require('lodash');\r\nconst EventEmitter = require('events').EventEmitter;\r\n//const util = require('util');\r\n//const assert=require('assert');\r\n//const factory=require('./ipc_factory');\r\nconst config=global.server_config||require('../config/config');\r\nconst ipcPort=_.get(config,'ipc_server.port',3000);\r\nconst http = require('http');\r\nconst {Parser}=require('../log/log');\r\nconst IPCMointor=require('./ipc_mointors');\r\nconst runModeBS=_.get(config,'runMode.type','BS')==='BS';\r\nconst Data=require('./data_server');\r\n//const moment = require('moment');\r\nconst path=require('path');\r\n//const uuidv1=require('uuid/v1');\r\n\r\nconst _Errors={\r\n    LinkFault:'linkFault',\r\n    NoMointor:'noMointor',\r\n    IPCServerError:'IPCServerError',\r\n    IPCConnectError:'IPCConnectError'\r\n};\r\n\r\nclass HostServer extends  EventEmitter{\r\n    constructor(options,start=false){\r\n        super();\r\n        //this.typeClient=_.get(options,'type',_.get(config,'ipc_server.type','client'))==='client';\r\n        //this.typeClient=false;\r\n        this.__hosts=null;\r\n        this._host_state_changed=this._OnHostStateChanged.bind(this);\r\n        this._ipcServerPort=_.get(options,'ipc_server.port',ipcPort);\r\n        Parser(this,'host_server.js');\r\n        if(start) this.start();\r\n    }\r\n\r\n    _OnHostStateChanged(data){\r\n        this._states[`hs${data.hid}`]=data;\r\n        if(data.stateNew===Host.States.Alarm){\r\n            this._OnIntrusionAlert(data);\r\n        }\r\n        else if(data.stateNew===Host.States.Normal){\r\n            this._OnDeactivateAlert(data);\r\n        }\r\n        else this.emit(Host.Events.StateChanged,data);\r\n    }\r\n\r\n    emit(name,data){\r\n        return EventEmitter.prototype.emit.call(this,name,_.extend({\r\n            type:name\r\n        },data));\r\n    }\r\n\r\n    _getHost(id){\r\n        return _.find(this.__hosts,(host)=>{return host.id===id;});\r\n    }\r\n\r\n    _IPCRequest(path)\r\n    {\r\n        const options = {\r\n            hostname: 'localhost',\r\n            port: this._ipcServerPort,\r\n            path: path,\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/x-www-form-urlencoded'\r\n            }\r\n        };\r\n\r\n        return new Promise((resolve,reject)=>{\r\n            const req = http.request(options, (res) => {\r\n                res.setEncoding('utf8');\r\n                res.on('data', (data) => {\r\n                    resolve(JSON.parse(data));\r\n                });\r\n            });\r\n\r\n            req.on('error', (e) => {\r\n                this.warn('IPC服务错误',{innerError:e,errorType:_Errors.IPCServerError});\r\n                reject(e);\r\n            });\r\n            req.end();\r\n        });\r\n    }\r\n\r\n    async _arrchive(id,hid,evtID){\r\n        let data=await this._IPCRequest(`/ipc/${id}/arrchive/${hid}?t=${new Date().getTime()})}`);\r\n        if(data.type==='fault') await Promise.reject(this.error('录制视频失败',{innerError:data}));\r\n\r\n        data.path=path.relative(config.getVideoPath(),data.path);\r\n        Data.recordAlertVideo({pid:id,hid,id:evtID,path:data.path}).catch(e=>e);\r\n        return this.log('启用视频录制',{id,hid,evtID});\r\n    }\r\n\r\n    async _stopArrchive(id,hid){\r\n        let data= await this._IPCRequest(`/ipc/${id}/stoparrchive/${hid}?t=${new Date().getTime()})}`);\r\n        if(data.type==='fault') await Promise.reject(this.error('停止录制视频失败',{innerError:data}));\r\n        this.log('停止视频录制成功',{id,hid});\r\n    }\r\n\r\n    async _moveToPoint(id,point,hid){\r\n        let data= await this._IPCRequest(`/ipc/${id}/moveToPoint/${hid}?point=${encodeURI(JSON.stringify(point))}&t=${new Date().getTime()})}`);\r\n        if(data.type==='fault') await Promise.reject(this.error('ptz移动失败',{innerError:data}));\r\n        this.log('成功移动到报警位置',{id,hid});\r\n    }\r\n\r\n    async _alarm(id,hid){\r\n        let data= await this._IPCRequest(`/ipc/${id}/alarm/${hid}?t=${new Date().getTime()})}`);\r\n        if(data.type==='fault') await Promise.reject(this.error('拉响警报失败',{innerError:data}));\r\n        this.log('成功拉响警报',{id,hid});\r\n    }\r\n\r\n    async _stopAlarm(id,hid){\r\n        let data= await this._IPCRequest(`/ipc/${id}/stopAlarm/${hid}?t=${new Date().getTime()})}`);\r\n        if(data.type==='fault') await Promise.reject(this.error('关闭警报失败',{innerError:data}));\r\n        this.log('成功关闭警报',{id,hid});\r\n    }\r\n\r\n    async _OnIntrusionAlert(evt){\r\n        this.log('收到主机报警指令',{innerEvent:evt});\r\n        const hostID=evt.hid;\r\n        let host=this._getHost(hostID);\r\n\r\n        Data.recordAlert({hid:hostID,id:evt.id,position:evt.position}).catch(e=>e);\r\n\r\n        host.monintors=[];\r\n        let ms=await host.mointorHandle.getMointors(evt.position).catch(()=>{\r\n            return Promise.resolve([]);\r\n        });\r\n        this.emit(Host.Events.StateChanged,_.extend(evt,{monintors:_.transform(ms,(result,val)=>{\r\n            result.push({id:val.id,demo:val.demo,talk:val.talk});\r\n        })}));\r\n        if(ms.length){\r\n            this.log('获取监控摄像头',{monitors:ms,innerEvent:evt});\r\n        }\r\n        else{\r\n            this.warn('监测到主机报警，但未找到合适的监控摄像头',{\r\n                errorType:_Errors.NoMointor,\r\n                innerEvent:evt\r\n            });\r\n        }\r\n        if(!runModeBS) return;\r\n\r\n        host.monintors=ms;\r\n\r\n        ms.map(async(ipc)=>{\r\n            if(ipc.supportPTZ&&ipc.x!==-1)this._moveToPoint(ipc.id,ipc,hostID).catch(e=>e);\r\n            if(true||ipc.screenshot)this._arrchive(ipc.id,hostID,evt.id).catch(e=>e);\r\n            if(ipc.supportAlarm) this._alarm(ipc.id,hostID).catch(e=>e);\r\n        });\r\n    }\r\n\r\n    _OnDeactivateAlert(evt){\r\n        this.log('收到主机消警指令',{innerEvent:evt});\r\n        const hostID=evt.hid;\r\n        let host=this._getHost(hostID);\r\n        let ms=host.monintors||[];\r\n        this.emit(Host.Events.StateChanged,_.extend(evt,{monintors:_.transform(ms,(result,val)=>{\r\n            result.push({id:val.id});\r\n        })}));\r\n        delete host.monintors;\r\n        if(ms.length===0){\r\n            return;\r\n        }\r\n        if(!runModeBS) return;\r\n        _.forEach(ms,(ipc)=>{\r\n            this._stopArrchive(ipc.id,hostID).catch(e=>e);\r\n            this._stopAlarm(ipc.id,hostID).catch(e=>e);\r\n        });\r\n    }\r\n\r\n    async start(){\r\n        this.stop();\r\n        this._states={};\r\n        this.__hosts=await Data.getHosts();\r\n        if(!this.hosts||!this.hosts.length) {\r\n            this.warn('请配置主机');\r\n            return ;\r\n        }\r\n        return new Promise((resolve,reject)=>{\r\n            let i=0,ok=0;\r\n            let addone=()=>{\r\n                if(++i===this.hosts.length){\r\n                    if(ok===0) return reject();\r\n                    resolve();\r\n                }\r\n            };\r\n            _.each(this.hosts,(host)=>{\r\n                let h=new Host(host.id,host.port,null,false);\r\n                h.on(Host.Events.StateChanged,this._host_state_changed);\r\n                h.connect().then(()=>{\r\n                    host.mointorHandle=new IPCMointor(host.id);\r\n                    host.instance=h;\r\n                    ok++;\r\n                    addone();\r\n                }).catch(()=>{\r\n                    addone();\r\n                    h.removeListener(Host.Events.StateChanged,this._host_state_changed);\r\n                });\r\n            });\r\n            this.log('主机服务已启动');\r\n        });\r\n    }\r\n\r\n    stop(){\r\n        let hosts=this.__hosts;\r\n        if(!hosts||hosts.length===0) return;\r\n        let running=false;\r\n        _.each(hosts,(host)=>{\r\n            if(host.instance){\r\n                running=true;\r\n                host.instance.removeListener(Host.Events.StateChanged,this._host_state_changed);\r\n                host.instance.disConnect().catch(e=>e);\r\n                delete host.instance;\r\n                delete host.mointorHandle;\r\n            }\r\n        });\r\n        if(running)this.log('主机服务已停止');\r\n    }\r\n\r\n    clearAlarm(id){\r\n        this.log('收到主机复位申请',{id});\r\n        let host=this._getHost(id);\r\n        if(host&&host.instance)return host.instance.clearAlarm();\r\n        return Promise.reject('不存在主机');\r\n    }\r\n\r\n    get hosts(){\r\n        return this.__hosts;\r\n    }\r\n\r\n    get hostsState() {\r\n        return this._states;\r\n    }\r\n}\r\n\r\nexports=module.exports=HostServer;\r\n"]}