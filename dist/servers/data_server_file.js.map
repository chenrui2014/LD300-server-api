{"version":3,"sources":["../../src/servers/data_server_file.js"],"names":["hosts","getHosts","hostID","distance","m","_","find","mointors","id","filter","ipc","min","max","getMointors","ipcs","getIPC","recordAlert","recordAlertVideo","getAllIPC","transformIPC","require","config","global","server_config","getData","exports","module"],"mappings":";;;;;;;0EAUA;AAAA;AAAA;AAAA;AAAA;AAAA,yDAEWA,KAFX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAeC,Q;;;;;;2EAKf,kBAA2BC,MAA3B,EAAkCC,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AACQC,yBADR,GACUC,EAAEC,IAAF,CAAOC,QAAP,EAAgB,UAACH,CAAD,EAAK;AAAC,mCAAOA,EAAEI,EAAF,KAAON,MAAd;AAAqB,yBAA3C,EAA6C,UAA7C,CADV;AAAA,0DAEYG,EAAEI,MAAF,CAASL,CAAT,EAAW,UAACM,GAAD,EAAO;AACtB,mCAAOA,IAAIC,GAAJ,IAASR,QAAT,IAAmBO,IAAIE,GAAJ,IAAST,QAAnC;AACH,yBAFO,CAFZ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAeU,W;;;;;;2EAOf,kBAAsBL,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,0DACWH,EAAEC,IAAF,CAAOQ,IAAP,EAAY,UAACJ,GAAD,EAAO;AAAC,mCAAOA,IAAIF,EAAJ,KAASA,EAAhB;AAAoB,yBAAxC,CADX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAeO,M;;;;;;2EAIf;AAAA;AAAA;AAAA;AAAA;AAAA,0DACW,IADX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAgBC,W;;;;;;2EAIhB;AAAA;AAAA;AAAA;AAAA;AAAA,0DACW,IADX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAiBC,gB;;;;;;2EAIjB;AAAA;AAAA;AAAA;AAAA;AAAA,0DACWH,IADX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAeI,S;;;;;;2EAIf,kBAA6BR,GAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,0DACWA,GADX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAgBS,Y;;;;;AAIhB;;;;;;;;;;;;;AA1CA;;;;AAIA,IAAId,IAAEe,QAAQ,QAAR,CAAN;AACA,IAAMC,SAAOC,OAAOC,aAAP,IAAsBH,QAAQ,kBAAR,CAAnC;AACA,IAAIpB,QAAMqB,OAAOG,OAAP,CAAe,mBAAf,CAAV;AACA,IAAIV,OAAKO,OAAOG,OAAP,CAAe,kBAAf,CAAT;AACA,IAAIjB,WAASc,OAAOG,OAAP,CAAe,sBAAf,CAAb;;AA2CAC,UAAQC,OAAOD,OAAP,GAAe;AACnBxB,sBADmB;AAEnBY,4BAFmB;AAGnBE,kBAHmB;AAInBG,wBAJmB;AAKnBC,8BALmB;AAMnB;AACAH,4BAPmB;AAQnBC;AARmB,CAAvB","file":"data_server_file.js","sourcesContent":["/**\r\n * Created by Luky on 2017/10/22.\r\n */\r\n\r\nlet _=require('lodash');\r\nconst config=global.server_config||require('../config/config');\r\nlet hosts=config.getData('hosts_config.json');\r\nlet ipcs=config.getData('ipcs_config.json');\r\nlet mointors=config.getData('mointors_config.json');\r\n\r\nasync function getHosts()\r\n{\r\n    return hosts;\r\n}\r\n\r\nasync function getMointors(hostID,distance){\r\n    let m=_.find(mointors,(m)=>{return m.id===hostID})['mointors'];\r\n    return  _.filter(m,(ipc)=>{\r\n        return ipc.min<=distance&&ipc.max>=distance;\r\n    });\r\n}\r\n\r\nasync function getIPC(id){\r\n    return _.find(ipcs,(ipc)=>{return ipc.id===id;});\r\n}\r\n\r\nasync function  recordAlert() {\r\n    return true;\r\n}\r\n\r\nasync  function  recordAlertVideo() {\r\n    return true;\r\n}\r\n\r\nasync function getAllIPC() {\r\n    return ipcs;\r\n}\r\n\r\nasync  function transformIPC(ipc) {\r\n    return ipc;\r\n}\r\n\r\n/*\r\nasync function getIPCIDsSortByPoint(){\r\n    let ret=[];\r\n    _.each(ipcs,(ipc)=>{\r\n        ret.push(ipc.id);\r\n    });\r\n    return ret;\r\n}*/\r\n\r\nexports=module.exports={\r\n    getHosts,\r\n    getMointors,\r\n    getIPC,\r\n    getAllIPC,\r\n    transformIPC,\r\n    //getIPCIDsSortByPoint,\r\n    recordAlert,\r\n    recordAlertVideo\r\n};"]}