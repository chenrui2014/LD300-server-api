{"version":3,"sources":["../../src/servers/ipc_factory.js"],"names":["addin","require","_","Data","Parser","IPCFactory","_ipcs","id","ipcStore","instance","isConnected","getIPC","catch","e","error","ipc","innerError","Promise","reject","cfg","warn","createInstance","log","config","ref","last","exports","module"],"mappings":";;;;;;;;;;;;;;AAAA;;;AAGA,IAAMA,QAAMC,QAAQ,mBAAR,CAAZ;AACA,IAAMC,IAAED,QAAQ,QAAR,CAAR;AACA,IAAME,OAAKF,QAAQ,eAAR,CAAX;;eACeA,QAAQ,YAAR,C;IAARG,M,YAAAA,M;;IAEDC,U;AACF,0BAAa;AAAA;;AACT,aAAKC,KAAL,GAAW,EAAX;AACAF,eAAO,IAAP,EAAY,gBAAZ;AACH;;;;;mGAEYG,E;;;;;;;;AACLC,wC,GAAS,KAAKF,KAAL,CAAWC,EAAX,C;AACb;;sCACGC,YAAUA,SAASC,QAAnB,IAA6BD,SAASC,QAAT,CAAkBC,W;;;;;iEACvCF,SAASC,Q;;;;uCAGNN,KAAKQ,MAAL,CAAYJ,EAAZ,EAAgBK,KAAhB,CAAsB,UAACC,CAAD,EAAK;AACrC,0CAAKC,KAAL,CAAW,aAAX,EAAyB,EAACP,IAAGQ,IAAIR,EAAR,EAAWS,YAAWH,CAAtB,EAAzB;AACA,wCAAGL,QAAH,EAAa,OAAO,IAAP,CAAb,KACK,OAAOS,QAAQC,MAAR,CAAeL,CAAf,CAAP;AACR,iCAJa,C;;;AAAVM,mC;;sCAKD,CAACA,GAAD,IAAMX,Q;;;;;AACL,qCAAKY,IAAL,CAAU,qBAAV;iEACOZ,SAASC,Q;;;AAEhBM,mC,GAAIf,MAAMqB,cAAN,CAAqBF,GAArB,C;;oCACJJ,G;;;;;;uCACME,QAAQC,MAAR,CAAe,KAAKI,GAAL,CAAS,YAAT,EAAsB,EAACC,QAAOJ,GAAR,EAAtB,CAAf,C;;;AAEV,qCAAKG,GAAL,CAAS,YAAT,EAAsB,EAACC,QAAOJ,GAAR,EAAtB;AACA,qCAAKb,KAAL,CAAWC,EAAX,IAAe,EAACE,UAASM,GAAV,EAAcS,KAAI,CAAlB,EAAoBC,MAAK,CAAzB,EAAf;iEACOV,G;;;;;;;;;;;;;;;;;;;;;AAgBfW,UAAQC,OAAOD,OAAP,GAAe,IAAIrB,UAAJ,EAAvB","file":"ipc_factory.js","sourcesContent":["/**\r\n * Created by Luky on 2017/7/4.\r\n */\r\nconst addin=require('../ipcs/ipc_addin');\r\nconst _=require('lodash');\r\nconst Data=require('./data_server');\r\nconst {Parser}=require('../log/log');\r\n\r\nclass IPCFactory{\r\n    constructor(){\r\n        this._ipcs={};\r\n        Parser(this,'ipc_factory.js');\r\n    }\r\n\r\n    async getIPC(id){\r\n        let ipcStore=this._ipcs[id];\r\n        //延迟回收，便于访问后台最新的数据\r\n        if(ipcStore&&ipcStore.instance&&ipcStore.instance.isConnected){\r\n            return ipcStore.instance;\r\n        }\r\n\r\n        let cfg=await Data.getIPC(id).catch((e)=>{\r\n            this.error('摄像头配置数据获取失败',{id:ipc.id,innerError:e});\r\n            if(ipcStore) return null;\r\n            else return Promise.reject(e);\r\n        });\r\n        if(!cfg&&ipcStore){\r\n            this.warn('远程数据拉取失败，使用使用本地保存实例');\r\n            return ipcStore.instance;\r\n        }\r\n        let ipc=addin.createInstance(cfg);\r\n        if(!ipc){\r\n            await Promise.reject(this.log('获取摄像头实例化失败',{config:cfg}));\r\n        }\r\n        this.log('获取摄像头实例化成功',{config:cfg});\r\n        this._ipcs[id]={instance:ipc,ref:1,last:0};\r\n        return ipc;\r\n        /*\r\n        if(!options) return null;\r\n        if(options.brand){\r\n            assert.ok(options.brand in addin.brand);\r\n            return this._ipcs[id]=new addin.brand[options.brand]['cls'](options);\r\n        }\r\n        let video_ps=addin.video_component[options.protocol];\r\n        //音频、视频和ptz集成或者PTz、音频不支持时直接new video\r\n        let ptz_ps=addin.ptz_component[_.get(options,'ptz.protocol',video_ps)];\r\n        //let audio_ps=addin.audio_component[_.get(options,'audio.protocol',video_ps)];\r\n        if(video_ps===ptz_ps/!*&&video_ps===audio_ps*!/) return this._ipcs[id]=new video_ps['cls'](options);\r\n        return this._ipcs[id]=integration(video_ps['cls'],(ptz_ps?ptz_ps['cls']:null),null/!*(audio_ps?audio_ps['cls']:null)*!/,options);*/\r\n    }\r\n}\r\n\r\nexports=module.exports=new IPCFactory();"]}