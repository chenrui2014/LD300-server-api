{"version":3,"sources":["../../../src/test/dahua/dh264_unpack.test.js"],"names":["require","H264unPack","lineReader","path","fs","IPCFactory","dhlib","AAC","Nalu","wOption","flags","encoding","fd","mode","autoClose","describe","id","done","fp","createWriteStream","fw2","getIPC","ipc","play","on","data","write","Buffer","concat","from","d","length","toString","setTimeout","close","file","houzui","resolve","__dirname","outpath","unpack","obj","console","log","JSON","stringify","slice","eachLine","line","last","it","s","buf","buf2","ainfo","ParseADTSHeader","af","structs","AUDIO_FORMAT","byFormatTag","nChannels","wBitsPerSample","nSamplesPerSec","ref","xit"],"mappings":"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","file":"dh264_unpack.test.js","sourcesContent":["require('../modify_config');\r\nconst H264unPack=require('../../ipcs/dahua/_dh_h264_unpack');\r\nconst lineReader = require('line-reader');\r\nconst path=require('path');\r\nconst fs = require('fs');\r\n//const H264_2FLV=require('../../servers/cache/_h264_2flv');\r\nconst IPCFactory=require('../../servers/ipc_factory');\r\nconst dhlib=require('../../ipcs/dahua/dhnetsdk');\r\nconst AAC=require('../../acc/acc_adts_parser');\r\nconst Nalu=require('../../h264/h264_nalu_parser');\r\n\r\nconst wOption = {\r\n    flags: 'w',\r\n    encoding: null,\r\n    fd: null,\r\n    mode: 0o666,\r\n    autoClose: false\r\n};\r\n\r\ndescribe('大华h264视频回调数据解包测试',()=>{\r\n\r\n    function  file(houzui,done) {\r\n        const fp=path.resolve(__dirname,`../data/dh_h264_cb${houzui}.txt`);\r\n        const outpath=path.resolve(__dirname,`../data/dh_h264_cb${houzui}.h264`);\r\n        let fw2=fs.createWriteStream(outpath,wOption);\r\n        let unpack=new H264unPack(false);\r\n        unpack.on('data',(obj)=>{\r\n            let data=obj.d;\r\n            //console.log(data.toString('hex'));\r\n            fw2.write(data);\r\n            const from=(data[2]===1?3:4);\r\n            console.log(JSON.stringify(new Nalu(data.slice(from))));\r\n        });\r\n        lineReader.eachLine(fp, function(line, last) {\r\n            //console.log(line);\r\n            unpack.write(Buffer.from(line,'hex'));\r\n            //console.log(line);\r\n            if (last) {\r\n                setTimeout(done,1000);\r\n            }\r\n        });\r\n    }\r\n\r\n    it('大华头部解析',()=>{\r\n        //08 0001 0010 00000 0803e 0000\r\n        let s='f0000000ae66080052010000b2952e465a0e10b583011a028855aeb2e300000096010000fff16c40245ffc010c9ffd8a256dc2a4aa629552a58bc29171e42296253510deef8f2d097def77f75278887c40ff541c252d56a95e5cbb2a3a9c0a99a89f1bae38e55d6bc6aace3a9f2d815836a818ddbe660a048790008520c1be4af9431d8a07399d014a5865dd4dd7a5208a41400214ad41dae1ae43601025a1d4205680272b40e401283bc5842dbe58db215b901595de8f3891f412021a40542fb60829b460c2f9c4670b02ea3667532b805e2aa04c978a5ae77e0295085006406340e7302900502f3380124e688ee4235105f0220c628703605f7c02de62c2919d223bc78d0dc2f29e5180a58e9eeadf7e26d55d3ea6e7584b9bba5b4eefdfaed7576691be81dd13b83514c0062bafa00dd632070bdfc40e535b035d5800e8f1e802b8b981c06468617652010000';\r\n        /*let x=new dhlib.structs.NET_TIME_EX({\r\n            dwYear:2017,// 年\r\n            dwMonth:8,// 月\r\n            dwDay:23,// 日\r\n            dwHour:0,// 时\r\n            dwMinute:23,// 分\r\n            dwSecond:0,// 秒\r\n            dwMillisecond:0,// 毫秒\r\n        });\r\n        console.log(x.ref().toString('hex'));\r\n        */\r\n        let buf=Buffer.from(s,'hex');\r\n        let buf2=buf.slice(36);\r\n        let ainfo=AAC.ParseADTSHeader(buf2);\r\n        console.log(ainfo);\r\n        let af=new dhlib.structs.AUDIO_FORMAT({\r\n            byFormatTag:8,\r\n            nChannels:1,\r\n            wBitsPerSample:16,\r\n            nSamplesPerSec:16000\r\n        });\r\n        console.log(af.ref().toString('hex'));\r\n        /*let buf=Buffer.from(s,'hex');\r\n        console.log(`结构体NET_FRAME_INFO_EX长度${dhlib.structs.FRAME_INFO_EX.size}`);\r\n        let frameInfo=new dhlib.structs.FRAME_INFO_EX(buf);\r\n        console.log(`结构体NET_FRAME_INFO_EX长度${dhlib.structs.NET_FRAME_INFO_EX.size}`);\r\n        let frameInfo2=new dhlib.structs.NET_FRAME_INFO_EX(buf);\r\n        console.log(frameInfo.inspect());*/\r\n    });\r\n    it('大华h264视频回调数据解包测试',(done)=>{\r\n        file('',done);\r\n    });\r\n    it('大华h264视频回调数据解包测试_fps10',(done)=>{\r\n        file('_fps10',done);\r\n    });\r\n\r\n    it('大华h264视频回调数据解包测试_啊牛',(done)=>{\r\n        file('_niu',done);\r\n    });\r\n\r\n    async  function ipc(id,done) {\r\n        const fp=fs.createWriteStream(`d:/dhsdk_unpacked${id}.txt`,wOption);\r\n        let fw2=fs.createWriteStream(`d:/dhsdk_unpacked${id}.dat`,wOption);\r\n        let ipc=await IPCFactory.getIPC(id);\r\n        ipc.play();\r\n        ipc.on('data',(data)=>{\r\n            fw2.write(Buffer.concat([Buffer.from([0,0,0,1]),data.d],4+data.d.length));\r\n            fp.write(data.d.toString('hex')+'\\r\\n');\r\n        });\r\n        setTimeout(()=>{\r\n            fw2.close();\r\n            fp.close();\r\n            done();\r\n        },15000);\r\n    }\r\n\r\n    it('球机图像',(done)=>{\r\n        ipc(4,done);\r\n    });\r\n\r\n    xit('枪机图像',(done)=>{\r\n        ipc(1,done);\r\n    });\r\n\r\n});"]}