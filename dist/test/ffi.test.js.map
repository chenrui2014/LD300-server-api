{"version":3,"sources":["../../src/test/ffi.test.js"],"names":["ffi","require","ref","path","BYTEPtr","refType","DHLib","expect","dllPath","join","__dirname","console","log","fns","CB","fn","Callback","apply","concat","dll","Library","describe","xit","x","Buffer","from","toString","it","buffer","equal","utils","mbcs2Utf8","xdescribe","done","cb","byteptr","size","readPointer","callback_1","setTimeout"],"mappings":";;AAAA,IAAMA,MAAIC,QAAQ,KAAR,CAAV;AACA,IAAMC,MAAMD,QAAQ,KAAR,CAAZ;AACA,IAAME,OAAKF,QAAQ,MAAR,CAAX;AACA,IAAMG,UAAQF,IAAIG,OAAJ,CAAY,OAAZ,CAAd;AACA,IAAMC,QAAML,QAAQ,2BAAR,CAAZ;AACA,IAAMM,SAAON,QAAQ,MAAR,EAAgBM,MAA7B;;AAEA,IAAIC,UAAQL,KAAKM,IAAL,CAAUC,SAAV,EAAoB,aAApB,CAAZ;AACAC,QAAQC,GAAR,CAAYJ,OAAZ;;AAEA,IAAIK,MAAK;AACL,SAAI,CAAC,MAAD,EAAQ,EAAR,CADC;AAEL,kBAAc,CAAC,MAAD,EAAS,CAAC,SAAD,CAAT;AAFT,CAAT;AAIA,IAAIC,KAAG,SAAHA,EAAG,CAASC,EAAT,EAAY;AACf,WAAOf,IAAIgB,QAAJ,CAAaC,KAAb,CAAmBjB,GAAnB,EAAuB,CAAC,MAAD,EAAQ,CAACI,OAAD,EAAS,KAAT,CAAR,EAAyBc,MAAzB,CAAgCH,EAAhC,CAAvB,CAAP;AACH,CAFD;;AAIA,IAAII,MAAInB,IAAIoB,OAAJ,CAAYZ,OAAZ,EAAqBK,GAArB,CAAR;;AAEAQ,SAAS,MAAT,EAAgB,YAAI;AAChBC,QAAI,EAAJ,EAAO,YAAI;AACP,YAAIC,IAAEC,OAAOC,IAAP,CAAY,MAAZ,CAAN;AACAd,gBAAQC,GAAR,CAAYW,EAAEG,QAAF,CAAW,KAAX,CAAZ;AACH,KAHD;AAIAC,OAAG,MAAH,EAAU,YAAI;AACV,YAAIC,SAAOJ,OAAOC,IAAP,CAAY,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,EAAa,GAAb,EAAiB,GAAjB,EAAqB,GAArB,EAAyB,EAAzB,EAA4B,CAA5B,CAAZ,CAAX;AACAlB,eAAO,MAAP,EAAesB,KAAf,CAAqBvB,MAAMwB,KAAN,CAAYC,SAAZ,CAAsBH,MAAtB,CAArB;AACH,KAHD;AAIH,CATD;;AAWAI,UAAU,UAAV,EAAqB,YAAI;AACrBL,OAAG,4BAAH,EAAgC,UAACM,IAAD,EAAQ;AACpC,YAAIC,KAAGpB,GAAG,UAACqB,OAAD,EAASC,IAAT,EAAgB;AACtBzB,oBAAQC,GAAR,WAAoBwB,IAApB;AACA,gBAAIR,SAAO1B,IAAImC,WAAJ,CAAgBF,QAAQjC,GAAR,EAAhB,EAA8B,CAA9B,EAAgC,CAAhC,CAAX;AACAS,oBAAQC,GAAR,CAAYgB,OAAO,CAAP,CAAZ;AACAjB,oBAAQC,GAAR,CAAYgB,OAAO,CAAP,CAAZ;AACAjB,oBAAQC,GAAR,CAAYgB,OAAO,CAAP,CAAZ;AACAjB,oBAAQC,GAAR,CAAYgB,OAAO,CAAP,CAAZ;AACAK;AACH,SARM,CAAP;AASAd,YAAImB,UAAJ,CAAeJ,EAAf;AACAK,mBAAW,YAAI;AACXL;AACH,SAFD,EAEE,OAFF;AAGH,KAdD;AAeH,CAhBD","file":"ffi.test.js","sourcesContent":["const ffi=require('ffi');\r\nconst ref = require('ref');\r\nconst path=require('path');\r\nconst BYTEPtr=ref.refType('uchar');\r\nconst DHLib=require('../clib/DHNetSDK/dhnetsdk');\r\nconst expect=require('chai').expect;\r\n\r\nlet dllPath=path.join(__dirname,'dll/FiiTest');\r\nconsole.log(dllPath);\r\n\r\nlet fns= {\r\n    'A':['void',[]],\r\n    'callback_1': ['void', ['pointer']]\r\n};\r\nlet CB=function(fn){\r\n    return ffi.Callback.apply(ffi,['void',[BYTEPtr,'int']].concat(fn));\r\n};\r\n\r\nlet dll=ffi.Library(dllPath, fns);\r\n\r\ndescribe('char',()=>{\r\n    xit('',()=>{\r\n        let x=Buffer.from('预置位1');\r\n        console.log(x.toString('hex'));\r\n    });\r\n    it('预置位1',()=>{\r\n        let buffer=Buffer.from([212,164,214,195,181,227,49,0]);\r\n        expect('预置点1').equal(DHLib.utils.mbcs2Utf8(buffer));\r\n    })\r\n});\r\n\r\nxdescribe('callback',()=>{\r\n    it('pointer alloc in nactive c',(done)=>{\r\n        let cb=CB((byteptr,size)=>{\r\n            console.log(`size:${size}`);\r\n            let buffer=ref.readPointer(byteptr.ref(),0,4);\r\n            console.log(buffer[0]);\r\n            console.log(buffer[1]);\r\n            console.log(buffer[2]);\r\n            console.log(buffer[3]);\r\n            done();\r\n        });\r\n        dll.callback_1(cb);\r\n        setTimeout(()=>{\r\n            cb;\r\n        },1100000);\r\n    });\r\n});\r\n"]}