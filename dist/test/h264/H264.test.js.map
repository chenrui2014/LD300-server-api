{"version":3,"sources":["../../../src/test/h264/H264.test.js"],"names":["require","H264","fs","describe","it","done","fd","createReadStream","flags","encoding","mode","autoClose","buff","on","data","Buffer","from","concat","length","console","log","JSON","stringify","convertRawStreamToNALUnitObject"],"mappings":";;AAAAA,QAAQ,uCAAR;AACA,IAAMC,OAAKD,QAAQ,kCAAR,CAAX;AACA,IAAME,KAAGF,QAAQ,IAAR,CAAT;;AAGAG,SAAS,WAAT,EAAqB,YAAI;AACrBC,OAAG,KAAH,EAAS,UAACC,IAAD,EAAQ;AACb,YAAIC,KAAGJ,GAAGK,gBAAH,CAAoB,aAApB,EAAkC;AACrCC,mBAAO,GAD8B;AAErCC,sBAAU,IAF2B;AAGrCH,gBAAI,IAHiC;AAIrCI,kBAAM,GAJ+B;AAKrCC,uBAAW;AAL0B,SAAlC,CAAP;AAOA,YAAIC,OAAK,IAAT;AACAN,WAAGO,EAAH,CAAM,MAAN,EAAa,UAACC,IAAD,EAAQ;AACjB,gBAAG,CAACF,IAAJ,EAAS;AAACA,uBAAKG,OAAOC,IAAP,CAAYF,IAAZ,CAAL,CAAuB;AAAQ;AACzCF,mBAAKG,OAAOE,MAAP,CAAc,CAACL,IAAD,EAAME,IAAN,CAAd,EAA0BF,KAAKM,MAAL,GAAYJ,KAAKI,MAA3C,CAAL;AACH,SAHD;AAIAZ,WAAGO,EAAH,CAAM,KAAN,EAAY,YAAI;AACbM,oBAAQC,GAAR,CAAYC,KAAKC,SAAL,CAAerB,KAAKsB,+BAAL,CAAqCX,IAArC,CAAf,CAAZ;AACAP;AACF,SAHD;AAIH,KAjBD;AAkBH,CAnBD","file":"H264.test.js","sourcesContent":["require('../node_modules/H264.js/lib/WebModule');\r\nconst H264=require('../node_modules/H264.js/lib/H264');\r\nconst fs=require('fs');\r\n\r\n\r\ndescribe('看看H264的数据',()=>{\r\n    it('123',(done)=>{\r\n        let fd=fs.createReadStream(\"d:/h264.dat\",{\r\n            flags: 'r',\r\n            encoding: null,\r\n            fd: null,\r\n            mode: 0o666,\r\n            autoClose: false\r\n        });\r\n        let buff=null;\r\n        fd.on('data',(data)=>{\r\n            if(!buff){buff=Buffer.from(data);return;}\r\n            buff=Buffer.concat([buff,data],buff.length+data.length);\r\n        });\r\n        fd.on('end',()=>{\r\n           console.log(JSON.stringify(H264.convertRawStreamToNALUnitObject(buff)));\r\n           done();\r\n        });\r\n    });\r\n});"]}