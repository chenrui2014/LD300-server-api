{"version":3,"sources":["../../../src/test/servers/persistence.test.js"],"names":["P","require","fs","_","expect","path","config","describe","it","done","p","pathTempl","imageTempl","videoTempl","image","imagePath","jie","split","index","length","date","Date","equal","getDate","getFullYear","padStart","getMonth","exists","slice","videoPath","ap","relative","getVideoPath","console","log"],"mappings":"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","file":"persistence.test.js","sourcesContent":["const P=require('../../servers/ipc_video_persistence');\r\nconst fs=require('fs');\r\nconst _=require('lodash');\r\nconst expect=require('chai').expect;\r\nconst path=require('path');\r\nconst config=require('../../config/config')\r\n\r\ndescribe('测试持久化地址生成类',()=>{\r\n    it('imagefile',(done)=>{\r\n        let p=new P({\r\n            pathTempl:'../assets/monitors/{yyyy}{mm}',\r\n            imageTempl:'{dd}-{prefix}',\r\n            videoTempl:'{dd}-{prefix}',\r\n        });\r\n        let image=p.imagePath('abc','png');\r\n        let jie=image.split('\\\\');\r\n        let index=jie.length-1;\r\n        let date=new Date();\r\n        expect(jie[index--]).equal(`${date.getDate()}-abc.png`);\r\n        expect(jie[index--]).equal(`${date.getFullYear()}${_.padStart(''+(date.getMonth()+1),2,0)}`);\r\n        expect(jie[index--]).equal('monitors');\r\n        expect(jie[index]).equal('logs');\r\n        fs.exists(image.slice(0,-10), (exists) => {\r\n            expect(exists).equal(true);\r\n            done();\r\n        });\r\n    });\r\n    it('videofile',(done)=>{\r\n        let p=new P({\r\n            pathTempl:'../assets/monitors/{yyyy}{mm}',\r\n            imageTempl:'{dd}-{prefix}',\r\n            videoTempl:'{dd}-{prefix}',\r\n        });\r\n        let image=p.videoPath('abc','flv');\r\n        let jie=image.split('\\\\');\r\n        let index=jie.length-1;\r\n        let date=new Date();\r\n        expect(jie[index--]).equal(`${date.getDate()}-abc.flv`);\r\n        expect(jie[index--]).equal(`${date.getFullYear()}${_.padStart(''+(date.getMonth()+1),2,0)}`);\r\n        expect(jie[index--]).equal('monitors');\r\n        expect(jie[index]).equal('logs');\r\n        fs.exists(image.slice(0,-10), (exists) => {\r\n            expect(exists).equal(true);\r\n            done();\r\n        });\r\n    });\r\n    it('videopath',()=>{\r\n        let p=new P({\r\n            imageTempl:'{dd}-{prefix}',\r\n            videoTempl:'{dd}-{prefix}',\r\n        });\r\n        let image=p.videoPath('abc','flv');\r\n        let ap=path.relative(config.getVideoPath(),image);\r\n        console.log(ap);\r\n    });\r\n});"]}