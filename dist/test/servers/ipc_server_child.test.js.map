{"version":3,"sources":["../../../src/test/servers/ipc_server_child.test.js"],"names":["port","a","server","address","on","getUrl","path","options","hostname","method","headers","Promise","resolve","req","http","request","res","setEncoding","data","JSON","parse","end","send","require","db","file","expect","describe","dbInstance","before","after","close","it","done","then","id","equal","type","fn","indexOf","hid","stop","setTimeout","x","encodeURI","stringify","y","z","preset","handle","length","limit","timeout"],"mappings":"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","file":"ipc_server_child.test.js","sourcesContent":["//require('../modify_config');\r\nconst {db,file}=require('../init');\r\nconst http = require('http');\r\nconst {server}=require('../../servers/ipc_server_child');\r\nconst expect=require('chai').expect;\r\nlet port=0;\r\nasync function getUrl(){\r\n    if(port) return port;\r\n    let a=server.address();\r\n    if(a&&'port' in a) return port=a.port;\r\n    server.on('listening',()=>{\r\n        return port=server.address().port;\r\n    });\r\n}\r\n\r\nasync function send(path) {\r\n    let port=await getUrl();\r\n    const options = {\r\n        hostname: 'localhost',\r\n        port: port,\r\n        path: path,\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/x-www-form-urlencoded'\r\n        }\r\n    };\r\n    return new Promise((resolve)=>{\r\n        const req = http.request(options,(res)=>{\r\n            res.setEncoding('utf8');\r\n            res.on('data', (data) => {\r\n                resolve(JSON.parse(data));\r\n            });\r\n        });\r\n        req.end();\r\n    });\r\n}\r\n\r\ndescribe('直播子进程http服务测试',()=>{\r\n\r\n    let dbInstance=null;\r\n    before(async ()=>{\r\n        //打开注释启动数据库取数据\r\n        dbInstance=await file();\r\n    });\r\n\r\n    after(async ()=>{\r\n        if(dbInstance)await  dbInstance.close();\r\n    });\r\n\r\n    it('直播及获取地址',(done)=>{\r\n        send('/ipc/5/live').then((data)=>{\r\n            expect(data.id-0).equal(5);\r\n            expect(data.type).equal('succeed');\r\n            expect(data.fn).equal('live');\r\n            expect(data.path.indexOf(`/live/1`)>-1).equal(true);\r\n            expect(data.port).equal(port);\r\n            done();\r\n        });\r\n    });\r\n\r\n    it('获取不存在的摄像头播放地址',(done)=>{\r\n        send('/ipc/188/live').then((data)=>{\r\n            expect(data.id).equal(188);\r\n            expect(data.type).equal('fault');\r\n            expect(data.fn).equal('live');\r\n            done();\r\n        });\r\n    });\r\n\r\n    it('启用文件流',(done)=>{\r\n       send('/ipc/5/arrchive/1').then((data)=>{\r\n           expect(data.id-0).equal(1);\r\n           expect(data.hid-0).equal(1);\r\n           expect(data.type).equal('succeed');\r\n           expect(data.fn).equal('arrchive');\r\n           done();\r\n       });\r\n    });\r\n\r\n    it('关闭文件流',(done)=>{\r\n        let stop=()=> {\r\n            send('/ipc/5/stoparrchive/1').then((data) => {\r\n                expect(data.id).equal(1);\r\n                expect(data.fn).equal('stopArrchive');\r\n                done();\r\n            });\r\n        };\r\n        send('/ipc/5/arrchive/1').then((data)=>{\r\n            expect(data.type).equal('succeed');\r\n            setTimeout(stop,2000);\r\n        });\r\n    });\r\n\r\n    it('获取球机xyz',(done)=>{\r\n        send('/ipc/5/getpoint').then((data)=>{\r\n            done();\r\n        });\r\n    });\r\n\r\n\r\n    it('拉响警报',(done)=>{\r\n        send('/ipc/5/alarm/1').then((data)=>{\r\n            expect(data.type).equal('succeed');\r\n            done();\r\n        });\r\n    });\r\n\r\n    it('关闭警报',(done)=>{\r\n        send('/ipc/5/stopAlarm/1').then((data)=>{\r\n            expect(data.type).equal('succeed');\r\n            done();\r\n        });\r\n    });\r\n\r\n    it('移动到point',(done)=>{\r\n        let x=encodeURI(JSON.stringify({x:1,y:1,z:1,preset:null}))\r\n        send(`/ipc/5/moveToPoint/1?point=${x}`).then((data)=>{\r\n            expect(data.type).equal('succeed');\r\n            done();\r\n        });\r\n    });\r\n\r\n    describe('ptz测试',()=>{\r\n        it('无人占用时申请',(done)=>{\r\n            send('/ipc/5/ptz/zoomAdd').then((data)=>{\r\n                expect(data.type).equal('succeed');\r\n                expect(data.handle.length>0).equal(true);\r\n                expect(data.limit>0).equal(true);\r\n                done();\r\n            });\r\n        });\r\n        describe('标记占有',()=>{\r\n            let handle='',timeout=0;\r\n            before((done)=>{\r\n                send('/ipc/5/ptz/zoomAdd').then((data)=>{\r\n                    expect(data.type).equal('succeed');\r\n                    timeout=data.limit;\r\n                    handle=data.handle;\r\n                    done();\r\n                });\r\n            });\r\n\r\n            it('二次使用',(done)=>{\r\n                send('/ipc/5/ptz/zoomAdd?handle='+handle).then((data)=>{\r\n                    expect(data.type).equal('succeed');\r\n                    expect(data.handle).equal(handle);\r\n                    done();\r\n                });\r\n            });\r\n\r\n            it('释放所有权',(done)=>{\r\n               send('/ipc/5/freeptz?handle='+handle).then((data)=>{\r\n                  expect(data.type).equal('succeed');\r\n                  done();\r\n               });\r\n            });\r\n\r\n            it('他人申请',(done)=>{\r\n                send('/ipc/5/ptz/zoomAdd').then((data)=>{\r\n                    expect(data.type).equal('fault');\r\n                    done();\r\n                });\r\n            });\r\n\r\n            it('释放后再申请',(done)=>{\r\n                setTimeout(()=>{\r\n                    send('/ipc/5/ptz/zoomAdd').then((data)=>{\r\n                        expect(data.type).equal('succeed');\r\n                        done();\r\n                    });\r\n                },timeout+1);\r\n            });\r\n\r\n        });\r\n    });\r\n\r\n});"]}