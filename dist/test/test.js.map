{"version":3,"sources":["../../src/test/test.js"],"names":["Transform","require","PassThrough","assert","config","dhlib","path","root","Event","EventEmitter","amf","expect","_","cp","B","x","A","d","e","n","prototype","a","call","Rotate","offset","buf","enc","next","res","toString","split","map","code","c","charCodeAt","String","fromCharCode","join","push","xdescribe","it","buffer","from","describe","xit","b","Buffer","obj","read","console","log","allocUnsafe","arr","defaults","length","keys","info","write","b2","slice","byteLength","deepEqual","transform","on","process","stdout","data","end","pt","pipe","done","name","listenerCount","equal","removeListener","unpipe","setTimeout","Promise","s","f","then","catch","enums","loginType","get","key","__dirname","resolve","pc","cb","v","nextTick","indexOf","z","without","forEach","xi","y","Array","filter","i","remove","ok","abc","num1","num2","applyTest","reject","Throw","apply","sum","fun","partial","file","fork"],"mappings":";;;;;;;;;;;;;;;;;;AACA,IAAMA,YAAYC,QAAQ,QAAR,EAAkBD,SAApC;AACA,IAAME,cAAYD,QAAQ,QAAR,EAAkBC,WAApC;AACA,IAAMC,SAASF,QAAQ,QAAR,CAAf;AACA,IAAIG,SAASH,QAAQ,kBAAR,CAAb;AACA,IAAMI,QAAMJ,QAAQ,wBAAR,CAAZ;AACA,IAAMK,OAAOL,QAAQ,MAAR,CAAb;AACA,IAAMM,OAAKN,QAAQ,kBAAR,EAA4BM,IAAvC;AACA,IAAMC,QAAMP,QAAQ,QAAR,EAAkBQ,YAA9B;AACA,IAAMC,MAAIT,QAAQ,KAAR,CAAV;AACA,IAAMU,SAAOV,QAAQ,MAAR,EAAgBU,MAA7B;AACA,IAAMC,IAAEX,QAAQ,QAAR,CAAR;AACA,IAAMY,KAAGZ,QAAQ,eAAR,CAAT;;AAGA;;;;;;IAMMa,C;AACF,iBAAa;AAAA;;AACT,aAAKC,CAAL,GAAO,CAAP;AACH;;;;+BACK,CAAE;;;4BACD;AACH,mBAAO,KAAKA,CAAZ;AACH;;;4BACM;AACH,mBAAO,CAAP;AACH;;;;;;IAGCC,C;;;AACF,iBAAa;AAAA;;AAAA;AAET;AACH;;;;mCAIUC,C,EAAEC,C,EAAEC,C,EAAE;AACbA,cAAE,IAAF,EAAOF,CAAP;AACH;;;4BALM;AACH,mBAAOH,EAAEM,SAAF,CAAYC,CAAZ,CAAcC,IAAd,CAAmB,IAAnB,CAAP;AACH;;;;EAPWtB,S;;IAaVuB,M;;;AACF,oBAAYJ,CAAZ,EAAe;AAAA;;AAEX;AAFW;;AAGX,eAAKK,MAAL,GAAc,CAACL,KAAK,EAAN,IAAY,EAA1B;AAHW;AAId;;AAED;;;;;mCACWM,G,EAAKC,G,EAAKC,I,EAAM;AAAA;;AACvB,gBAAIC,MAAMH,IAAII,QAAJ,GAAeC,KAAf,CAAqB,EAArB,EAAyBC,GAAzB,CAA6B,aAAK;AACxC,oBAAIC,OAAOC,EAAEC,UAAF,CAAa,CAAb,CAAX;AACA,oBAAID,KAAK,GAAL,IAAYA,KAAK,GAArB,EAA0B;AACtBD,4BAAQ,OAAKR,MAAb;AACA,wBAAIQ,OAAO,IAAIE,UAAJ,CAAe,CAAf,CAAX,EAA8B;AAC1BF,gCAAQ,EAAR;AACH;AACJ,iBALD,MAKO,IAAIC,KAAK,GAAL,IAAYA,KAAK,GAArB,EAA0B;AAC7BD,4BAAQ,OAAKR,MAAb;AACA,wBAAIQ,OAAO,IAAIE,UAAJ,CAAe,CAAf,CAAX,EAA8B;AAC1BF,gCAAQ,EAAR;AACH;AACJ;AACD,uBAAOG,OAAOC,YAAP,CAAoBJ,IAApB,CAAP;AACH,aAdS,EAcPK,IAdO,CAcF,EAdE,CAAV;;AAgBA;AACA,iBAAKC,IAAL,CAAUV,GAAV;AACA;AACAD;AACH;;;;EA7BgB3B,S;;AAgCrBuC,UAAU,QAAV,EAAmB,YAAI;AACpBC,OAAG,QAAH,EAAY,YAAI;AACd,YAAIf,MAAIgB,OAAOC,IAAP,CAAY,CAAC,CAAD,CAAZ,CAAR;AACAjB,YAAII,QAAJ,CAAa,EAAb;AACD,KAHD;AAIF,CALD;;AAOAc,SAAS,KAAT,EAAe,YAAI;AAChBC,QAAI,MAAJ,EAAW,YAAI;AACX,YAAIC,IAAEC,OAAOJ,IAAP,CAAY,4YAAZ,EAAyZ,KAAzZ,CAAN;AACA,YAAIK,MAAIrC,IAAIsC,IAAJ,CAASH,CAAT,EAAW,CAAX,CAAR;AACAI,gBAAQC,GAAR,CAAYH,GAAZ;AACH,KAJD;AAKAP,OAAG,OAAH,EAAW,YAAI;AACX,YAAIf,MAAIqB,OAAOK,WAAP,CAAmB,GAAnB,CAAR;AACA,YAAIN,IAAEC,OAAOJ,IAAP,CAAY,4YAAZ,EAAyZ,KAAzZ,CAAN;AACA,YAAIK,MAAIrC,IAAIsC,IAAJ,CAASH,CAAT,EAAW,CAAX,CAAR;AACA,YAAIO,MAAI,EAAR;AACAxC,UAAEyC,QAAF,CAAWD,GAAX,EAAeL,GAAf;AACAK,YAAIE,MAAJ,GAAW1C,EAAE2C,IAAF,CAAOR,GAAP,EAAYO,MAAvB;AACA,YAAIE,OAAK,EAAT;AACA9C,YAAI+C,KAAJ,CAAUhC,GAAV,EAAc2B,GAAd,EAAkBI,IAAlB;AACA,YAAIE,KAAGjC,IAAIkC,KAAJ,CAAU,CAAV,EAAYH,KAAKI,UAAjB,CAAP;AACAzD,eAAO0D,SAAP,CAAiBhB,CAAjB,EAAmBa,EAAnB;AACH,KAXD;AAYF,CAlBD;;AAqBAnB,UAAU,gBAAV,EAA2B,YAAI;AAC3BC,OAAG,IAAH,EAAQ,YAAI;AACR,YAAIsB,YAAY,IAAIvC,MAAJ,CAAW,CAAX,CAAhB;AACAuC,kBAAUC,EAAV,CAAa,MAAb,EAAqB;AAAA,mBAAQC,QAAQC,MAAR,CAAeR,KAAf,CAAqBS,IAArB,CAAR;AAAA,SAArB;AACAJ,kBAAUL,KAAV,CAAgB,SAAhB;AACAK,kBAAUL,KAAV,CAAgB,QAAhB;AACAK,kBAAUK,GAAV;AACH,KAND;AAOH,CARD;;AAWA5B,UAAU,MAAV,EAAiB,YAAI;AACjBC,OAAG,QAAH,EAAY,YAAI;AACZ,YAAInB,IAAE,IAAIL,CAAJ,EAAN;AACA,YAAIoD,KAAG,IAAIlE,WAAJ,EAAP;AACAmB,UAAEgD,IAAF,CAAOD,EAAP;AACA/C,UAAEgD,IAAF,CAAOD,EAAP;AACAA,WAAGL,EAAH,CAAM,MAAN,EAAad,QAAQC,GAArB;AACA7B,UAAEoC,KAAF,CAAQ,OAAR;AACApC,UAAE8C,GAAF;AACH,KARD;AASAvB,QAAI,aAAJ,EAAkB,UAAC0B,IAAD,EAAQ;AACtB,YAAIjD,IAAE,IAAIL,CAAJ,EAAN;AACAK,UAAE0C,EAAF,CAAK,aAAL,EAAoB,UAACQ,IAAD,EAAQ;AACxBtB,oBAAQC,GAAR,gBAAyBqB,IAAzB,eAAuClD,EAAEmD,aAAF,CAAgBD,IAAhB,CAAvC;AACH,SAFD;AAGAlD,UAAE0C,EAAF,CAAK,gBAAL,EAAuB,UAACQ,IAAD,EAAQ;AAC3BtB,oBAAQC,GAAR,mBAA4BqB,IAA5B,eAA0ClD,EAAEmD,aAAF,CAAgBD,IAAhB,CAA1C;AACH,SAFD;AAGA,YAAItD,IAAE,SAAFA,CAAE,GAAI,CAAE,CAAZ;AACAI,UAAE0C,EAAF,CAAK,MAAL,EAAY9C,CAAZ;AACAN,eAAOU,EAAEmD,aAAF,CAAgB,MAAhB,CAAP,EAAgCC,KAAhC,CAAsC,CAAtC;AACApD,UAAEqD,cAAF,CAAiB,MAAjB,EAAwBzD,CAAxB;AACAN,eAAOU,EAAEmD,aAAF,CAAgB,MAAhB,CAAP,EAAgCC,KAAhC,CAAsC,CAAtC;AACA,YAAIL,KAAG,IAAIlE,WAAJ,EAAP;AACAmB,UAAEgD,IAAF,CAAOD,EAAP;AACA/C,UAAE8C,GAAF;AACAxD,eAAOU,EAAEmD,aAAF,CAAgB,MAAhB,CAAP,EAAgCC,KAAhC,CAAsC,CAAtC;AACApD,UAAEsD,MAAF,CAASP,EAAT;AACAzD,eAAOU,EAAEmD,aAAF,CAAgB,MAAhB,CAAP,EAAgCC,KAAhC,CAAsC,CAAtC;AACAG,mBAAW,YAAI;AACXN;AACH,SAFD,EAEE,EAFF;AAGH,KAtBD;AAuBH,CAjCD;;AAoCA/B,UAAU,QAAV,EAAmB,YAAY;AAC5BC,OAAG,UAAH,EAAc,YAAY;AACtB,YAAIK,IAAE,IAAI7B,CAAJ,EAAN;AACAL,eAAOkC,EAAE9B,CAAT,EAAY0D,KAAZ,CAAkB,CAAlB;AACA9D,eAAOkC,EAAExB,CAAT,EAAYoD,KAAZ,CAAkB,CAAlB;AACH,KAJD;AAKF,CAND;;AAQAlC,UAAU,SAAV,EAAoB,YAAU;AAC1B,aAASlB,CAAT,GAAY;AACR,eAAO,IAAIwD,OAAJ,CAAY,UAACC,CAAD,EAAGC,CAAH,EAAO;AACtBA,cAAE,OAAF;AACH,SAFM,CAAP;AAGH;AACD,aAASlC,CAAT,GAAY;AACR,eAAOxB,IAAI2D,IAAJ,CAAS,YAAI,CAAE,CAAf,CAAP;AACH;AACDxC,OAAG,YAAH,EAAgB,UAAC8B,IAAD,EAAQ;AACpBzB,YAAImC,IAAJ,CAASV,IAAT,EAAeW,KAAf,CAAqBX,IAArB;AACH,KAFD;AAGH,CAZD;;AAcA/B,UAAU,MAAV,EAAiB,YAAI;AACjBC,OAAG,MAAH,EAAU,YAAI;AACVS,gBAAQC,GAAR,CAAY7C,MAAM6E,KAAN,CAAYC,SAAZ,CAAsBC,GAAtB,CAA0B,CAA1B,EAA6BC,GAAzC;AACH,KAFD;AAGH,CAJD;;AAMA9C,UAAU,MAAV,EAAiB,YAAI;AAClBC,OAAG,MAAH,EAAU,YAAI;AACVS,gBAAQC,GAAR,CAAYoC,SAAZ;AACArC,gBAAQC,GAAR,CAAY5C,KAAKiF,OAAL,CAAahF,IAAb,EAAkB,KAAlB,CAAZ;AACH,KAHD;AAIF,CALD;;AAOAgC,UAAU,OAAV,EAAmB,YAAW;;AAE1BI,aAAS,YAAT,EAAuB,YAAW;;AAE9B,iBAAS6C,EAAT,CAAYC,EAAZ,EAAeC,CAAf,EAAiB;AAAA;;AACb,iBAAKA,CAAL,GAAOA,CAAP;AACA1B,oBAAQ2B,QAAR,CAAiB,YAAI;AACjBF,mBAAG,OAAKC,CAAR;AACH,aAFD;AAGH;;AAEDlD,WAAG,kBAAH,EAAsB,YAAI;AACtB,gBAAIgD,EAAJ,CAAOvC,QAAQC,GAAf,EAAmB,KAAnB;AACAD,oBAAQC,GAAR,CAAY,KAAZ;AACH,SAHD;;AAKAN,YAAI,gDAAJ,EAAsD,YAAU;AAC5DzC,mBAAOsE,KAAP,CAAa,CAAC,CAAd,EAAiB,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAQmB,OAAR,CAAgB,CAAhB,CAAjB;AACH,SAFD;;AAIAhD,YAAI,QAAJ,EAAc,YAAU;AACpBzC,mBAAOsE,KAAP,CAAa,CAAb,EAAgB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAUnB,MAA1B;AACH,SAFD;AAGH,KArBD;AAsBH,CAxBD;;AA2BAf,UAAU,QAAV,EAAmB,YAAI;AACnBC,OAAG,UAAH,EAAc,YAAI;AACd,YAAInB,IAAE,EAAN;AACAA,UAAEA,CAAF,GAAI,CAAJ;AACA,YAAIwB,IAAE,EAACA,GAAE,CAAH,EAAN;AACA1C,eAAO0D,SAAP,CAAiBxC,CAAjB,EAAmBT,EAAEyC,QAAF,CAAWhC,CAAX,EAAawB,CAAb,CAAnB;AACH,KALD;AAMH,CAPD;;AAUAF,SAAS,OAAT,EAAiB,YAAI;AAClBC,QAAI,MAAJ,EAAW,YAAI;AACZ,YAAI7B,IAAE,EAAN,CAASA,EAAE,CAAF,IAAK,CAAL;AACT,YAAI8E,IAAEjF,EAAEkF,OAAF,CAAU/E,CAAV,CAAN;AACAkC,gBAAQC,GAAR,CAAY2C,CAAZ;AACA5C,gBAAQC,GAAR,CAAYnC,CAAZ;AACAH,UAAEmF,OAAF,CAAUhF,CAAV,EAAY,UAACiF,EAAD,EAAM;AACd/C,oBAAQC,GAAR,CAAY8C,EAAZ;AACH,SAFD;AAGAjF,UAAEgF,OAAF,CAAU,UAACC,EAAD,EAAM;AACZ/C,oBAAQC,GAAR,CAAY8C,EAAZ;AACH,SAFD;AAGA,YAAIC,IAAEC,MAAMxD,IAAN,CAAW3B,CAAX,CAAN;AACAkC,gBAAQC,GAAR,CAAY+C,CAAZ;AACA,YAAI5E,IAAEN,EAAEoF,MAAF,CAAS,UAACC,CAAD,EAAK;AAAC,mBAAOA,CAAP;AAAU,SAAzB,CAAN;AACCnD,gBAAQC,GAAR,CAAY7B,CAAZ;AACD,YAAIwB,IAAEjC,EAAEuF,MAAF,CAASpF,CAAT,EAAW,UAAC8E,CAAD,EAAK;AAAC,mBAAOA,CAAP;AAAU,SAA3B,CAAN;AACF,KAhBD;;AAkBArD,OAAG,eAAH,EAAmB,YAAI;AACnB,YAAIzB,IAAE,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAAN;AACAH,UAAEyF,MAAF,CAAStF,CAAT,EAAW,UAACqF,CAAD,EAAK;AAAC,mBAAOA,CAAP;AAAU,SAA3B;AACAjG,eAAOmG,EAAP,CAAUvF,EAAEuC,MAAF,KAAW,CAArB;AACH,KAJD;AAKF,CAxBD;;AA0BAX,SAAS,SAAT,EAAmB,YAAI;AAAA;AAAA,8EACnB;AAAA;AAAA;AAAA;AAAA;AACIM,oCAAQC,GAAR,CAAY,OAAZ;AADJ,6DAEW,IAAI2B,OAAJ,CAAY,UAACU,OAAD,EAAW;AAC1BX,2CAAW,YAAI;AACXW,4CAAQ,CAAR;AACH,iCAFD,EAEE,EAFF;AAGH,6BAJM,CAFX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADmB;;AAAA,wBACJgB,GADI;AAAA;AAAA;AAAA;;AAAA;AAAA,+EA4BnB,kBAAyBC,IAAzB,EAA8BC,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA,8DACW,IAAI5B,OAAJ,CAAY,UAACU,OAAD,EAAW;AAC1BX,2CAAW,YAAI;AAACW,4CAAQiB,OAAKC,IAAb;AAAmB,iCAAnC,EAAoC,EAApC;AACH,6BAFM,CADX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SA5BmB;;AAAA,wBA4BJC,SA5BI;AAAA;AAAA;AAAA;;AAAA;AAAA,+EAuDnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCACU7B,QAAQ8B,MAAR,CAAe,CAAf,CADV;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAvDmB;;AAAA,wBAuDJC,KAvDI;AAAA;AAAA;AAAA;;AA2DnB;;;AAlDApE,OAAG,WAAH,EAAe,UAAC8B,IAAD,EAAQ;AACpB,YAAIvD,IAAE,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,CAAN;AACAA,UAAEgB,GAAF;AAAA,mFAAM,kBAAOiE,EAAP;AAAA;AAAA;AAAA;AAAA;AAAA,sCACCA,OAAK,CADN;AAAA;AAAA;AAAA;;AAAA;AAAA,uCAEQO,KAFR;;AAAA;AAGEtD,wCAAQC,GAAR,CAAY8C,EAAZ;AACA1B;AAJF;AAAA;;AAAA;AAMGrB,wCAAQC,GAAR,CAAY8C,EAAZ;;AANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAN;;AAAA;AAAA;AAAA;AAAA;AAQF,KAVD;AAWAxD,OAAG,GAAH,6DAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACS+D,KADT;;AAAA;AACCxF,yBADD;;AAEHkC,gCAAQC,GAAR,CAAY,GAAZ;AAFG;AAAA,+BAGS2B,QAAQU,OAAR,CAAgB,CAAhB,CAHT;;AAAA;AAGCU,yBAHD;;AAIHhD,gCAAQC,GAAR,CAAY,GAAZ;AACAvC,+BAAOI,CAAP,EAAU0D,KAAV,CAAgB,CAAhB;;AALG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAcAjC,OAAG,wBAAH,EAA4B,UAAC8B,IAAD,EAAQ;AAChCoC,kBAAUG,KAAV,YAAqB,CAAC,CAAD,EAAG,CAAH,CAArB,EAA4B7B,IAA5B,CAAiC,UAAC8B,GAAD,EAAO;AACpCnG,mBAAOmG,GAAP,EAAYrC,KAAZ,CAAkB,CAAlB;AACAH;AACH,SAHD;AAIH,KALD;;AAOA9B,OAAG,sBAAH,6DAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACRkE,UAAUG,KAAV,YAAqB,CAAC,CAAD,EAAG,CAAH,CAArB,CADQ;;AAAA;AAClBC,2BADkB;;AAEtBnG,+BAAOmG,GAAP,EAAYrC,KAAZ,CAAkB,CAAlB;;AAFsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA1B;;AAKAjC,OAAG,gCAAH,EAAoC,UAAC8B,IAAD,EAAQ;AACxC,YAAIyC,MAAInG,EAAEoG,OAAF,CAAUN,SAAV,EAAoB,CAApB,CAAR;AACAK,YAAI,CAAJ,EAAO/B,IAAP,CAAY,UAAC8B,GAAD,EAAO;AACfnG,mBAAOmG,GAAP,EAAYrC,KAAZ,CAAkB,CAAlB;AACAH;AACH,SAHD;AAIH,KAND;;AAcA9B,OAAG,OAAH,6DAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACKoE,QAAQ3B,KAAR,CAAc,YAAI;AAC1B,mCAAOJ,QAAQU,OAAR,CAAgB,CAAhB,CAAP;AACH,yBAFW,CADL;;AAAA;AACHxE,yBADG;;AAIPkC,gCAAQC,GAAR,CAAYnC,CAAZ;;AAJO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAX;AAMH,CAlED;;AAoEA4B,SAAS,IAAT,EAAc,YAAI;AACdH,OAAG,MAAH,EAAU,YAAI;AACV,YAAIyE,OAAK3G,KAAKiF,OAAL,CAAaD,SAAb,EAAuB,WAAvB,CAAT;AACAzE,WAAGqG,IAAH,CAAQD,IAAR,EAAc,CAAC,WAAD,mBAA4B,KAA5B,CAAd;AACH,KAHD;AAIH,CALD","file":"test.js","sourcesContent":["\r\nconst Transform = require('stream').Transform;\r\nconst PassThrough=require('stream').PassThrough;\r\nconst assert = require('assert');\r\nlet config = require('../config/config');\r\nconst dhlib=require('../ipcs/dahua/dhnetsdk');\r\nconst path = require('path');\r\nconst root=require('../config/config').root;\r\nconst Event=require('events').EventEmitter;\r\nconst amf=require('amf');\r\nconst expect=require('chai').expect;\r\nconst _=require('lodash');\r\nconst cp=require('child_process');\r\n\r\n\r\n/**\r\n * describe 测试套件 test suite 表示一组相关的测试\r\n * it 测试用例 test case 表示一个单独的测试\r\n * assert 断言 表示对结果的预期\r\n */\r\n\r\nclass B{\r\n    constructor(){\r\n        this.x=1;\r\n    }\r\n    funA(){}\r\n    get a(){\r\n        return this.x;\r\n    }\r\n    get b(){\r\n        return 2;\r\n    }\r\n}\r\n\r\nclass A extends Transform{\r\n    constructor(){\r\n        super();\r\n        //B.call(this); error not new\r\n    }\r\n    get a(){\r\n        return B.prototype.a.call(this);\r\n    }\r\n    _transform(d,e,n){\r\n        n(null,d);\r\n    }\r\n}\r\n\r\nclass Rotate extends Transform {\r\n    constructor(n) {\r\n        super()\r\n        // 将字母旋转`n`个位置\r\n        this.offset = (n || 13) % 26\r\n    }\r\n\r\n    // 将可写端写入的数据变换后添加到可读端\r\n    _transform(buf, enc, next) {\r\n        var res = buf.toString().split('').map(c => {\r\n            var code = c.charCodeAt(0)\r\n            if (c >= 'a' && c <= 'z') {\r\n                code += this.offset\r\n                if (code > 'z'.charCodeAt(0)) {\r\n                    code -= 26\r\n                }\r\n            } else if (c >= 'A' && c <= 'Z') {\r\n                code += this.offset\r\n                if (code > 'Z'.charCodeAt(0)) {\r\n                    code -= 26\r\n                }\r\n            }\r\n            return String.fromCharCode(code)\r\n        }).join('')\r\n\r\n        // 调用push方法将变换后的数据添加到可读端\r\n        this.push(res)\r\n        // 调用next方法准备处理下一个\r\n        next()\r\n    }\r\n}\r\n\r\nxdescribe('buffer',()=>{\r\n   it('0 test',()=>{\r\n     let buf=buffer.from([0]);\r\n     buf.toString('');\r\n   });\r\n});\r\n\r\ndescribe('amf',()=>{\r\n   xit('read',()=>{\r\n       let b=Buffer.from('080000000900086475726174696f6e000000000000000000000577696474680040760000000000000006686569676874004072000000000000000d766964656f646174617261746500000000000000000000096672616d6572617465004059000000000000000c766964656f636f646563696400401c00000000000000057469746c65020010525453502053657373696f6e2f322e300007656e636f64657202000d4c61766635372e37352e313030000866696c6573697a65000000000000000000000009','hex');\r\n       let obj=amf.read(b,0);\r\n       console.log(obj);\r\n   }) ;\r\n   it('write',()=>{\r\n       let buf=Buffer.allocUnsafe(400);\r\n       let b=Buffer.from('080000000900086475726174696f6e000000000000000000000577696474680040760000000000000006686569676874004072000000000000000d766964656f646174617261746500000000000000000000096672616d6572617465004059000000000000000c766964656f636f646563696400401c00000000000000057469746c65020010525453502053657373696f6e2f322e300007656e636f64657202000d4c61766635372e37352e313030000866696c6573697a65000000000000000000000009','hex');\r\n       let obj=amf.read(b,0);\r\n       let arr=[];\r\n       _.defaults(arr,obj);\r\n       arr.length=_.keys(obj).length;\r\n       let info={};\r\n       amf.write(buf,arr,info);\r\n       let b2=buf.slice(0,info.byteLength);\r\n       assert.deepEqual(b,b2);\r\n   });\r\n});\r\n\r\n\r\nxdescribe('transform-data',()=>{\r\n    it('do',()=>{\r\n        var transform = new Rotate(3)\r\n        transform.on('data', data => process.stdout.write(data))\r\n        transform.write('hello, ')\r\n        transform.write('world!')\r\n        transform.end()\r\n    });\r\n});\r\n\r\n\r\nxdescribe('pipe',()=>{\r\n    it('m-pipe',()=>{\r\n        let a=new A();\r\n        let pt=new PassThrough();\r\n        a.pipe(pt);\r\n        a.pipe(pt);\r\n        pt.on('data',console.log);\r\n        a.write('hello');\r\n        a.end();\r\n    });\r\n    xit('event count',(done)=>{\r\n        let a=new A();\r\n        a.on('newListener', (name)=>{\r\n            console.log(`new Event:${name},Count:${a.listenerCount(name)}`)\r\n        });\r\n        a.on('removeListener', (name)=>{\r\n            console.log(`remove Event:${name},Count:${a.listenerCount(name)}`)\r\n        });\r\n        let d=()=>{};\r\n        a.on('data',d);\r\n        expect(a.listenerCount('data')).equal(1);\r\n        a.removeListener('data',d);\r\n        expect(a.listenerCount('data')).equal(0);\r\n        let pt=new PassThrough();\r\n        a.pipe(pt);\r\n        a.end();\r\n        expect(a.listenerCount('data')).equal(1);\r\n        a.unpipe(pt);\r\n        expect(a.listenerCount('data')).equal(0);\r\n        setTimeout(()=>{\r\n            done();\r\n        },10);\r\n    });\r\n});\r\n\r\n\r\nxdescribe('集成附加组件',function () {\r\n   it('sub.call',function () {\r\n       let b=new A();\r\n       expect(b.x).equal(1);\r\n       expect(b.a).equal(1);\r\n   })\r\n});\r\n\r\nxdescribe('promise',function(){\r\n    function a(){\r\n        return new Promise((s,f)=>{\r\n            f('err t')\r\n        });\r\n    }\r\n    function b(){\r\n        return a().then(()=>{});\r\n    }\r\n    it('promise/a+',(done)=>{\r\n        b().then(done).catch(done);\r\n    });\r\n});\r\n\r\nxdescribe('enum',()=>{\r\n    it('enum',()=>{\r\n        console.log(dhlib.enums.loginType.get(0).key);\r\n    });\r\n});\r\n\r\nxdescribe('path',()=>{\r\n   it('代码路劲',()=>{\r\n       console.log(__dirname);\r\n       console.log(path.resolve(root,'app'));\r\n   });\r\n});\r\n\r\nxdescribe('Array', function() {\r\n\r\n    describe('#indexOf()', function() {\r\n\r\n        function pc(cb,v){\r\n            this.v=v;\r\n            process.nextTick(()=>{\r\n                cb(this.v);\r\n            })\r\n        }\r\n\r\n        it('process.nextTick',()=>{\r\n            new pc(console.log,'abc');\r\n            console.log('123');\r\n        });\r\n\r\n        xit('should return -1 when the value is not present', function(){\r\n            assert.equal(-1, [1,2,3].indexOf(4));\r\n        });\r\n\r\n        xit('length', function(){\r\n            assert.equal(3, [1, 2, 3].length);\r\n        })\r\n    })\r\n});\r\n\r\n\r\nxdescribe('lodash',()=>{\r\n    it('defaults',()=>{\r\n        let a=[];\r\n        a.a=1;\r\n        let b={b:2};\r\n        assert.deepEqual(a,_.defaults(a,b));\r\n    });\r\n});\r\n\r\n\r\ndescribe('array',()=>{\r\n   xit('each',()=>{\r\n      let x=[];x[3]=1;\r\n      let z=_.without(x);\r\n      console.log(z);\r\n      console.log(x);\r\n      _.forEach(x,(xi)=>{\r\n          console.log(xi);\r\n      });\r\n      x.forEach((xi)=>{\r\n          console.log(xi);\r\n      });\r\n      let y=Array.from(x);\r\n      console.log(y);\r\n      let a=x.filter((i)=>{return i;})\r\n       console.log(a);\r\n      let b=_.filter(x,(z)=>{return z;});\r\n   });\r\n\r\n   it('lodash.remove',()=>{\r\n       let x=[0,1,2];\r\n       _.remove(x,(i)=>{return i;});\r\n       assert.ok(x.length===1);\r\n   })\r\n});\r\n\r\ndescribe('async测试',()=>{\r\n    async function abc() {\r\n        console.log('async');\r\n        return new Promise((resolve)=>{\r\n            setTimeout(()=>{\r\n                resolve(1);\r\n            },10);\r\n        })\r\n    }\r\n    it('map-async',(done)=>{\r\n       let x=[1,2,3,4];\r\n       x.map(async (xi)=>{\r\n           if(xi===1) {\r\n               await abc();\r\n               console.log(xi);\r\n               done();\r\n           }\r\n           else console.log(xi);\r\n       });\r\n    });\r\n    it('1',async ()=>{\r\n        let x=await abc();\r\n        console.log('x');\r\n        let y=await Promise.resolve(2);\r\n        console.log('y');\r\n        expect(x).equal(1);\r\n    });\r\n\r\n    async function applyTest(num1,num2) {\r\n        return new Promise((resolve)=>{\r\n            setTimeout(()=>{resolve(num1+num2)},10);\r\n        });\r\n    }\r\n\r\n    it('promise-function.apply',(done)=>{\r\n        applyTest.apply(this,[1,2]).then((sum)=>{\r\n            expect(sum).equal(3);\r\n            done();\r\n        });\r\n    });\r\n\r\n    it('async-function.apply',async ()=>{\r\n        let sum=await applyTest.apply(this,[1,2]);\r\n        expect(sum).equal(3);\r\n    });\r\n\r\n    it('async-function.apply-_.partial',(done)=>{\r\n        let fun=_.partial(applyTest,1);\r\n        fun(2).then((sum)=>{\r\n            expect(sum).equal(3)\r\n            done();\r\n        });\r\n    });\r\n\r\n\r\n    async function Throw() {\r\n        await Promise.reject(1);\r\n    }\r\n\r\n    //error\r\n    it('catch',async ()=>{\r\n        let x=await Throw().catch(()=>{\r\n            return Promise.resolve(2);\r\n        });\r\n        console.log(x);\r\n    });\r\n});\r\n\r\ndescribe('cp',()=>{\r\n    it('fork',()=>{\r\n        let file=path.resolve(__dirname,'./init.js');\r\n        cp.fork(file, ['--inspect',`--debug-brk=${12000}`]);\r\n    });\r\n});"]}