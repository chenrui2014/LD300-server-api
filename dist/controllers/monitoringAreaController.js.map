{"version":3,"sources":["../../src/controllers/monitoringAreaController.js"],"names":["require","Parser","logger","MonitoringAreaController","ctx","data","request","body","info","msg","add_monitoringArea","result","error","id","params","delete_monitoringArea","_id","edit_monitoringArea","query","sort","range","filter","sortObj","JSON","parse","rangeObj","filterObj","obj","Array","isArray","$in","sortP","length","pageStart","pageEnd","getTotal","total","pagination","pageSize","find_monitoringArea","findAll","hosts","forEach","e","host","_doc","hostId","hostName","cameras","camera","cameraId","cameraName","name","find_one"],"mappings":";;;;;;;;;;;;AAMA;;;;AACA;;;;AACA;;;;;;;;;;AARA;;;eAGeA,QAAQ,YAAR,C;IAARC,M,YAAAA,M;;AACP,IAAMC,SAAO,EAAb;AACAD,OAAOC,MAAP,EAAc,6BAAd;;AAIA;;IAEMC,wB;;;;;;;;mGAC8BC,G;;;;;;AACtBC,oC,GAAOD,IAAIE,OAAJ,CAAYC,I;;AACzBL,uCAAOM,IAAP,CAAYH,IAAZ;;oCACIA,I;;;;;iEAAaD,IAAIG,IAAJ,GAAS,EAAEE,KAAK,SAAP,E;;;;uCAKL,4BAAkBC,kBAAlB,CAAqCL,IAArC,C;;;AAAfM,sC;AACFF,mC,GAAM,E;;qCACPE,M;;;;;AACCF,sCAAM,UAAN;iEACOL,IAAIG,IAAJ,GAAW,EAACE,KAAIA,GAAL,EAASJ,MAAKA,IAAd,E;;;AAElBI,sCAAM,UAAN;iEACOL,IAAIQ,KAAJ,GAAU,EAACH,KAAKA,GAAN,E;;;;;;;;;;;;;;;;;;;qGAIUL,G;;;;;;AACvBS,kC,GAAOT,IAAIU,M,CAAXD,E;;AACRX,uCAAOM,IAAP,CAAYK,EAAZ;;uCACqB,4BAAkBE,qBAAlB,CAAwC,EAACF,IAAGA,EAAJ,EAAxC,C;;;AAAfF,sC;AACFF,mC,GAAM,E;;qCACPE,M;;;;;AACCF,sCAAM,SAAN;kEACOL,IAAIG,IAAJ,GAAW,EAACE,KAAIA,GAAL,EAASJ,MAAKM,MAAd,E;;;AAElBF,sCAAM,SAAN;kEACOL,IAAIQ,KAAJ,GAAU,EAACH,KAAKA,GAAN,E;;;;;;;;;;;;;;;;;;;qGAIQL,G;;;;;;;AACvBC,oC,GAAOD,IAAIE,OAAJ,CAAYC,I;;AACzBL,uCAAOM,IAAP,CAAYH,IAAZ;AACIW,mC,GAAMX,KAAKW,G;;AACf,uCAAOX,KAAKW,GAAZ;;uCACqB,4BAAkBC,mBAAlB,CAAsC,EAACD,KAAIA,GAAL,EAAtC,EAAgDX,IAAhD,C;;;AAAfM,sC;;AACN,oCAAGA,MAAH,EAAWP,IAAIG,IAAJ,GAAW,EAACE,KAAI,UAAL,EAAgBJ,MAAKM,MAArB,EAAX;kEACJP,IAAIQ,KAAJ,GAAU,EAACH,KAAK,WAAN,E;;;;;;;;;;;;;;;;;;;qGAGYL,G;;;;;;;6CACCA,IAAIc,K,EAA1BC,I,cAAAA,I,EAAKC,K,cAAAA,K,EAAMC,M,cAAAA,M;AACnB;AACA;AACA;;AACIC,uC,GAAU,I;;AACd,oCAAGH,IAAH,EAAQ;AACJG,8CAAUC,KAAKC,KAAL,CAAWL,IAAX,CAAV;AACH;;AAEGM,wC,GAAW,I;;AACf,oCAAGL,KAAH,EAAS;AACLK,+CAAWF,KAAKC,KAAL,CAAWJ,KAAX,CAAX;AACH;;AAEGM,yC,GAAY,I;;AAChB,oCAAGL,UAAU,SAAQA,MAArB,EAA4B;AACpBM,uCADoB,GACdJ,KAAKC,KAAL,CAAWH,MAAX,CADc;;AAExB,wCAAGM,OAAOC,MAAMC,OAAN,CAAcF,IAAId,EAAlB,CAAV,EAAgC;AAC5Ba,oDAAY,EAACb,IAAG,EAACiB,KAAIH,IAAId,EAAT,EAAJ,EAAZ;AACH,qCAFD,MAEK;AACDa,oDAAYC,GAAZ;AACH;AACJ;AACGI,qC,GAAQ,E;;AACZ,oCAAGT,WAAWA,QAAQU,MAAR,IAAiB,CAA/B,EAAiC;AAC7B,wCAAG,UAASV,QAAQ,CAAR,CAAZ,EAAuB;AACnBS,8CAAMT,QAAQ,CAAR,CAAN,IAAoB,CAApB;AACH,qCAFD,MAEK;AACDS,8CAAMT,QAAQ,CAAR,CAAN,IAAoB,CAAC,CAArB;AACH;AACJ;;AAEGW,yC,GAAY,C,EAAEC,O,GAAU,C;;AAC5B,oCAAGT,YAAYA,SAASO,MAAT,IAAkB,CAAjC,EAAmC;AAC/BC,gDAAYR,SAAS,CAAT,CAAZ;AACAS,8CAAUT,SAAS,CAAT,CAAV;AACH;;;uCAGmB,4BAAkBU,QAAlB,E;;;AAAdC,qC;AAEAC,0C,GAAa,E;;AACnBA,2CAAWJ,SAAX,GAAuBA,SAAvB;AACAI,2CAAWC,QAAX,GAAsBJ,UAAQD,SAAR,GAAkB,CAAxC;;AAEItB,sC,GAAS,I;;qCACVoB,K;;;;;qCACIN,Q;;;;;AACKQ,0C,GAAY,C,EAAEC,Q,GAAU,C;;AAC5B,oCAAGT,YAAYA,SAASO,MAAT,IAAkB,CAAjC,EAAmC;AAC/BC,iDAAYR,SAAS,CAAT,CAAZ;AACAS,+CAAUT,SAAS,CAAT,CAAV;AACH;AACKY,2C,GAAa,E;;AACnBA,4CAAWJ,SAAX,GAAuBA,UAAvB;AACAI,4CAAWC,QAAX,GAAsBJ,WAAQD,UAAR,GAAkB,EAAxC;;uCACe,4BAAkBM,mBAAlB,CAAsCb,SAAtC,EAAgDK,KAAhD,EAAsDM,WAAtD,C;;;AAAf1B,sC;;;;;;uCAEe,4BAAkB4B,mBAAlB,CAAsCb,SAAtC,EAAgDK,KAAhD,C;;;AAAfpB,sC;;;;;;;qCAGDc,Q;;;;;AACKQ,2C,GAAY,C,EAAEC,S,GAAU,C;;AAC5B,oCAAGT,YAAYA,SAASO,MAAT,IAAkB,CAAjC,EAAmC;AAC/BC,kDAAYR,SAAS,CAAT,CAAZ;AACAS,gDAAUT,SAAS,CAAT,CAAV;AACH;AACKY,4C,GAAa,E;;AACnBA,6CAAWJ,SAAX,GAAuBA,WAAvB;AACAI,6CAAWC,QAAX,GAAsBJ,YAAQD,WAAR,GAAkB,EAAxC;;uCACe,4BAAkBM,mBAAlB,CAAsCb,SAAtC,EAAgD,IAAhD,EAAqDW,YAArD,C;;;AAAf1B,sC;;;;;;uCAEe,4BAAkB4B,mBAAlB,CAAsCb,SAAtC,C;;;AAAff,sC;;;qCAqBLA,M;;;;;kEAAeP,IAAIG,IAAJ,GAAW,EAACE,KAAI,QAAL,EAAcJ,MAAKM,MAAnB,EAA0ByB,OAAMA,KAAhC,E;;;kEACtBhC,IAAIG,IAAJ,GAAS,EAACE,KAAK,WAAN,E;;;;;;;;;;;;;;;;;;;qGAGoBL,G;;;;;;AAC5Be,oC,GAAQf,IAAIc,K,CAAZC,I;AACJG,uC,GAAUC,KAAKC,KAAL,CAAWL,IAAX,C;AACVY,qC,GAAQ,E;;AACZ,oCAAGT,WAAWA,QAAQU,MAAR,IAAiB,CAA/B,EAAiC;AAC7B,wCAAG,UAASV,QAAQ,CAAR,CAAZ,EAAuB;AACnBS,8CAAMT,QAAQ,CAAR,CAAN,IAAoB,CAApB;AACH,qCAFD,MAEK;AACDS,8CAAMT,QAAQ,CAAR,CAAN,IAAoB,CAAC,CAArB;AACH;AACJ;;uCACkB,4BAAkBkB,OAAlB,CAA0BT,KAA1B,C;;;AAAfpB,sC;;uCACgB,sBAAY6B,OAAZ,E;;;AAAdC,qC;;;AAEN9B,uCAAO+B,OAAP,CAAe,UAAUC,CAAV,EAAa;AACxBF,0CAAMC,OAAN,CAAc,UAAUE,IAAV,EAAgB;AAC1B,4CAAGD,EAAEE,IAAF,CAAOC,MAAP,KAAkBF,KAAKC,IAAL,CAAUhC,EAA/B,EAAmC8B,EAAEE,IAAF,CAAOE,QAAP,GAAkBH,KAAKC,IAAL,CAAUE,QAA5B;AACnC;AACH,qCAHD;AAIH,iCALD;;uCAMsB,wBAAcP,OAAd,E;;;AAAhBQ,uC;;;AAENrC,uCAAO+B,OAAP,CAAe,UAAUC,CAAV,EAAa;AACxBK,4CAAQN,OAAR,CAAgB,UAAUO,MAAV,EAAkB;AAC9B,4CAAGN,EAAEE,IAAF,CAAOK,QAAP,KAAoBD,OAAOJ,IAAP,CAAYhC,EAAnC,EAAuC8B,EAAEE,IAAF,CAAOM,UAAP,GAAoBF,OAAOJ,IAAP,CAAYO,IAAhC;AACvC;AACH,qCAHD;AAIH,iCALD;;qCAMGzC,M;;;;;kEAAeP,IAAIG,IAAJ,GAAW,EAACE,KAAI,QAAL,EAAcJ,MAAKM,MAAnB,E;;;kEACtBP,IAAIQ,KAAJ,GAAU,EAACH,KAAK,WAAN,E;;;;;;;;;;;;;;;;;;;qGAECL,G;;;;;;AACVS,kC,GAAOT,IAAIU,M,CAAXD,E;;uCACa,4BAAkBwC,QAAlB,CAA2BxC,EAA3B,C;;;AAAfF,sC;;uCACc,sBAAY6B,OAAZ,E;;;AAAdC,qC;;;AAENA,sCAAMC,OAAN,CAAc,UAAUE,IAAV,EAAgB;AACtB,wCAAGjC,OAAOkC,IAAP,CAAYC,MAAZ,KAAuBF,KAAKC,IAAL,CAAUhC,EAApC,EAAwCF,OAAOkC,IAAP,CAAYE,QAAZ,GAAuBH,KAAKC,IAAL,CAAUE,QAAjC;AACxC;AACP,iCAHD;;;uCAKsB,wBAAcP,OAAd,E;;;AAAhBQ,uC;;;AAENA,wCAAQN,OAAR,CAAgB,UAAUO,MAAV,EAAkB;AAC1B,wCAAGtC,OAAOkC,IAAP,CAAYK,QAAZ,KAAyBD,OAAOJ,IAAP,CAAYhC,EAAxC,EAA4CF,OAAOkC,IAAP,CAAYM,UAAZ,GAAyBF,OAAOJ,IAAP,CAAYO,IAArC;AAC5C;AACP,iCAHD;;qCAKGzC,M;;;;;kEAAeP,IAAIG,IAAJ,GAAW,EAACE,KAAI,QAAL,EAAcJ,MAAKM,MAAnB,E;;;kEACtBP,IAAIG,IAAJ,GAAW,EAACE,KAAK,WAAN,E;;;;;;;;;;;;;;;;;;;;;kBAKXN,wB","file":"monitoringAreaController.js","sourcesContent":["/**\r\n * Created by chen on 17-8-23.\r\n */\r\nconst {Parser}=require('../log/log');\r\nconst logger={};\r\nParser(logger,'MonitoringAreaController.js');\r\nimport MonitoringService from '../services/monitoringService';\r\nimport HostService from '../services/hostService';\r\nimport CameraService from '../services/cameraService';\r\n//import CameraTypeService from \"../services/cameraTypeService\";\r\n\r\nclass MonitoringAreaController {\r\n    static async add_monitoringArea(ctx){\r\n        const data = ctx.request.body;\r\n        logger.info(data);\r\n        if(!data) return ctx.body={ msg: '发送数据失败!' };\r\n        //const isExit = await MonitoringService.isExist(id).add_monitoringArea(data).findOne({ip:data.fields.ip});\r\n        //logger.info(isExit);\r\n        //if(isExit) return ctx.body={ msg: '该监控区域已添加!' };\r\n\r\n        const result = await MonitoringService.add_monitoringArea(data);\r\n        let msg = '';\r\n        if(result) {\r\n            msg = '添加监控区域成功';\r\n            return ctx.body = {msg:msg,data:data};\r\n        }else{\r\n            msg = '添加监控区域失败';\r\n            return ctx.error={msg: msg};\r\n        }\r\n    }\r\n\r\n    static async delete_monitoringArea(ctx) {\r\n        const { id } = ctx.params;\r\n        logger.info(id);\r\n        const result = await MonitoringService.delete_monitoringArea({id:id});\r\n        let msg = '';\r\n        if(result) {\r\n            msg = '删除摄像头成功';\r\n            return ctx.body = {msg:msg,data:result};\r\n        }else{\r\n            msg = '删除摄像头失败';\r\n            return ctx.error={msg: msg};\r\n        }\r\n    }\r\n\r\n    static async edit_monitoringArea(ctx){\r\n        const data = ctx.request.body;\r\n        logger.info(data);\r\n        let _id = data._id;\r\n        delete data._id;\r\n        const result = await MonitoringService.edit_monitoringArea({_id:_id},data);\r\n        if(result) ctx.body = {msg:'修改监控区域成功',data:result};\r\n        return ctx.error={msg: '修改监控区域失败!'};\r\n    }\r\n\r\n    static async find_monitoringArea(ctx){\r\n        const { sort,range,filter } = ctx.query;\r\n        // let sortObj = JSON.parse(sort);\r\n        // let rangeObj = JSON.parse(range);\r\n        // let filterObj = JSON.parse(filter);\r\n        let sortObj = null;\r\n        if(sort){\r\n            sortObj = JSON.parse(sort);\r\n        }\r\n\r\n        let rangeObj = null;\r\n        if(range){\r\n            rangeObj = JSON.parse(range);\r\n        }\r\n\r\n        let filterObj = null;\r\n        if(filter && \"{}\" !==filter){\r\n            let obj = JSON.parse(filter);\r\n            if(obj && Array.isArray(obj.id)){\r\n                filterObj = {id:{$in:obj.id}};\r\n            }else{\r\n                filterObj = obj;\r\n            }\r\n        }\r\n        let sortP = {};\r\n        if(sortObj && sortObj.length >=2){\r\n            if('ASC' ===sortObj[1]){\r\n                sortP[sortObj[0]] = 1;\r\n            }else{\r\n                sortP[sortObj[0]] = -1;\r\n            }\r\n        }\r\n\r\n        let pageStart = 0,pageEnd = 0;\r\n        if(rangeObj && rangeObj.length >=2){\r\n            pageStart = rangeObj[0];\r\n            pageEnd = rangeObj[1];\r\n        }\r\n\r\n\r\n        const total = await MonitoringService.getTotal();\r\n\r\n        const pagination = {};\r\n        pagination.pageStart = pageStart;\r\n        pagination.pageSize = pageEnd-pageStart+1;\r\n\r\n        let result = null;\r\n        if(sortP){\r\n            if(rangeObj){\r\n                let pageStart = 0,pageEnd = 0;\r\n                if(rangeObj && rangeObj.length >=2){\r\n                    pageStart = rangeObj[0];\r\n                    pageEnd = rangeObj[1];\r\n                }\r\n                const pagination = {};\r\n                pagination.pageStart = pageStart;\r\n                pagination.pageSize = pageEnd-pageStart+25;\r\n                result = await MonitoringService.find_monitoringArea(filterObj,sortP,pagination);\r\n            }else{\r\n                result = await MonitoringService.find_monitoringArea(filterObj,sortP);\r\n            }\r\n        }else{\r\n            if(rangeObj){\r\n                let pageStart = 0,pageEnd = 0;\r\n                if(rangeObj && rangeObj.length >=2){\r\n                    pageStart = rangeObj[0];\r\n                    pageEnd = rangeObj[1];\r\n                }\r\n                const pagination = {};\r\n                pagination.pageStart = pageStart;\r\n                pagination.pageSize = pageEnd-pageStart+25;\r\n                result = await MonitoringService.find_monitoringArea(filterObj,null,pagination);\r\n            }else{\r\n                result = await MonitoringService.find_monitoringArea(filterObj);\r\n            }\r\n        }\r\n\r\n        // let result = await MonitoringService.find_monitoringArea(filterObj,sortP,pagination);\r\n        // const hosts = await HostService.findAll();\r\n        //\r\n        // result.forEach(function (e) {\r\n        //     hosts.forEach(function (host) {\r\n        //         if(e._doc.hostId === host._doc.id) e._doc.hostName = host._doc.hostName;\r\n        //         return;\r\n        //     });\r\n        // });\r\n        // const cameras = await CameraService.findAll();\r\n        //\r\n        // result.forEach(function (e) {\r\n        //     cameras.forEach(function (camera) {\r\n        //         if(e._doc.cameraId === camera._doc.id) e._doc.cameraName = camera._doc.name;\r\n        //         return;\r\n        //     });\r\n        // });\r\n        if(result) return ctx.body = {msg:'查询监控区域',data:result,total:total};\r\n        return ctx.body={msg: '没有找到监控区域!'};\r\n    }\r\n\r\n    static async find_monitoringArea_noPage(ctx){\r\n        const { sort} = ctx.query;\r\n        let sortObj = JSON.parse(sort);\r\n        let sortP = {};\r\n        if(sortObj && sortObj.length >=2){\r\n            if('ASC' ===sortObj[1]){\r\n                sortP[sortObj[0]] = 1\r\n            }else{\r\n                sortP[sortObj[0]] = -1\r\n            }\r\n        }\r\n        let result = await MonitoringService.findAll(sortP);\r\n        const hosts = await HostService.findAll();\r\n\r\n        result.forEach(function (e) {\r\n            hosts.forEach(function (host) {\r\n                if(e._doc.hostId === host._doc.id) e._doc.hostName = host._doc.hostName;\r\n                //return;\r\n            });\r\n        });\r\n        const cameras = await CameraService.findAll();\r\n\r\n        result.forEach(function (e) {\r\n            cameras.forEach(function (camera) {\r\n                if(e._doc.cameraId === camera._doc.id) e._doc.cameraName = camera._doc.name;\r\n                //return;\r\n            });\r\n        });\r\n        if(result) return ctx.body = {msg:'查询监控区域',data:result};\r\n        return ctx.error={msg: '没有找到监控区域!'};\r\n    }\r\n    static async find_one(ctx){\r\n        const { id } = ctx.params;\r\n        const result = await MonitoringService.find_one(id);\r\n        const hosts = await HostService.findAll();\r\n\r\n        hosts.forEach(function (host) {\r\n                if(result._doc.hostId === host._doc.id) result._doc.hostName = host._doc.hostName;\r\n                //return;\r\n        });\r\n\r\n        const cameras = await CameraService.findAll();\r\n\r\n        cameras.forEach(function (camera) {\r\n                if(result._doc.cameraId === camera._doc.id) result._doc.cameraName = camera._doc.name;\r\n                //return;\r\n        });\r\n\r\n        if(result) return ctx.body = {msg:'查询监控区域',data:result};\r\n        return ctx.body = {msg: '没有找到监控区域!'};\r\n    }\r\n\r\n}\r\n\r\nexport default MonitoringAreaController;"]}