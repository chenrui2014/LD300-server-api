{"version":3,"sources":["../../src/controllers/perimeterPointController.js"],"names":["PerimeterPointController","ctx","data","request","body","info","error","msg","isExist","realPosition","isExit","result","add_perimeterPoint","port","id","params","delete_perimeterPoint","_id","edit_perimeterPoint","query","sort","range","filter","sortObj","JSON","parse","sortP","length","getTotal","total","findAll","hosts","forEach","e","host","_doc","hostId","find_one"],"mappings":"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","file":"perimeterPointController.js","sourcesContent":["/**\n * Created by chen on 17-8-23.\n */\nimport logger from '../logger';\nimport PerimeterPointService from \"../services/perimeterPointService\";\nimport HostService from '../services/hostService';\n\nclass PerimeterPointController {\n    static async add_perimeterPoint(ctx){\n        const data = ctx.request.body;\n        logger.info(data);\n        if(!data) return ctx.error={ msg: '发送数据失败!' };\n        const isExit = await PerimeterPointService.isExist({realPosition:data.realPosition});\n        logger.info(isExit);\n        if(isExit) return ctx.error={ msg: '该实际距离的周界点已存在!' };\n\n\n        const result = PerimeterPointService.add_perimeterPoint(data);\n        let msg = '';\n        if(result) {\n            msg = '添加实际距离为'+ data.port +'的周界点成功';\n            return ctx.body = {msg:msg,data:data};\n        }else{\n            msg = '添加失败';\n            return ctx.error={msg: msg};\n        }\n\n\n    }\n\n    static async delete_perimeterPoint(ctx) {\n        const { id } = ctx.params;\n        logger.info(id);\n        const result = await PerimeterPointService.delete_perimeterPoint({id:id});\n        let msg = '';\n        if(result) {\n            msg = '删除周界点成功';\n            return ctx.body = {msg:msg,data:result};\n        }else{\n            msg = '删除周界点失败';\n            return ctx.error={msg: msg};\n        }\n\n\n    }\n\n    static async edit_perimeterPoint(ctx){\n        const data = ctx.request.body;\n        logger.info(data);\n        let _id = data._id;\n        delete data._id;\n        const result = await PerimeterPointService.edit_perimeterPoint({_id:_id},data);\n        if(result) ctx.body = {msg:'修改周界点成功',data:result};\n        return ctx.error={msg: '修改周界点失败!'};\n    }\n\n    static async find_perimeterPoint(ctx){\n        const { sort,range,filter } = ctx.query;\n        let sortObj = JSON.parse(sort);\n        let sortP = {};\n        if(sortObj && sortObj.length >=2){\n            if('ASC' ===sortObj[1]){\n                sortP[sortObj[0]] = 1\n            }else{\n                sortP[sortObj[0]] = -1\n            }\n        }\n\n        const total = await PerimeterPointService.getTotal();\n\n        const result = await PerimeterPointService.findAll(sortP);\n        const hosts = await HostService.findAll();\n\n        result.forEach(function (e) {\n            hosts.forEach(function (host) {\n                if(e._doc.hostId === host._doc.id) e._doc.host = host._doc;\n                return;\n            });\n        });\n        //const result = await PerimeterPointModel.find().exec();\n        if(result) return ctx.body = {msg:'查询周界点成功',data:result,total:total};\n        return ctx.error={msg: '没有找到周界点!'};\n    }\n    static async find_one(ctx){\n        const { id } = ctx.params;\n        const result = await PerimeterPointService.find_one(id);\n        const hosts = await HostService.findAll();\n\n        result.forEach(function (e) {\n            hosts.forEach(function (host) {\n                if(e._doc.hostId === host._doc.id) e._doc.host = host._doc;\n                return;\n            });\n        });\n        if(result) ctx.body = {msg:'查询周界点',data:result};\n        return ctx.error = {msg: '没有找到周界点!'};\n    }\n\n}\n\nexport default PerimeterPointController;"]}