{"version":3,"sources":["../../src/controllers/userController.js"],"names":["UserController","ctx","request","body","name","email","password","render","message","error","status","findOne","isexit","AdminUserModel","create","result","redirect","username","user","info","data","err","JSON","stringify"],"mappings":";;;;;;qjBAAA;;;AAGA;;;AACA;;;;AACA;;;;AAEA;;;;;;;;;;IAGMA,c;;;;;;;;AACF;;gGACyBC,G;;;;;;;oDACaA,IAAIC,OAAJ,CAAYC,I,EAAtCC,I,qBAAAA,I,EAAMC,K,qBAAAA,K,EAAOC,Q,qBAAAA,Q;;sCAClB,CAACF,IAAD,IAAO,CAACE,Q;;;;;iEAAiBL,IAAIM,MAAJ,CAAW,OAAX,EAAmB;AAC3CC,6CAAS,YADkC;AAE3CC,2CAAO,EAAEC,QAAO,GAAT;AAFoC,iCAAnB,C;;;;uCAIP,eAAUC,OAAV,CAAkB,EAACP,UAAD,EAAME,UAAU,kBAAIA,QAAJ,CAAhB,EAAlB,C;;;AAAfM,sC;;qCACHA,M;;;;;iEAAeX,IAAIM,MAAJ,CAAW,OAAX,EAAmB;AACjCC,6CAAS,SADwB;AAEjCC,2CAAO,EAAEC,QAAO,GAAT;AAF0B,iCAAnB,C;;;;uCAIGG,eAAeC,MAAf,CAAsB,EAACV,UAAD,EAAMC,YAAN,EAAYC,UAAU,kBAAIA,QAAJ,CAAtB,EAAtB,C;;;AAAfS,sC;;AACNd,oCAAIe,QAAJ,CAAa,GAAb;;;;;;;;;;;;;;;;;AAGJ;;;;;kGACoBf,G;;;;;;;qDACWA,IAAIC,OAAJ,CAAYC,I,EAA/BC,I,sBAAAA,I,EAAME,Q,sBAAAA,Q;;;uCAEO,eAAUK,OAAV,CAAkB,EAACM,UAASb,IAAV,EAAeE,UAAS,kBAAIA,QAAJ,CAAxB,EAAlB,C;;;AAAbY,oC;;AACJ,iDAAOC,IAAP,CAAYD,IAAZ;;qCACGA,I;;;;;kEACQjB,IAAIE,IAAJ,GAAS,EAACO,QAAO,SAAR,EAAkBU,MAAKF,IAAvB,E;;;;;;;;;;AAGpB,iDAAOT,KAAP,CAAa,MAAb;kEACOR,IAAIE,IAAJ,GAAS,EAACO,QAAO,QAAR,EAAiBW,iBAAjB,E;;;;;;;;;;;;;;;;;AAIxB;;;;;kGACqBpB,G;;;;;;;;uCAEI,eAAUU,OAAV,CAAkB,EAACM,UAAS,MAAV,EAAiBX,UAAS,kBAAI,MAAJ,CAA1B,EAAlB,C;;;AAAbY,oC;;AACJ,iDAAOC,IAAP,CAAYD,IAAZ;AACAjB,oCAAIE,IAAJ,GAAWmB,KAAKC,SAAL,CAAe,EAACb,QAAO,SAAR,EAAkBU,MAAKF,IAAvB,EAAf,CAAX;;;;;;;;AAEA,iDAAOT,KAAP,CAAa,KAAb;AACAR,oCAAIS,MAAJ,GAAa,GAAb,C,CAAkB;AAClBT,oCAAIE,IAAJ,GAAYmB,KAAKC,SAAL,CAAe,EAACb,QAAQ,QAAT,EAAf,CAAZ,C,CAA+C;;;;;;;;;;;;;;;;;;;;;;;;kBAM5CV,c","file":"userController.js","sourcesContent":["/**\n * Created by chen on 17-8-22.\n */\n// import mongoose from 'mongoose';\nimport md5 from 'md5';\nimport logger from '../logger';\n\nimport UserModel from '../models/user.model';\n\n\nclass UserController {\n    // 添加用户\n    static async create_user(ctx){\n        const { name, email, password } = ctx.request.body;\n        if(!name||!password) return ctx.render('error',{\n            message: '用户或密码不能为空!',\n            error: { status:400 }\n        });\n        const isexit = await UserModel.findOne({name,password: md5(password)});\n        if(isexit) return ctx.render('error',{\n            message: '该用户已存在!',\n            error: { status:400 }\n        });\n        const result = await AdminUserModel.create({name,email,password: md5(password)});\n        ctx.redirect('/');\n    }\n\n    // 用户登录\n    static async signIn(ctx) {\n        const { name, password } = ctx.request.body;\n        try {\n            let user = await UserModel.findOne({username:name,password:md5(password)});\n            logger.info(user);\n            if(user){\n                return ctx.body={status:\"success\",data:user}\n            }\n        } catch (err){\n            logger.error(\"登录失败\")\n            return ctx.body={status:\"failed\",err:err}\n        }\n    }\n\n    // 用户退出\n    static async signOut(ctx) {\n        try {\n            let user = await UserModel.findOne({username:'chen',password:md5('chen')});\n            logger.info(user);\n            ctx.body = JSON.stringify({status:\"success\",data:user});\n        }catch(err) {\n            logger.error('err', err)\n            ctx.status = 500  //状态 500\n            ctx.body =  JSON.stringify({status: 'failed'}) //返回错误状态\n        }\n        return ;\n    }\n}\n\nexport default UserController;"]}