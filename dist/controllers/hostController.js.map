{"version":3,"sources":["../../src/controllers/hostController.js"],"names":["HostsController","ctx","data","request","body","info","msg","isExist","port","isExit","add_host","result","error","id","params","delete_host","_id","edit_host","sort","query","sortObj","JSON","parse","sortP","length","findAll","range","filter","rangeObj","filterObj","pageStart","pageEnd","getTotal","total","pagination","pageSize","find_host","find_one"],"mappings":"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","file":"hostController.js","sourcesContent":["/**\n * Created by chen on 17-8-23.\n */\nimport logger from '../logger';\nimport HostService from '../services/hostService';\n\nclass HostsController {\n    static async add_host(ctx){\n        const data = ctx.request.body;\n        logger.info(data);\n        if(!data) return ctx.body={ msg: '发送数据失败!' };\n        const isExit = await HostService.isExist({port:data.port});\n        logger.info(isExit);\n        if(isExit) return ctx.body={ msg: '主机已存在!' };\n\n        const result = await HostService.add_host(data)\n\n        let msg = '';\n        if(result) {\n            msg = '添加主机'+ data.port +'成功';\n            return ctx.body = {msg:msg,data:data};\n        }else{\n            msg = '添加失败';\n            return ctx.error={msg: msg};\n        }\n\n\n\n    }\n\n    static async delete_host(ctx) {\n        const { id } = ctx.params;\n        logger.info(id);\n        const result = await HostService.delete_host({id:id});\n        let msg = '';\n        if(result) {\n            msg = '删除主机成功';\n            return ctx.body = {msg:msg,data:result};\n        }else{\n            msg = '删除主机失败';\n            return ctx.error={msg: msg};\n        }\n\n    }\n\n    static async edit_host(ctx){\n        const data = ctx.request.body;\n        logger.info(data);\n        let _id = data._id;\n        delete data._id;\n        const result = await HostService.edit_host({_id:_id},data);\n        if(result) return ctx.body = {msg:'修改主机成功',data:result};\n        return ctx.error={msg: '修改主机失败!'};\n    }\n\n    static async find_host_noPage(ctx){\n        const { sort} = ctx.query;\n        let sortObj = JSON.parse(sort);\n        let sortP = {};\n        if(sortObj && sortObj.length >=2){\n            if('ASC' ===sortObj[1]){\n                sortP[sortObj[0]] = 1\n            }else{\n                sortP[sortObj[0]] = -1\n            }\n        }\n        let result = await HostService.findAll(sortP);\n        if(result) return ctx.body = {msg:'查询主机',data:result};\n        return ctx.body={msg: '没有找到主机!'};\n    }\n\n    static async find_host(ctx){\n        const { sort,range,filter } = ctx.query;\n        let sortObj = JSON.parse(sort);\n        let rangeObj = JSON.parse(range);\n        let filterObj = JSON.parse(filter);\n        let sortP = {};\n        if(sortObj && sortObj.length >=2){\n            if('ASC' ===sortObj[1]){\n                sortP[sortObj[0]] = 1\n            }else{\n                sortP[sortObj[0]] = -1\n            }\n        }\n\n        let pageStart = 0,pageEnd = 0\n        if(rangeObj && rangeObj.length >=2){\n            pageStart = rangeObj[0];\n            pageEnd = rangeObj[1];\n        }\n\n        try{\n            const total = await HostService.getTotal();\n\n            const pagination = {};\n            pagination.pageStart = pageStart;\n            pagination.pageSize = pageEnd-pageStart+1;\n\n            let result = await HostService.find_host(filterObj,sortP,pagination);\n            if(result) return ctx.body = {msg:'查询主机',data:result,total:total};\n            return ctx.body={msg: '没有找到主机!'};\n        }catch(error){\n            logger.error(error);\n        }\n\n    }\n    static async find_one(ctx){\n        const { id } = ctx.params;\n        try{\n            const result = await HostService.find_one(id);\n            if(result) return ctx.body = {msg:'查询主机',data:result};\n            return ctx.body = {msg: '没有找到主机!'};\n        }catch(error){\n            logger.error(error);\n        }\n\n    }\n\n}\n\nexport default HostsController;"]}