{"version":3,"sources":["../../src/controllers/unitController.js"],"names":["require","Parser","logger","UnitController","ctx","data","request","body","info","error","msg","isExist","ip","add_unit","result","id","params","delete_unit","_id","edit_unit","query","sort","range","filter","sortObj","JSON","parse","rangeObj","filterObj","sortP","length","pageStart","pageEnd","getTotal","total","pagination","pageSize","find_unit","findAll","find_one"],"mappings":"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","file":"unitController.js","sourcesContent":["/**\r\n * Created by chen on 17-8-23.\r\n */\r\nconst {Parser}=require('../log/log');\r\nconst logger={};\r\nParser(logger,'UnitController.js');\r\n\r\nimport UnitService from '../services/unitService';\r\n\r\nclass UnitController {\r\n    static async add_unit(ctx){\r\n        const data = ctx.request.body;\r\n        logger.info(data);\r\n\r\n        if(!data) return ctx.error={ msg: '发送数据失败!' };\r\n        const isExist = await UnitService.isExist({ip:data.ip});\r\n        //const isExist = await UnitModel.findOne({ip:data.ip});\r\n\r\n        if(isExist) return ctx.error={ msg: 'ip为[' + data.ip + ']的单位ip已存在!' };\r\n\r\n        const result = await UnitService.add_unit(data);\r\n\r\n        let msg = '';\r\n        if(result) {\r\n            msg = '添加单位'+ data.ip +'成功';\r\n            return ctx.body = {msg:msg,data:data};\r\n        }else{\r\n            msg = '添加失败';\r\n            return ctx.error={msg: msg};\r\n        }\r\n\r\n    }\r\n\r\n    static async delete_unit(ctx) {\r\n        const { id } = ctx.params;\r\n        const result = await UnitService.delete_unit({id:id});\r\n        let msg = '';\r\n        if(result) {\r\n            msg = '删除单位成功';\r\n            return ctx.body = {msg:msg,data:result};\r\n        }else{\r\n            msg = '删除单位失败';\r\n            return ctx.error={msg: msg};\r\n        }\r\n\r\n    }\r\n\r\n    static async edit_unit(ctx){\r\n        const data = ctx.request.body;\r\n        logger.info(data);\r\n        let _id = data._id;\r\n        delete data._id;\r\n        const result = await UnitService.edit_unit({_id:_id},data);\r\n        if(result) return ctx.body = {msg:'修改单位成功',data:result};\r\n        return ctx.error={msg: '修改单位失败!'};\r\n    }\r\n\r\n    static async find_unit(ctx){\r\n        const { sort,range,filter } = ctx.query;\r\n        let sortObj = JSON.parse(sort);\r\n        let rangeObj = JSON.parse(range);\r\n        let filterObj = JSON.parse(filter);\r\n        let sortP = {};\r\n        if(sortObj && sortObj.length >=2){\r\n            if('ASC' ===sortObj[1]){\r\n                sortP[sortObj[0]] = 1\r\n            }else{\r\n                sortP[sortObj[0]] = -1\r\n            }\r\n        }\r\n\r\n        let pageStart = 0,pageEnd = 0;\r\n        if(rangeObj && rangeObj.length >=2){\r\n            pageStart = rangeObj[0];\r\n            pageEnd = rangeObj[1];\r\n        }\r\n\r\n        const total = await UnitService.getTotal();\r\n\r\n        const pagination = {};\r\n        pagination.pageStart = pageStart;\r\n        pagination.pageSize = pageEnd-pageStart+1;\r\n\r\n        let result = await UnitService.find_unit(filterObj,sortP,pagination);\r\n        if(result) return ctx.body = {msg:'查询单位',data:result,total:total};\r\n        return ctx.error={msg: '没有找到单位!'};\r\n    }\r\n\r\n    static async find_unit_noPage(ctx){\r\n        const { sort} = ctx.query;\r\n        let sortObj = JSON.parse(sort);\r\n        let sortP = {};\r\n        if(sortObj && sortObj.length >=2){\r\n            if('ASC' ===sortObj[1]){\r\n                sortP[sortObj[0]] = 1\r\n            }else{\r\n                sortP[sortObj[0]] = -1\r\n            }\r\n        }\r\n        let result = await UnitService.findAll(sortP);\r\n        if(result) return ctx.body = {msg:'查询单位',data:result};\r\n        return ctx.error={msg: '没有找到单位!'};\r\n    }\r\n\r\n    static async find_one(ctx){\r\n        const { id } = ctx.params;\r\n        const result = await UnitService.find_one(id);\r\n        if(result) ctx.body = {msg:'查询单位',data:result};\r\n        return ctx.error = {msg: '没有找到单位!'};\r\n    }\r\n\r\n}\r\n\r\nexport default UnitController;"]}