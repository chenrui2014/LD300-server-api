{"version":3,"sources":["../../src/controllers/camerasController.js"],"names":["require","Parser","logger","CamerasController","ctx","data","request","body","info","error","msg","add_cameras","result","ip","id","params","delete_cameras","_id","edit_cameras","query","sort","range","filter","sortObj","JSON","parse","rangeObj","filterObj","obj","Array","isArray","$in","sortP","length","pageStart","pageEnd","getTotal","total","pagination","pageSize","find_cameras","find_cameraType","camTypes","forEach","e","ct","_doc","type","typeCode","isDemo","find_one","camera_id","preset"],"mappings":"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","file":"camerasController.js","sourcesContent":["/**\r\n * Created by chen on 17-8-23.\r\n */\r\nconst {Parser}=require('../log/log');\r\nconst logger={};\r\nParser(logger,'CamerasController.js');\r\nimport CamerasService from '../services/camerasService';\r\nimport CameraTypeService from \"../services/cameraTypeService\";\r\n\r\nclass CamerasController {\r\n    static async add_cameras(ctx){\r\n        const data = ctx.request.body;\r\n        logger.info(data);\r\n\r\n        if(!data) return ctx.error={ msg: '发送数据失败!' };\r\n        //const isExist = await CamerasService.isExist({ip:data.ip})\r\n        //const isExist = await CamerasModel.findOne({ip:data.ip});\r\n\r\n        //if(isExist) return ctx.error={ msg: 'ip为[' + data.ip + ']的摄像头ip已存在!' };\r\n\r\n        const result = await CamerasService.add_cameras(data)\r\n\r\n        let msg = '';\r\n        if(result) {\r\n            msg = '添加摄像头'+ data.ip +'成功';\r\n            return ctx.body = {msg:msg,data:data};\r\n        }else{\r\n            msg = '添加失败';\r\n            return ctx.error={msg: msg};\r\n        }\r\n\r\n    }\r\n\r\n    static async delete_cameras(ctx) {\r\n        const { id } = ctx.params;\r\n        const result = await CamerasService.delete_cameras({id:id})\r\n        let msg = '';\r\n        if(result) {\r\n            msg = '删除摄像头成功';\r\n            return ctx.body = {msg:msg,data:result};\r\n        }else{\r\n            msg = '删除摄像头失败';\r\n            return ctx.error={msg: msg};\r\n        }\r\n\r\n    }\r\n\r\n    static async edit_cameras(ctx){\r\n        const data = ctx.request.body;\r\n        logger.info(data);\r\n        let _id = data._id;\r\n        delete data._id;\r\n        const result = await CamerasService.edit_cameras({_id:_id},data);\r\n        if(result) return ctx.body = {msg:'修改摄像头成功',data:result};\r\n        return ctx.error={msg: '修改摄像头失败!'};\r\n    }\r\n\r\n    static async find_cameras(ctx){\r\n        const { sort,range,filter } = ctx.query;\r\n        let sortObj = null;\r\n        if(sort){\r\n            sortObj = JSON.parse(sort);\r\n        }\r\n\r\n        let rangeObj = null;\r\n        if(range){\r\n            rangeObj = JSON.parse(range);\r\n        }\r\n\r\n        let filterObj = null;\r\n        if(filter && \"{}\" !==filter){\r\n            let obj = JSON.parse(filter);\r\n            if(obj && Array.isArray(obj.id)){\r\n                filterObj = {id:{$in:obj.id}};\r\n            }else{\r\n                filterObj = obj;\r\n            }\r\n        }\r\n\r\n        let sortP = {};\r\n        if(sortObj && sortObj.length >=2){\r\n            if('ASC' ===sortObj[1]){\r\n                sortP[sortObj[0]] = 1\r\n            }else{\r\n                sortP[sortObj[0]] = -1\r\n            }\r\n        }\r\n\r\n        let pageStart = 0,pageEnd = 0\r\n        if(rangeObj && rangeObj.length >=2){\r\n            pageStart = rangeObj[0];\r\n            pageEnd = rangeObj[1];\r\n        }\r\n\r\n        const total = await CamerasService.getTotal();\r\n\r\n        const pagination = {};\r\n        pagination.pageStart = pageStart;\r\n        pagination.pageSize = pageEnd-pageStart+1;\r\n        let result = null;\r\n        if(sortP){\r\n            if(rangeObj){\r\n                let pageStart = 0,pageEnd = 0\r\n                if(rangeObj && rangeObj.length >=2){\r\n                    pageStart = rangeObj[0];\r\n                    pageEnd = rangeObj[1];\r\n                }\r\n                const pagination = {};\r\n                pagination.pageStart = pageStart;\r\n                pagination.pageSize = pageEnd-pageStart+25;\r\n                result = await CamerasService.find_cameras(filterObj,sortP,pagination);\r\n            }else{\r\n                result = await CamerasService.find_cameras(filterObj,sortP);\r\n            }\r\n        }else{\r\n            if(rangeObj){\r\n                let pageStart = 0,pageEnd = 0\r\n                if(rangeObj && rangeObj.length >=2){\r\n                    pageStart = rangeObj[0];\r\n                    pageEnd = rangeObj[1];\r\n                }\r\n                const pagination = {};\r\n                pagination.pageStart = pageStart;\r\n                pagination.pageSize = pageEnd-pageStart+25;\r\n                result = await CamerasService.find_cameras(filterObj,null,pagination);\r\n            }else{\r\n                result = await CamerasService.find_cameras(filterObj);\r\n            }\r\n        }\r\n        // let result = await CamerasService.find_cameras(filterObj,sortP,pagination);\r\n        if(result) return ctx.body = {msg:'查询摄像头',data:result,total:total};\r\n        return ctx.error={msg: '没有找到摄像头!'};\r\n    }\r\n\r\n    static async find_cameras_noPage(ctx){\r\n        const { sort} = ctx.query;\r\n        let sortObj = JSON.parse(sort);\r\n        let sortP = {};\r\n        if(sortObj && sortObj.length >=2){\r\n            if('ASC' ===sortObj[1]){\r\n                sortP[sortObj[0]] = 1\r\n            }else{\r\n                sortP[sortObj[0]] = -1\r\n            }\r\n        }\r\n        let result = await CamerasService.find_cameras(null,sortP,null);\r\n        let camTypes = await CameraTypeService.find_cameraType(null,null,null);\r\n        result.forEach(function (e) {\r\n            camTypes.forEach(function (ct) {\r\n                if(e._doc.type === ct._doc.id) {\r\n                    if(ct._doc.typeCode === '002'){\r\n                        e._doc.isDemo = true;\r\n                    }else{\r\n                        e._doc.isDemo = false;\r\n                    }\r\n                }\r\n            });\r\n        });\r\n        if(result) return ctx.body = {msg:'查询摄像头',data:result};\r\n        return ctx.error={msg: '没有找到摄像头!'};\r\n    }\r\n\r\n    static async find_one(ctx){\r\n        const { id } = ctx.params;\r\n        const result = await CamerasService.find_one(id);\r\n        if(result) ctx.body = {msg:'查询摄像头',data:result};\r\n        return ctx.error = {msg: '没有找到摄像头!'};\r\n    }\r\n\r\n    static async find_preset(ctx){\r\n        const {camera_id} = ctx.params;\r\n        const result = await CamerasService.find_one(id);\r\n        if(result) return ctx.body = {msg:'查询摄像头',data:result.preset};\r\n        return ctx.error={msg: '该摄像头没有预置点!'};\r\n    }\r\n\r\n}\r\n\r\nexport default CamerasController;"]}