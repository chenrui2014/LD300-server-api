{"version":3,"sources":["../../src/controllers/cameraTypeController.js"],"names":["require","Parser","logger","CameraTypeController","ctx","data","request","body","info","error","msg","isExist","typeCode","add_cameraType","result","id","params","delete_cameraType","_id","edit_cameraType","query","sort","range","filter","sortObj","JSON","parse","rangeObj","filterObj","obj","Array","isArray","$in","sortP","length","pageStart","pageEnd","getTotal","total","pagination","pageSize","find_cameraType","find_one"],"mappings":";;;;;;;;;;;;AAMA;;;;;;;;;;AANA;;;eAGeA,QAAQ,YAAR,C;IAARC,M,YAAAA,M;;AACP,IAAMC,SAAO,EAAb;AACAD,OAAOC,MAAP,EAAc,yBAAd;;IAGMC,oB;;;;;;;;mGAC0BC,G;;;;;;AAClBC,oC,GAAOD,IAAIE,OAAJ,CAAYC,I;;AACzBL,uCAAOM,IAAP,CAAYH,IAAZ;;oCAEIA,I;;;;;iEAAaD,IAAIK,KAAJ,GAAU,EAAEC,KAAK,SAAP,E;;;;uCACL,4BAAkBC,OAAlB,CAA0B,EAACC,UAASP,KAAKO,QAAf,EAA1B,C;;;AAAhBD,uC;;qCAGHA,O;;;;;iEAAgBP,IAAIK,KAAJ,GAAU,EAAEC,KAAK,WAAWL,KAAKO,QAAhB,GAA2B,aAAlC,E;;;;uCAER,4BAAkBC,cAAlB,CAAiCR,IAAjC,C;;;AAAfS,sC;AAEFJ,mC,GAAM,E;;qCACPI,M;;;;;AACCJ,sCAAM,YAAWL,KAAKO,QAAhB,GAA0B,IAAhC;iEACOR,IAAIG,IAAJ,GAAW,EAACG,KAAIA,GAAL,EAASL,MAAKA,IAAd,E;;;AAElBK,sCAAM,MAAN;iEACON,IAAIK,KAAJ,GAAU,EAACC,KAAKA,GAAN,E;;;;;;;;;;;;;;;;;;;qGAKMN,G;;;;;;AACnBW,kC,GAAOX,IAAIY,M,CAAXD,E;;uCACa,4BAAkBE,iBAAlB,CAAoC,EAACF,IAAGA,EAAJ,EAApC,C;;;AAAfD,sC;AACFJ,mC,GAAM,E;;qCACPI,M;;;;;AACCJ,sCAAM,WAAN;kEACON,IAAIG,IAAJ,GAAW,EAACG,KAAIA,GAAL,EAASL,MAAKS,MAAd,E;;;AAElBJ,sCAAM,WAAN;kEACON,IAAIK,KAAJ,GAAU,EAACC,KAAKA,GAAN,E;;;;;;;;;;;;;;;;;;;qGAKIN,G;;;;;;;AACnBC,oC,GAAOD,IAAIE,OAAJ,CAAYC,I;;AACzBL,uCAAOM,IAAP,CAAYH,IAAZ;AACIa,mC,GAAMb,KAAKa,G;;AACf,uCAAOb,KAAKa,GAAZ;;uCACqB,4BAAkBC,eAAlB,CAAkC,EAACD,KAAIA,GAAL,EAAlC,EAA4Cb,IAA5C,C;;;AAAfS,sC;;qCACHA,M;;;;;kEAAeV,IAAIG,IAAJ,GAAW,EAACG,KAAI,WAAL,EAAiBL,MAAKS,MAAtB,E;;;kEACtBV,IAAIK,KAAJ,GAAU,EAACC,KAAK,YAAN,E;;;;;;;;;;;;;;;;;;;qGAGQN,G;;;;;;;6CACKA,IAAIgB,K,EAA1BC,I,cAAAA,I,EAAKC,K,cAAAA,K,EAAMC,M,cAAAA,M;AACfC,uC,GAAU,I;;AACd,oCAAGH,IAAH,EAAQ;AACJG,8CAAUC,KAAKC,KAAL,CAAWL,IAAX,CAAV;AACH;;AAEGM,wC,GAAW,I;;AACf,oCAAGL,KAAH,EAAS;AACLK,+CAAWF,KAAKC,KAAL,CAAWJ,KAAX,CAAX;AACH;;AAEGM,yC,GAAY,I;;AAChB,oCAAGL,UAAU,SAAQA,MAArB,EAA4B;AACpBM,uCADoB,GACdJ,KAAKC,KAAL,CAAWH,MAAX,CADc;;AAExB,wCAAGM,OAAOC,MAAMC,OAAN,CAAcF,IAAId,EAAlB,CAAV,EAAgC;AAC5Ba,oDAAY,EAACb,IAAG,EAACiB,KAAIH,IAAId,EAAT,EAAJ,EAAZ;AACH,qCAFD,MAEK;AACDa,oDAAYC,GAAZ;AACH;AACJ;AACGI,qC,GAAQ,E;;AACZ,oCAAGT,WAAWA,QAAQU,MAAR,IAAiB,CAA/B,EAAiC;AAC7B,wCAAG,UAASV,QAAQ,CAAR,CAAZ,EAAuB;AACnBS,8CAAMT,QAAQ,CAAR,CAAN,IAAoB,CAApB;AACH,qCAFD,MAEK;AACDS,8CAAMT,QAAQ,CAAR,CAAN,IAAoB,CAAC,CAArB;AACH;AACJ;;AAEGW,yC,GAAY,C,EAAEC,O,GAAU,C;;AAC5B,oCAAGT,YAAYA,SAASO,MAAT,IAAkB,CAAjC,EAAmC;AAC/BC,gDAAYR,SAAS,CAAT,CAAZ;AACAS,8CAAUT,SAAS,CAAT,CAAV;AACH;;;uCAEmB,4BAAkBU,QAAlB,E;;;AAAdC,qC;AAEAC,0C,GAAa,E;;AACnBA,2CAAWJ,SAAX,GAAuBA,SAAvB;AACAI,2CAAWC,QAAX,GAAsBJ,UAAQD,SAAR,GAAkB,CAAxC;AACIrB,sC,GAAS,I;;qCACVmB,K;;;;;qCACIN,Q;;;;;AACKQ,0C,GAAY,C,EAAEC,Q,GAAU,C;;AAC5B,oCAAGT,YAAYA,SAASO,MAAT,IAAkB,CAAjC,EAAmC;AAC/BC,iDAAYR,SAAS,CAAT,CAAZ;AACAS,+CAAUT,SAAS,CAAT,CAAV;AACH;AACKY,2C,GAAa,E;;AACnBA,4CAAWJ,SAAX,GAAuBA,UAAvB;AACAI,4CAAWC,QAAX,GAAsBJ,WAAQD,UAAR,GAAkB,EAAxC;;uCACe,4BAAkBM,eAAlB,CAAkCb,SAAlC,EAA4CK,KAA5C,EAAkDM,WAAlD,C;;;AAAfzB,sC;;;;;;uCAEe,4BAAkB2B,eAAlB,CAAkCb,SAAlC,EAA4CK,KAA5C,C;;;AAAfnB,sC;;;;;;;qCAGDa,Q;;;;;AACKQ,2C,GAAY,C,EAAEC,S,GAAU,C;;AAC5B,oCAAGT,YAAYA,SAASO,MAAT,IAAkB,CAAjC,EAAmC;AAC/BC,kDAAYR,SAAS,CAAT,CAAZ;AACAS,gDAAUT,SAAS,CAAT,CAAV;AACH;AACKY,4C,GAAa,E;;AACnBA,6CAAWJ,SAAX,GAAuBA,WAAvB;AACAI,6CAAWC,QAAX,GAAsBJ,YAAQD,WAAR,GAAkB,EAAxC;;uCACe,4BAAkBM,eAAlB,CAAkCb,SAAlC,EAA4C,IAA5C,EAAiDW,YAAjD,C;;;AAAfzB,sC;;;;;;uCAEe,4BAAkB2B,eAAlB,CAAkCb,SAAlC,C;;;AAAfd,sC;;;qCAILA,M;;;;;kEAAeV,IAAIG,IAAJ,GAAW,EAACG,KAAI,SAAL,EAAeL,MAAKS,MAApB,EAA2BwB,OAAMA,KAAjC,E;;;kEACtBlC,IAAIK,KAAJ,GAAU,EAACC,KAAK,YAAN,E;;;;;;;;;;;;;;;;;;;qGAGeN,G;;;;;;AACxBiB,oC,GAAQjB,IAAIgB,K,CAAZC,I;AACJG,uC,GAAUC,KAAKC,KAAL,CAAWL,IAAX,C;AACVY,qC,GAAQ,E;;AACZ,oCAAGT,WAAWA,QAAQU,MAAR,IAAiB,CAA/B,EAAiC;AAC7B,wCAAG,UAASV,QAAQ,CAAR,CAAZ,EAAuB;AACnBS,8CAAMT,QAAQ,CAAR,CAAN,IAAoB,CAApB;AACH,qCAFD,MAEK;AACDS,8CAAMT,QAAQ,CAAR,CAAN,IAAoB,CAAC,CAArB;AACH;AACJ;;uCACkB,4BAAkBiB,eAAlB,CAAkC,IAAlC,EAAuCR,KAAvC,EAA6C,IAA7C,C;;;AAAfnB,sC;;qCACDA,M;;;;;kEAAeV,IAAIG,IAAJ,GAAW,EAACG,KAAI,SAAL,EAAeL,MAAKS,MAApB,E;;;kEACtBV,IAAIK,KAAJ,GAAU,EAACC,KAAK,YAAN,E;;;;;;;;;;;;;;;;;;;qGAGCN,G;;;;;;AACVW,kC,GAAOX,IAAIY,M,CAAXD,E;;uCACa,4BAAkB2B,QAAlB,CAA2B3B,EAA3B,C;;;AAAfD,sC;;AACN,oCAAGA,MAAH,EAAWV,IAAIG,IAAJ,GAAW,EAACG,KAAI,SAAL,EAAeL,MAAKS,MAApB,EAAX;kEACJV,IAAIK,KAAJ,GAAY,EAACC,KAAK,YAAN,E;;;;;;;;;;;;;;;;;;;;;kBAKZP,oB","file":"cameraTypeController.js","sourcesContent":["/**\r\n * Created by chen on 17-8-23.\r\n */\r\nconst {Parser}=require('../log/log');\r\nconst logger={};\r\nParser(logger,'CameraTypeController.js');\r\nimport CameraTypeService from '../services/cameraTypeService';\r\n\r\nclass CameraTypeController {\r\n    static async add_cameraType(ctx){\r\n        const data = ctx.request.body;\r\n        logger.info(data);\r\n\r\n        if(!data) return ctx.error={ msg: '发送数据失败!' };\r\n        const isExist = await CameraTypeService.isExist({typeCode:data.typeCode});\r\n        //const isExist = await CameraTypeModel.findOne({ip:data.ip});\r\n\r\n        if(isExist) return ctx.error={ msg: '类型编码为[' + data.typeCode + ']的摄像头类型已存在!' };\r\n\r\n        const result = await CameraTypeService.add_cameraType(data);\r\n\r\n        let msg = '';\r\n        if(result) {\r\n            msg = '添加摄像头类型'+ data.typeCode +'成功';\r\n            return ctx.body = {msg:msg,data:data};\r\n        }else{\r\n            msg = '添加失败';\r\n            return ctx.error={msg: msg};\r\n        }\r\n\r\n    }\r\n\r\n    static async delete_cameraType(ctx) {\r\n        const { id } = ctx.params;\r\n        const result = await CameraTypeService.delete_cameraType({id:id});\r\n        let msg = '';\r\n        if(result) {\r\n            msg = '删除摄像头类型成功';\r\n            return ctx.body = {msg:msg,data:result};\r\n        }else{\r\n            msg = '删除摄像头类型失败';\r\n            return ctx.error={msg: msg};\r\n        }\r\n\r\n    }\r\n\r\n    static async edit_cameraType(ctx){\r\n        const data = ctx.request.body;\r\n        logger.info(data);\r\n        let _id = data._id;\r\n        delete data._id;\r\n        const result = await CameraTypeService.edit_cameraType({_id:_id},data);\r\n        if(result) return ctx.body = {msg:'修改摄像头类型成功',data:result};\r\n        return ctx.error={msg: '修改摄像头类型失败!'};\r\n    }\r\n\r\n    static async find_cameraType(ctx){\r\n        const { sort,range,filter } = ctx.query;\r\n        let sortObj = null;\r\n        if(sort){\r\n            sortObj = JSON.parse(sort);\r\n        }\r\n\r\n        let rangeObj = null;\r\n        if(range){\r\n            rangeObj = JSON.parse(range);\r\n        }\r\n\r\n        let filterObj = null;\r\n        if(filter && \"{}\" !==filter){\r\n            let obj = JSON.parse(filter);\r\n            if(obj && Array.isArray(obj.id)){\r\n                filterObj = {id:{$in:obj.id}};\r\n            }else{\r\n                filterObj = obj;\r\n            }\r\n        }\r\n        let sortP = {};\r\n        if(sortObj && sortObj.length >=2){\r\n            if('ASC' ===sortObj[1]){\r\n                sortP[sortObj[0]] = 1\r\n            }else{\r\n                sortP[sortObj[0]] = -1\r\n            }\r\n        }\r\n\r\n        let pageStart = 0,pageEnd = 0;\r\n        if(rangeObj && rangeObj.length >=2){\r\n            pageStart = rangeObj[0];\r\n            pageEnd = rangeObj[1];\r\n        }\r\n\r\n        const total = await CameraTypeService.getTotal();\r\n\r\n        const pagination = {};\r\n        pagination.pageStart = pageStart;\r\n        pagination.pageSize = pageEnd-pageStart+1;\r\n        let result = null;\r\n        if(sortP){\r\n            if(rangeObj){\r\n                let pageStart = 0,pageEnd = 0;\r\n                if(rangeObj && rangeObj.length >=2){\r\n                    pageStart = rangeObj[0];\r\n                    pageEnd = rangeObj[1];\r\n                }\r\n                const pagination = {};\r\n                pagination.pageStart = pageStart;\r\n                pagination.pageSize = pageEnd-pageStart+25;\r\n                result = await CameraTypeService.find_cameraType(filterObj,sortP,pagination);\r\n            }else{\r\n                result = await CameraTypeService.find_cameraType(filterObj,sortP);\r\n            }\r\n        }else{\r\n            if(rangeObj){\r\n                let pageStart = 0,pageEnd = 0;\r\n                if(rangeObj && rangeObj.length >=2){\r\n                    pageStart = rangeObj[0];\r\n                    pageEnd = rangeObj[1];\r\n                }\r\n                const pagination = {};\r\n                pagination.pageStart = pageStart;\r\n                pagination.pageSize = pageEnd-pageStart+25;\r\n                result = await CameraTypeService.find_cameraType(filterObj,null,pagination);\r\n            }else{\r\n                result = await CameraTypeService.find_cameraType(filterObj);\r\n            }\r\n        }\r\n        // let result = await CameraTypeService.find_cameraType(filterObj,sortP,pagination);\r\n        if(result) return ctx.body = {msg:'查询摄像头类型',data:result,total:total};\r\n        return ctx.error={msg: '没有找到摄像头类型!'};\r\n    }\r\n\r\n    static async find_cameraType_noPage(ctx){\r\n        const { sort} = ctx.query;\r\n        let sortObj = JSON.parse(sort);\r\n        let sortP = {};\r\n        if(sortObj && sortObj.length >=2){\r\n            if('ASC' ===sortObj[1]){\r\n                sortP[sortObj[0]] = 1\r\n            }else{\r\n                sortP[sortObj[0]] = -1\r\n            }\r\n        }\r\n        let result = await CameraTypeService.find_cameraType(null,sortP,null);\r\n        if(result) return ctx.body = {msg:'查询摄像头类型',data:result};\r\n        return ctx.error={msg: '没有找到摄像头类型!'};\r\n    }\r\n\r\n    static async find_one(ctx){\r\n        const { id } = ctx.params;\r\n        const result = await CameraTypeService.find_one(id);\r\n        if(result) ctx.body = {msg:'查询摄像头类型',data:result};\r\n        return ctx.error = {msg: '没有找到摄像头类型!'};\r\n    }\r\n\r\n}\r\n\r\nexport default CameraTypeController;"]}