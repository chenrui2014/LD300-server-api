{"version":3,"sources":["../../src/controllers/eventController.js"],"names":["require","Parser","logger","EventController","ctx","data","request","body","info","error","msg","isExist","typeCode","add_event","result","id","params","delete_event","_id","edit_event","query","sort","range","filter","sortObj","JSON","parse","rangeObj","filterObj","obj","Array","isArray","$in","sortP","length","pageStart","pageEnd","getTotal","total","pagination","pageSize","find_event","findAll","port","hosts","map","item","i","forEach","host","hid","_doc","eventId","videos","event","video","push","find_one"],"mappings":";;;;;;;;;;;;AAMA;;;;AACA;;;;;;;;;;AAPA;;;eAGeA,QAAQ,YAAR,C;IAARC,M,YAAAA,M;;AACP,IAAMC,SAAO,EAAb;AACAD,OAAOC,MAAP,EAAc,oBAAd;;AAGA;;IAEMC,e;;;;;;;;mGACqBC,G;;;;;;AACbC,oC,GAAOD,IAAIE,OAAJ,CAAYC,I;;AACzBL,uCAAOM,IAAP,CAAYH,IAAZ;;oCAEIA,I;;;;;iEAAaD,IAAIK,KAAJ,GAAU,EAAEC,KAAK,SAAP,E;;;;uCACL,uBAAaC,OAAb,CAAqB,EAACC,UAASP,KAAKO,QAAf,EAArB,C;;;AAAhBD,uC;;qCAGHA,O;;;;;iEAAgBP,IAAIK,KAAJ,GAAU,EAAEC,KAAK,WAAWL,KAAKO,QAAhB,GAA2B,UAAlC,E;;;;uCAER,uBAAaC,SAAb,CAAuBR,IAAvB,C;;;AAAfS,sC;AAEFJ,mC,GAAM,E;;qCACPI,M;;;;;AACCJ,sCAAM,SAAQL,KAAKO,QAAb,GAAuB,IAA7B;iEACOR,IAAIG,IAAJ,GAAW,EAACG,KAAIA,GAAL,EAASL,MAAKA,IAAd,E;;;AAElBK,sCAAM,MAAN;iEACON,IAAIK,KAAJ,GAAU,EAACC,KAAKA,GAAN,E;;;;;;;;;;;;;;;;;;;qGAKCN,G;;;;;;AACdW,kC,GAAOX,IAAIY,M,CAAXD,E;;uCACa,uBAAaE,YAAb,CAA0B,EAACF,IAAGA,EAAJ,EAA1B,C;;;AAAfD,sC;AACFJ,mC,GAAM,E;;qCACPI,M;;;;;AACCJ,sCAAM,QAAN;kEACON,IAAIG,IAAJ,GAAW,EAACG,KAAIA,GAAL,EAASL,MAAKS,MAAd,E;;;AAElBJ,sCAAM,QAAN;kEACON,IAAIK,KAAJ,GAAU,EAACC,KAAKA,GAAN,E;;;;;;;;;;;;;;;;;;;qGAKDN,G;;;;;;;AACdC,oC,GAAOD,IAAIE,OAAJ,CAAYC,I;;AACzBL,uCAAOM,IAAP,CAAYH,IAAZ;AACIa,mC,GAAMb,KAAKa,G;;AACf,uCAAOb,KAAKa,GAAZ;;uCACqB,uBAAaC,UAAb,CAAwB,EAACD,KAAIA,GAAL,EAAxB,EAAkCb,IAAlC,C;;;AAAfS,sC;;qCACHA,M;;;;;kEAAeV,IAAIG,IAAJ,GAAW,EAACG,KAAI,QAAL,EAAcL,MAAKS,MAAnB,E;;;kEACtBV,IAAIK,KAAJ,GAAU,EAACC,KAAK,SAAN,E;;;;;;;;;;;;;;;;;;;qGAGGN,G;;;;;;;6CACUA,IAAIgB,K,EAA1BC,I,cAAAA,I,EAAKC,K,cAAAA,K,EAAMC,M,cAAAA,M;AACfC,uC,GAAU,I;;AACd,oCAAGH,IAAH,EAAQ;AACJG,8CAAUC,KAAKC,KAAL,CAAWL,IAAX,CAAV;AACH;;AAEGM,wC,GAAW,I;;AACf,oCAAGL,KAAH,EAAS;AACLK,+CAAWF,KAAKC,KAAL,CAAWJ,KAAX,CAAX;AACH;;AAEGM,yC,GAAY,I;;AAChB,oCAAGL,UAAU,SAAQA,MAArB,EAA4B;AACpBM,uCADoB,GACdJ,KAAKC,KAAL,CAAWH,MAAX,CADc;;AAExB,wCAAGM,OAAOC,MAAMC,OAAN,CAAcF,IAAId,EAAlB,CAAV,EAAgC;AAC5Ba,oDAAY,EAACb,IAAG,EAACiB,KAAIH,IAAId,EAAT,EAAJ,EAAZ;AACH,qCAFD,MAEK;AACDa,oDAAYC,GAAZ;AACH;AACJ;AACGI,qC,GAAQ,E;;AACZ,oCAAGT,WAAWA,QAAQU,MAAR,IAAiB,CAA/B,EAAiC;AAC7B,wCAAG,UAASV,QAAQ,CAAR,CAAZ,EAAuB;AACnBS,8CAAMT,QAAQ,CAAR,CAAN,IAAoB,CAApB;AACH,qCAFD,MAEK;AACDS,8CAAMT,QAAQ,CAAR,CAAN,IAAoB,CAAC,CAArB;AACH;AACJ;;AAEGW,yC,GAAY,C,EAAEC,O,GAAU,C;;AAC5B,oCAAGT,YAAYA,SAASO,MAAT,IAAkB,CAAjC,EAAmC;AAC/BC,gDAAYR,SAAS,CAAT,CAAZ;AACAS,8CAAUT,SAAS,CAAT,CAAV;AACH;;;uCAEmB,uBAAaU,QAAb,E;;;AAAdC,qC;AAEAC,0C,GAAa,E;;AACnBA,2CAAWJ,SAAX,GAAuBA,SAAvB;AACAI,2CAAWC,QAAX,GAAsBJ,UAAQD,SAAR,GAAkB,CAAxC;AACIrB,sC,GAAS,I;;qCACVmB,K;;;;;qCACIN,Q;;;;;AACKQ,0C,GAAY,C,EAAEC,Q,GAAU,C;;AAC5B,oCAAGT,YAAYA,SAASO,MAAT,IAAkB,CAAjC,EAAmC;AAC/BC,iDAAYR,SAAS,CAAT,CAAZ;AACAS,+CAAUT,SAAS,CAAT,CAAV;AACH;AACKY,2C,GAAa,E;;AACnBA,4CAAWJ,SAAX,GAAuBA,UAAvB;AACAI,4CAAWC,QAAX,GAAsBJ,WAAQD,UAAR,GAAkB,EAAxC;;uCACe,uBAAaM,UAAb,CAAwBb,SAAxB,EAAkCK,KAAlC,EAAwCM,WAAxC,C;;;AAAfzB,sC;;;;;;uCAEe,uBAAa2B,UAAb,CAAwBb,SAAxB,EAAkCK,KAAlC,C;;;AAAfnB,sC;;;;;;;qCAGDa,Q;;;;;AACKQ,2C,GAAY,C,EAAEC,S,GAAU,C;;AAC5B,oCAAGT,YAAYA,SAASO,MAAT,IAAkB,CAAjC,EAAmC;AAC/BC,kDAAYR,SAAS,CAAT,CAAZ;AACAS,gDAAUT,SAAS,CAAT,CAAV;AACH;AACKY,4C,GAAa,E;;AACnBA,6CAAWJ,SAAX,GAAuBA,WAAvB;AACAI,6CAAWC,QAAX,GAAsBJ,YAAQD,WAAR,GAAkB,EAAxC;;uCACe,uBAAaM,UAAb,CAAwBb,SAAxB,EAAkC,IAAlC,EAAuCW,YAAvC,C;;;AAAfzB,sC;;;;;;uCAEe,uBAAa2B,UAAb,CAAwBb,SAAxB,C;;;AAAfd,sC;;;;uCAIY,sBAAa4B,OAAb,CAAqB,EAACC,MAAK,CAAN,EAArB,C;;;AAAdC,qC;;AACN;AACA,oCAAG9B,UAAUA,OAAOoB,MAAP,GAAgB,CAA7B,EAA+B;AAC3BpB,2CAAO+B,GAAP,CAAW,UAACC,IAAD,EAAMC,CAAN,EAAW;;AAElB,4CAAGH,SAASA,MAAMV,MAAN,GAAe,CAA3B,EAA6B;AACzBU,kDAAMI,OAAN,CAAc,UAAUC,IAAV,CAAc,cAAd,EAA8B;AACxC,oDAAGH,KAAKI,GAAL,KAAaD,KAAKlC,EAArB,EAAwB;AACpB+B,yDAAKK,IAAL,CAAUR,IAAV,GAAiBM,KAAKN,IAAtB;AACH;AACJ,6CAJD;AAKH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,+CAAOG,IAAP;AACH,qCAlBD;AAmBH;AACD;;qCACGhC,M;;;;;kEAAeV,IAAIG,IAAJ,GAAW,EAACG,KAAI,MAAL,EAAYL,MAAKS,MAAjB,EAAwBwB,OAAMA,KAA9B,E;;;kEACtBlC,IAAIK,KAAJ,GAAU,EAACC,KAAK,SAAN,E;;;;;;;;;;;;;;;;;;;qGAGQN,G;;;;;;AAClBmB,sC,GAAWnB,IAAIgB,K,CAAfG,M;AACHK,yC,GAAY,I;;AAChB,oCAAGL,UAAU,SAAQA,MAArB,EAA4B;AACpBM,uCADoB,GACdJ,KAAKC,KAAL,CAAWH,MAAX,CADc;;AAExB,wCAAGM,OAAOC,MAAMC,OAAN,CAAcF,IAAId,EAAlB,CAAV,EAAgC;AAC5Ba,oDAAY,EAACb,IAAG,EAACiB,KAAIH,IAAId,EAAT,EAAJ,EAAZ;AACH,qCAFD,MAEK;AACDa,oDAAYC,GAAZ;AACH;AACJ;;;uCAEkB,uBAAaY,UAAb,CAAwB,EAAC1B,IAAGa,UAAUwB,OAAd,EAAxB,C;;;AAAftC,sC;AACAuC,sC,GAAO,E;;AACX,oCAAGvC,UAAUA,OAAOoB,MAAP,GAAgB,CAA7B,EAA+B;AAC3BpB,2CAAOkC,OAAP,CAAe,UAAUM,KAAV,EAAiB;AAC5BA,8CAAMC,KAAN,CAAYV,GAAZ,CAAgB,UAACC,IAAD,EAAMC,CAAN,EAAW;AACvBD,iDAAKK,IAAL,CAAUC,OAAV,GAAoBE,MAAMvC,EAA1B;AACA;AACA,mDAAO+B,IAAP;AACH,yCAJD;AAKAQ,8CAAMC,KAAN,CAAYP,OAAZ,CAAoB,UAAUO,KAAV,EAAiB;AACjCF,mDAAOG,IAAP,CAAYD,KAAZ;AACH,yCAFD;AAGH,qCATD;AAUH;;qCAEEF,M;;;;;kEAAejD,IAAIG,IAAJ,GAAW,EAACG,KAAI,SAAL,EAAe4B,OAAMe,OAAOnB,MAA5B,EAAmC7B,MAAKgD,MAAxC,E;;;;;;;;;;;;;;;;;;;qGAINjD,G;;;;;;AACfW,kC,GAAOX,IAAIY,M,CAAXD,E;;uCACW,uBAAa0B,UAAb,CAAwB,EAACc,OAAM,CAAC,EAACxC,IAAGA,EAAJ,EAAD,CAAP,EAAxB,EAA0C,IAA1C,EAA+C,IAA/C,C;;;AAAfD,sC;AACAyC,qC,GAAM,I;;AACV,oCAAGzC,UAAUA,OAAOoB,MAAP,GAAgB,CAA7B,EAA+B;AAC3BqB,4CAAQzC,OAAO,CAAP,EAAUyC,KAAV,CAAgBhC,MAAhB,CAAuB,UAAUuB,IAAV,EAAgB;AAC3C,+CAAOA,KAAK/B,EAAL,IAAUA,EAAjB;AACH,qCAFO,CAAR;AAGH;;qCAEEwC,K;;;;;kEAAcnD,IAAIG,IAAJ,GAAW,EAACG,KAAI,MAAL,EAAYL,MAAKkD,KAAjB,E;;;kEACrBnD,IAAIK,KAAJ,GAAY,EAACC,KAAK,SAAN,E;;;;;;;;;;;;;;;;;;;qGAIQN,G;;;;;;AACnBiB,oC,GAAQjB,IAAIgB,K,CAAZC,I;AACJG,uC,GAAUC,KAAKC,KAAL,CAAWL,IAAX,C;AACVY,qC,GAAQ,E;;AACZ,oCAAGT,WAAWA,QAAQU,MAAR,IAAiB,CAA/B,EAAiC;AAC7B,wCAAG,UAASV,QAAQ,CAAR,CAAZ,EAAuB;AACnBS,8CAAMT,QAAQ,CAAR,CAAN,IAAoB,CAApB;AACH,qCAFD,MAEK;AACDS,8CAAMT,QAAQ,CAAR,CAAN,IAAoB,CAAC,CAArB;AACH;AACJ;;uCACkB,uBAAaiB,UAAb,CAAwB,IAAxB,EAA6BR,KAA7B,EAAmC,IAAnC,C;;;AAAfnB,sC;;uCAEgB,sBAAa4B,OAAb,CAAqB,EAACC,MAAK,CAAN,EAArB,C;;;AAAdC,qC;;AACN;AACA,oCAAG9B,UAAUA,OAAOoB,MAAP,GAAgB,CAA7B,EAA+B;AAC3BpB,2CAAO+B,GAAP,CAAW,UAACC,IAAD,EAAMC,CAAN,EAAW;;AAElB,4CAAGH,SAASA,MAAMV,MAAN,GAAe,CAA3B,EAA6B;AAC7BU,kDAAMI,OAAN,CAAc,UAAUC,IAAV,CAAc,cAAd,EAA8B;AACxC,oDAAGH,KAAKI,GAAL,KAAaD,KAAKlC,EAArB,EAAwB;AACpB+B,yDAAKK,IAAL,CAAUR,IAAV,GAAiBM,KAAKN,IAAtB;AACH;AACJ,6CAJD;AAKH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,+CAAOG,IAAP;AACH,qCAlBG;AAmBH;;qCAEEhC,M;;;;;kEAAeV,IAAIG,IAAJ,GAAW,EAACG,KAAI,MAAL,EAAYL,MAAKS,MAAjB,E;;;kEACtBV,IAAIK,KAAJ,GAAU,EAACC,KAAK,SAAN,E;;;;;;;;;;;;;;;;;;;qGAGCN,G;;;;;;AACVW,kC,GAAOX,IAAIY,M,CAAXD,E;;uCACa,uBAAa0C,QAAb,CAAsB1C,EAAtB,C;;;AAAfD,sC;;uCAEc,sBAAa4B,OAAb,CAAqB,EAACC,MAAK,CAAN,EAArB,C;;;AAAdC,qC;;AACN,oCAAG9B,MAAH,EAAW;AACP,wCAAG8B,SAASA,MAAMV,MAAN,GAAe,CAA3B,EAA6B;AACzBU,8CAAMI,OAAN,CAAc,UAAUC,IAAV,CAAc,cAAd,EAA8B;AACxC,gDAAGnC,OAAOoC,GAAP,KAAeD,KAAKlC,EAAvB,EAA0B;AACtBD,uDAAOqC,IAAP,CAAYR,IAAZ,GAAmBM,KAAKN,IAAxB;AACH;AACJ,yCAJD;AAKH;AACJ;;qCAEE7B,M;;;;;kEAAeV,IAAIG,IAAJ,GAAW,EAACG,KAAI,MAAL,EAAYL,MAAKS,MAAjB,E;;;kEACtBV,IAAIK,KAAJ,GAAY,EAACC,KAAK,SAAN,E;;;;;;;;;;;;;;;;;;;;;kBAKZP,e","file":"eventController.js","sourcesContent":["/**\r\n * Created by chen on 17-8-23.\r\n */\r\nconst {Parser}=require('../log/log');\r\nconst logger={};\r\nParser(logger,'EventController.js');\r\nimport EventService from '../services/eventService';\r\nimport HostsService from '../services/hostService';\r\n//const uuidv1=require('uuid/v1');\r\n\r\nclass EventController {\r\n    static async add_event(ctx){\r\n        const data = ctx.request.body;\r\n        logger.info(data);\r\n\r\n        if(!data) return ctx.error={ msg: '发送数据失败!' };\r\n        const isExist = await EventService.isExist({typeCode:data.typeCode});\r\n        //const isExist = await EventModel.findOne({ip:data.ip});\r\n\r\n        if(isExist) return ctx.error={ msg: '类型编码为[' + data.typeCode + ']的事件已存在!' };\r\n\r\n        const result = await EventService.add_event(data);\r\n\r\n        let msg = '';\r\n        if(result) {\r\n            msg = '添加事件'+ data.typeCode +'成功';\r\n            return ctx.body = {msg:msg,data:data};\r\n        }else{\r\n            msg = '添加失败';\r\n            return ctx.error={msg: msg};\r\n        }\r\n\r\n    }\r\n\r\n    static async delete_event(ctx) {\r\n        const { id } = ctx.params;\r\n        const result = await EventService.delete_event({id:id});\r\n        let msg = '';\r\n        if(result) {\r\n            msg = '删除事件成功';\r\n            return ctx.body = {msg:msg,data:result};\r\n        }else{\r\n            msg = '删除事件失败';\r\n            return ctx.error={msg: msg};\r\n        }\r\n\r\n    }\r\n\r\n    static async edit_event(ctx){\r\n        const data = ctx.request.body;\r\n        logger.info(data);\r\n        let _id = data._id;\r\n        delete data._id;\r\n        const result = await EventService.edit_event({_id:_id},data);\r\n        if(result) return ctx.body = {msg:'修改事件成功',data:result};\r\n        return ctx.error={msg: '修改事件失败!'};\r\n    }\r\n\r\n    static async find_event(ctx){\r\n        const { sort,range,filter } = ctx.query;\r\n        let sortObj = null;\r\n        if(sort){\r\n            sortObj = JSON.parse(sort);\r\n        }\r\n\r\n        let rangeObj = null;\r\n        if(range){\r\n            rangeObj = JSON.parse(range);\r\n        }\r\n\r\n        let filterObj = null;\r\n        if(filter && \"{}\" !==filter){\r\n            let obj = JSON.parse(filter);\r\n            if(obj && Array.isArray(obj.id)){\r\n                filterObj = {id:{$in:obj.id}};\r\n            }else{\r\n                filterObj = obj;\r\n            }\r\n        }\r\n        let sortP = {};\r\n        if(sortObj && sortObj.length >=2){\r\n            if('ASC' ===sortObj[1]){\r\n                sortP[sortObj[0]] = 1\r\n            }else{\r\n                sortP[sortObj[0]] = -1\r\n            }\r\n        }\r\n\r\n        let pageStart = 0,pageEnd = 0;\r\n        if(rangeObj && rangeObj.length >=2){\r\n            pageStart = rangeObj[0];\r\n            pageEnd = rangeObj[1];\r\n        }\r\n\r\n        const total = await EventService.getTotal();\r\n\r\n        const pagination = {};\r\n        pagination.pageStart = pageStart;\r\n        pagination.pageSize = pageEnd-pageStart+1;\r\n        let result = null;\r\n        if(sortP){\r\n            if(rangeObj){\r\n                let pageStart = 0,pageEnd = 0;\r\n                if(rangeObj && rangeObj.length >=2){\r\n                    pageStart = rangeObj[0];\r\n                    pageEnd = rangeObj[1];\r\n                }\r\n                const pagination = {};\r\n                pagination.pageStart = pageStart;\r\n                pagination.pageSize = pageEnd-pageStart+25;\r\n                result = await EventService.find_event(filterObj,sortP,pagination);\r\n            }else{\r\n                result = await EventService.find_event(filterObj,sortP);\r\n            }\r\n        }else{\r\n            if(rangeObj){\r\n                let pageStart = 0,pageEnd = 0;\r\n                if(rangeObj && rangeObj.length >=2){\r\n                    pageStart = rangeObj[0];\r\n                    pageEnd = rangeObj[1];\r\n                }\r\n                const pagination = {};\r\n                pagination.pageStart = pageStart;\r\n                pagination.pageSize = pageEnd-pageStart+25;\r\n                result = await EventService.find_event(filterObj,null,pagination);\r\n            }else{\r\n                result = await EventService.find_event(filterObj);\r\n            }\r\n        }\r\n\r\n        const hosts = await HostsService.findAll({port:1});\r\n        //const cameras = await CamerasService.findAll({id:1});\r\n        if(result && result.length > 0){\r\n            result.map((item,i) =>{\r\n\r\n                if(hosts && hosts.length > 0){\r\n                    hosts.forEach(function (host/*,index,arr*/) {\r\n                        if(item.hid === host.id){\r\n                            item._doc.port = host.port;\r\n                        }\r\n                    });\r\n                }\r\n                // if(cameras && cameras.length > 0){\r\n                //     hosts.forEach(function (camera,index,arr) {\r\n                //         if(item.pid === camera.id){\r\n                //             item.ip = host.ip;\r\n                //         }\r\n                //    });\r\n                // }\r\n\r\n                return item;\r\n            });\r\n        }\r\n        // let result = await EventService.find_event(filterObj,sortP,pagination);\r\n        if(result) return ctx.body = {msg:'查询事件',data:result,total:total};\r\n        return ctx.error={msg: '没有找到事件!'};\r\n    }\r\n\r\n    static async find_eventVideo(ctx){\r\n        const {filter } = ctx.query;\r\n        let filterObj = null;\r\n        if(filter && \"{}\" !==filter){\r\n            let obj = JSON.parse(filter);\r\n            if(obj && Array.isArray(obj.id)){\r\n                filterObj = {id:{$in:obj.id}};\r\n            }else{\r\n                filterObj = obj;\r\n            }\r\n        }\r\n\r\n        let result = await EventService.find_event({id:filterObj.eventId});\r\n        let videos=[];\r\n        if(result && result.length > 0){\r\n            result.forEach(function (event) {\r\n                event.video.map((item,i) =>{\r\n                    item._doc.eventId = event.id;\r\n                    //item._doc.id = uuidv1();\r\n                    return item;\r\n                });\r\n                event.video.forEach(function (video) {\r\n                    videos.push(video);\r\n                });\r\n            });\r\n        }\r\n\r\n        if(videos) return ctx.body = {msg:'事件关联摄像头',total:videos.length,data:videos};\r\n\r\n    }\r\n\r\n    static async findVideo_one(ctx){\r\n        const { id } = ctx.params;\r\n        let result = await EventService.find_event({video:[{id:id}]},null,null);\r\n        let video=null;\r\n        if(result && result.length > 0){\r\n            video = result[0].video.filter(function (item) {\r\n                return item.id ==id;\r\n            })\r\n        }\r\n\r\n        if(video) return ctx.body = {msg:'查询事件',data:video};\r\n        return ctx.error = {msg: '调取录像失败!'};\r\n\r\n    }\r\n\r\n    static async find_event_noPage(ctx){\r\n        const { sort} = ctx.query;\r\n        let sortObj = JSON.parse(sort);\r\n        let sortP = {};\r\n        if(sortObj && sortObj.length >=2){\r\n            if('ASC' ===sortObj[1]){\r\n                sortP[sortObj[0]] = 1\r\n            }else{\r\n                sortP[sortObj[0]] = -1\r\n            }\r\n        }\r\n        let result = await EventService.find_event(null,sortP,null);\r\n\r\n        const hosts = await HostsService.findAll({port:1});\r\n        //const cameras = await CamerasService.findAll({id:1});\r\n        if(result && result.length > 0){\r\n            result.map((item,i) =>{\r\n\r\n                if(hosts && hosts.length > 0){\r\n                hosts.forEach(function (host/*,index,arr*/) {\r\n                    if(item.hid === host.id){\r\n                        item._doc.port = host.port;\r\n                    }\r\n                });\r\n            }\r\n            // if(cameras && cameras.length > 0){\r\n            //     hosts.forEach(function (camera,index,arr) {\r\n            //         if(item.pid === camera.id){\r\n            //             item.ip = host.ip;\r\n            //         }\r\n            //    });\r\n            // }\r\n\r\n            return item;\r\n        });\r\n        }\r\n\r\n        if(result) return ctx.body = {msg:'查询事件',data:result};\r\n        return ctx.error={msg: '没有找到事件!'};\r\n    }\r\n\r\n    static async find_one(ctx){\r\n        const { id } = ctx.params;\r\n        const result = await EventService.find_one(id);\r\n\r\n        const hosts = await HostsService.findAll({port:1});\r\n        if(result ){\r\n            if(hosts && hosts.length > 0){\r\n                hosts.forEach(function (host/*,index,arr*/) {\r\n                    if(result.hid === host.id){\r\n                        result._doc.port = host.port;\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        if(result) return ctx.body = {msg:'查询事件',data:result};\r\n        return ctx.error = {msg: '没有找到事件!'};\r\n    }\r\n\r\n}\r\n\r\nexport default EventController;"]}